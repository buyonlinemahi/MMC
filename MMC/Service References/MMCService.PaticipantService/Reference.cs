//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMC.MMCService.PaticipantService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Adjuster", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Adjuster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdjAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdjAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdjCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdjEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdjFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdjFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdjLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdjPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdjStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdjStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdjZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdjusterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClientIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdjAddress1 {
            get {
                return this.AdjAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AdjAddress1Field, value) != true)) {
                    this.AdjAddress1Field = value;
                    this.RaisePropertyChanged("AdjAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdjAddress2 {
            get {
                return this.AdjAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AdjAddress2Field, value) != true)) {
                    this.AdjAddress2Field = value;
                    this.RaisePropertyChanged("AdjAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdjCity {
            get {
                return this.AdjCityField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjCityField, value) != true)) {
                    this.AdjCityField = value;
                    this.RaisePropertyChanged("AdjCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdjEMail {
            get {
                return this.AdjEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjEMailField, value) != true)) {
                    this.AdjEMailField = value;
                    this.RaisePropertyChanged("AdjEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdjFax {
            get {
                return this.AdjFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjFaxField, value) != true)) {
                    this.AdjFaxField = value;
                    this.RaisePropertyChanged("AdjFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdjFirstName {
            get {
                return this.AdjFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjFirstNameField, value) != true)) {
                    this.AdjFirstNameField = value;
                    this.RaisePropertyChanged("AdjFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdjLastName {
            get {
                return this.AdjLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjLastNameField, value) != true)) {
                    this.AdjLastNameField = value;
                    this.RaisePropertyChanged("AdjLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdjPhone {
            get {
                return this.AdjPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjPhoneField, value) != true)) {
                    this.AdjPhoneField = value;
                    this.RaisePropertyChanged("AdjPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdjStateId {
            get {
                return this.AdjStateIdField;
            }
            set {
                if ((this.AdjStateIdField.Equals(value) != true)) {
                    this.AdjStateIdField = value;
                    this.RaisePropertyChanged("AdjStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdjStateName {
            get {
                return this.AdjStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjStateNameField, value) != true)) {
                    this.AdjStateNameField = value;
                    this.RaisePropertyChanged("AdjStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdjZip {
            get {
                return this.AdjZipField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjZipField, value) != true)) {
                    this.AdjZipField = value;
                    this.RaisePropertyChanged("AdjZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdjusterID {
            get {
                return this.AdjusterIDField;
            }
            set {
                if ((this.AdjusterIDField.Equals(value) != true)) {
                    this.AdjusterIDField = value;
                    this.RaisePropertyChanged("AdjusterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedAdjuster", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedAdjuster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.Adjuster[] AdjusterDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.Adjuster[] AdjusterDetails {
            get {
                return this.AdjusterDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjusterDetailsField, value) != true)) {
                    this.AdjusterDetailsField = value;
                    this.RaisePropertyChanged("AdjusterDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Physician", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Physician : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysNPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysQualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhysSpecialtyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysSpecialtyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhysStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhysicianIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysAddress1 {
            get {
                return this.PhysAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PhysAddress1Field, value) != true)) {
                    this.PhysAddress1Field = value;
                    this.RaisePropertyChanged("PhysAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysAddress2 {
            get {
                return this.PhysAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PhysAddress2Field, value) != true)) {
                    this.PhysAddress2Field = value;
                    this.RaisePropertyChanged("PhysAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysCity {
            get {
                return this.PhysCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysCityField, value) != true)) {
                    this.PhysCityField = value;
                    this.RaisePropertyChanged("PhysCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysEMail {
            get {
                return this.PhysEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysEMailField, value) != true)) {
                    this.PhysEMailField = value;
                    this.RaisePropertyChanged("PhysEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysFax {
            get {
                return this.PhysFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysFaxField, value) != true)) {
                    this.PhysFaxField = value;
                    this.RaisePropertyChanged("PhysFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysFirstName {
            get {
                return this.PhysFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysFirstNameField, value) != true)) {
                    this.PhysFirstNameField = value;
                    this.RaisePropertyChanged("PhysFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysLastName {
            get {
                return this.PhysLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysLastNameField, value) != true)) {
                    this.PhysLastNameField = value;
                    this.RaisePropertyChanged("PhysLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysNPI {
            get {
                return this.PhysNPIField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysNPIField, value) != true)) {
                    this.PhysNPIField = value;
                    this.RaisePropertyChanged("PhysNPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysNotes {
            get {
                return this.PhysNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysNotesField, value) != true)) {
                    this.PhysNotesField = value;
                    this.RaisePropertyChanged("PhysNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysPhone {
            get {
                return this.PhysPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysPhoneField, value) != true)) {
                    this.PhysPhoneField = value;
                    this.RaisePropertyChanged("PhysPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysQualification {
            get {
                return this.PhysQualificationField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysQualificationField, value) != true)) {
                    this.PhysQualificationField = value;
                    this.RaisePropertyChanged("PhysQualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhysSpecialtyId {
            get {
                return this.PhysSpecialtyIdField;
            }
            set {
                if ((this.PhysSpecialtyIdField.Equals(value) != true)) {
                    this.PhysSpecialtyIdField = value;
                    this.RaisePropertyChanged("PhysSpecialtyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysSpecialtyName {
            get {
                return this.PhysSpecialtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysSpecialtyNameField, value) != true)) {
                    this.PhysSpecialtyNameField = value;
                    this.RaisePropertyChanged("PhysSpecialtyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhysStateId {
            get {
                return this.PhysStateIdField;
            }
            set {
                if ((this.PhysStateIdField.Equals(value) != true)) {
                    this.PhysStateIdField = value;
                    this.RaisePropertyChanged("PhysStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysStateName {
            get {
                return this.PhysStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysStateNameField, value) != true)) {
                    this.PhysStateNameField = value;
                    this.RaisePropertyChanged("PhysStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysZip {
            get {
                return this.PhysZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysZipField, value) != true)) {
                    this.PhysZipField = value;
                    this.RaisePropertyChanged("PhysZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhysicianId {
            get {
                return this.PhysicianIdField;
            }
            set {
                if ((this.PhysicianIdField.Equals(value) != true)) {
                    this.PhysicianIdField = value;
                    this.RaisePropertyChanged("PhysicianId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedPhysician", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedPhysician : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.Physician[] PhysicianDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.Physician[] PhysicianDetails {
            get {
                return this.PhysicianDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicianDetailsField, value) != true)) {
                    this.PhysicianDetailsField = value;
                    this.RaisePropertyChanged("PhysicianDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vendor", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Vendor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress1 {
            get {
                return this.VendorAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress1Field, value) != true)) {
                    this.VendorAddress1Field = value;
                    this.RaisePropertyChanged("VendorAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress2 {
            get {
                return this.VendorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress2Field, value) != true)) {
                    this.VendorAddress2Field = value;
                    this.RaisePropertyChanged("VendorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCity {
            get {
                return this.VendorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCityField, value) != true)) {
                    this.VendorCityField = value;
                    this.RaisePropertyChanged("VendorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorFax {
            get {
                return this.VendorFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorFaxField, value) != true)) {
                    this.VendorFaxField = value;
                    this.RaisePropertyChanged("VendorFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPhone {
            get {
                return this.VendorPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPhoneField, value) != true)) {
                    this.VendorPhoneField = value;
                    this.RaisePropertyChanged("VendorPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorStateId {
            get {
                return this.VendorStateIdField;
            }
            set {
                if ((this.VendorStateIdField.Equals(value) != true)) {
                    this.VendorStateIdField = value;
                    this.RaisePropertyChanged("VendorStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorTax {
            get {
                return this.VendorTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorTaxField, value) != true)) {
                    this.VendorTaxField = value;
                    this.RaisePropertyChanged("VendorTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorZip {
            get {
                return this.VendorZipField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorZipField, value) != true)) {
                    this.VendorZipField = value;
                    this.RaisePropertyChanged("VendorZip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedVendor", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedVendor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.Vendor[] VendorDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.Vendor[] VendorDetails {
            get {
                return this.VendorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDetailsField, value) != true)) {
                    this.VendorDetailsField = value;
                    this.RaisePropertyChanged("VendorDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Insurer", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Insurer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsPhoneExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsurerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsAddress1 {
            get {
                return this.InsAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.InsAddress1Field, value) != true)) {
                    this.InsAddress1Field = value;
                    this.RaisePropertyChanged("InsAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsAddress2 {
            get {
                return this.InsAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.InsAddress2Field, value) != true)) {
                    this.InsAddress2Field = value;
                    this.RaisePropertyChanged("InsAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsCity {
            get {
                return this.InsCityField;
            }
            set {
                if ((object.ReferenceEquals(this.InsCityField, value) != true)) {
                    this.InsCityField = value;
                    this.RaisePropertyChanged("InsCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsContactName {
            get {
                return this.InsContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsContactNameField, value) != true)) {
                    this.InsContactNameField = value;
                    this.RaisePropertyChanged("InsContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsEMail {
            get {
                return this.InsEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.InsEMailField, value) != true)) {
                    this.InsEMailField = value;
                    this.RaisePropertyChanged("InsEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsFax {
            get {
                return this.InsFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.InsFaxField, value) != true)) {
                    this.InsFaxField = value;
                    this.RaisePropertyChanged("InsFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsName {
            get {
                return this.InsNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsNameField, value) != true)) {
                    this.InsNameField = value;
                    this.RaisePropertyChanged("InsName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsPhone {
            get {
                return this.InsPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.InsPhoneField, value) != true)) {
                    this.InsPhoneField = value;
                    this.RaisePropertyChanged("InsPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsPhoneExtension {
            get {
                return this.InsPhoneExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.InsPhoneExtensionField, value) != true)) {
                    this.InsPhoneExtensionField = value;
                    this.RaisePropertyChanged("InsPhoneExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsStateId {
            get {
                return this.InsStateIdField;
            }
            set {
                if ((this.InsStateIdField.Equals(value) != true)) {
                    this.InsStateIdField = value;
                    this.RaisePropertyChanged("InsStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsStateName {
            get {
                return this.InsStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsStateNameField, value) != true)) {
                    this.InsStateNameField = value;
                    this.RaisePropertyChanged("InsStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsZip {
            get {
                return this.InsZipField;
            }
            set {
                if ((object.ReferenceEquals(this.InsZipField, value) != true)) {
                    this.InsZipField = value;
                    this.RaisePropertyChanged("InsZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsurerID {
            get {
                return this.InsurerIDField;
            }
            set {
                if ((this.InsurerIDField.Equals(value) != true)) {
                    this.InsurerIDField = value;
                    this.RaisePropertyChanged("InsurerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedInsurer", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedInsurer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.Insurer[] InsurerDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.Insurer[] InsurerDetails {
            get {
                return this.InsurerDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.InsurerDetailsField, value) != true)) {
                    this.InsurerDetailsField = value;
                    this.RaisePropertyChanged("InsurerDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsuranceBranch", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class InsuranceBranch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsBranchAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsBranchCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsBranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsBranchStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsBranchStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsBranchZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsuranceBranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsurerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsBranchAddress {
            get {
                return this.InsBranchAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.InsBranchAddressField, value) != true)) {
                    this.InsBranchAddressField = value;
                    this.RaisePropertyChanged("InsBranchAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsBranchCity {
            get {
                return this.InsBranchCityField;
            }
            set {
                if ((object.ReferenceEquals(this.InsBranchCityField, value) != true)) {
                    this.InsBranchCityField = value;
                    this.RaisePropertyChanged("InsBranchCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsBranchName {
            get {
                return this.InsBranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsBranchNameField, value) != true)) {
                    this.InsBranchNameField = value;
                    this.RaisePropertyChanged("InsBranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsBranchStateId {
            get {
                return this.InsBranchStateIdField;
            }
            set {
                if ((this.InsBranchStateIdField.Equals(value) != true)) {
                    this.InsBranchStateIdField = value;
                    this.RaisePropertyChanged("InsBranchStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsBranchStateName {
            get {
                return this.InsBranchStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsBranchStateNameField, value) != true)) {
                    this.InsBranchStateNameField = value;
                    this.RaisePropertyChanged("InsBranchStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsBranchZip {
            get {
                return this.InsBranchZipField;
            }
            set {
                if ((object.ReferenceEquals(this.InsBranchZipField, value) != true)) {
                    this.InsBranchZipField = value;
                    this.RaisePropertyChanged("InsBranchZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsuranceBranchID {
            get {
                return this.InsuranceBranchIDField;
            }
            set {
                if ((this.InsuranceBranchIDField.Equals(value) != true)) {
                    this.InsuranceBranchIDField = value;
                    this.RaisePropertyChanged("InsuranceBranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsurerId {
            get {
                return this.InsurerIdField;
            }
            set {
                if ((this.InsurerIdField.Equals(value) != true)) {
                    this.InsurerIdField = value;
                    this.RaisePropertyChanged("InsurerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedInsuranceBranch", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedInsuranceBranch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.InsuranceBranch[] InsuranceBranchDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.InsuranceBranch[] InsuranceBranchDetails {
            get {
                return this.InsuranceBranchDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceBranchDetailsField, value) != true)) {
                    this.InsuranceBranchDetailsField = value;
                    this.RaisePropertyChanged("InsuranceBranchDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employer", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Employer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpPhoneExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpAddress1 {
            get {
                return this.EmpAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.EmpAddress1Field, value) != true)) {
                    this.EmpAddress1Field = value;
                    this.RaisePropertyChanged("EmpAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpAddress2 {
            get {
                return this.EmpAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.EmpAddress2Field, value) != true)) {
                    this.EmpAddress2Field = value;
                    this.RaisePropertyChanged("EmpAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpCity {
            get {
                return this.EmpCityField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCityField, value) != true)) {
                    this.EmpCityField = value;
                    this.RaisePropertyChanged("EmpCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpContactName {
            get {
                return this.EmpContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpContactNameField, value) != true)) {
                    this.EmpContactNameField = value;
                    this.RaisePropertyChanged("EmpContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpEMail {
            get {
                return this.EmpEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpEMailField, value) != true)) {
                    this.EmpEMailField = value;
                    this.RaisePropertyChanged("EmpEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpFax {
            get {
                return this.EmpFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpFaxField, value) != true)) {
                    this.EmpFaxField = value;
                    this.RaisePropertyChanged("EmpFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpName {
            get {
                return this.EmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNameField, value) != true)) {
                    this.EmpNameField = value;
                    this.RaisePropertyChanged("EmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpPhone {
            get {
                return this.EmpPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpPhoneField, value) != true)) {
                    this.EmpPhoneField = value;
                    this.RaisePropertyChanged("EmpPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpPhoneExtension {
            get {
                return this.EmpPhoneExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpPhoneExtensionField, value) != true)) {
                    this.EmpPhoneExtensionField = value;
                    this.RaisePropertyChanged("EmpPhoneExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmpStateId {
            get {
                return this.EmpStateIdField;
            }
            set {
                if ((this.EmpStateIdField.Equals(value) != true)) {
                    this.EmpStateIdField = value;
                    this.RaisePropertyChanged("EmpStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpStateName {
            get {
                return this.EmpStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpStateNameField, value) != true)) {
                    this.EmpStateNameField = value;
                    this.RaisePropertyChanged("EmpStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpZip {
            get {
                return this.EmpZipField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpZipField, value) != true)) {
                    this.EmpZipField = value;
                    this.RaisePropertyChanged("EmpZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployerID {
            get {
                return this.EmployerIDField;
            }
            set {
                if ((this.EmployerIDField.Equals(value) != true)) {
                    this.EmployerIDField = value;
                    this.RaisePropertyChanged("EmployerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedEmployer", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedEmployer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.Employer[] EmployerDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.Employer[] EmployerDetails {
            get {
                return this.EmployerDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployerDetailsField, value) != true)) {
                    this.EmployerDetailsField = value;
                    this.RaisePropertyChanged("EmployerDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployerSubsidiary", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class EmployerSubsidiary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMPSubsidiaryAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMPSubsidiaryAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMPSubsidiaryCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMPSubsidiaryEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMPSubsidiaryFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EMPSubsidiaryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMPSubsidiaryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMPSubsidiaryPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EMPSubsidiaryStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMPSubsidiaryZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpSubsidiaryStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPSubsidiaryAddress {
            get {
                return this.EMPSubsidiaryAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPSubsidiaryAddressField, value) != true)) {
                    this.EMPSubsidiaryAddressField = value;
                    this.RaisePropertyChanged("EMPSubsidiaryAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPSubsidiaryAddress2 {
            get {
                return this.EMPSubsidiaryAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.EMPSubsidiaryAddress2Field, value) != true)) {
                    this.EMPSubsidiaryAddress2Field = value;
                    this.RaisePropertyChanged("EMPSubsidiaryAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPSubsidiaryCity {
            get {
                return this.EMPSubsidiaryCityField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPSubsidiaryCityField, value) != true)) {
                    this.EMPSubsidiaryCityField = value;
                    this.RaisePropertyChanged("EMPSubsidiaryCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPSubsidiaryEmail {
            get {
                return this.EMPSubsidiaryEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPSubsidiaryEmailField, value) != true)) {
                    this.EMPSubsidiaryEmailField = value;
                    this.RaisePropertyChanged("EMPSubsidiaryEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPSubsidiaryFax {
            get {
                return this.EMPSubsidiaryFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPSubsidiaryFaxField, value) != true)) {
                    this.EMPSubsidiaryFaxField = value;
                    this.RaisePropertyChanged("EMPSubsidiaryFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EMPSubsidiaryID {
            get {
                return this.EMPSubsidiaryIDField;
            }
            set {
                if ((this.EMPSubsidiaryIDField.Equals(value) != true)) {
                    this.EMPSubsidiaryIDField = value;
                    this.RaisePropertyChanged("EMPSubsidiaryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPSubsidiaryName {
            get {
                return this.EMPSubsidiaryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPSubsidiaryNameField, value) != true)) {
                    this.EMPSubsidiaryNameField = value;
                    this.RaisePropertyChanged("EMPSubsidiaryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPSubsidiaryPhone {
            get {
                return this.EMPSubsidiaryPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPSubsidiaryPhoneField, value) != true)) {
                    this.EMPSubsidiaryPhoneField = value;
                    this.RaisePropertyChanged("EMPSubsidiaryPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EMPSubsidiaryStateId {
            get {
                return this.EMPSubsidiaryStateIdField;
            }
            set {
                if ((this.EMPSubsidiaryStateIdField.Equals(value) != true)) {
                    this.EMPSubsidiaryStateIdField = value;
                    this.RaisePropertyChanged("EMPSubsidiaryStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMPSubsidiaryZip {
            get {
                return this.EMPSubsidiaryZipField;
            }
            set {
                if ((object.ReferenceEquals(this.EMPSubsidiaryZipField, value) != true)) {
                    this.EMPSubsidiaryZipField = value;
                    this.RaisePropertyChanged("EMPSubsidiaryZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpSubsidiaryStateName {
            get {
                return this.EmpSubsidiaryStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpSubsidiaryStateNameField, value) != true)) {
                    this.EmpSubsidiaryStateNameField = value;
                    this.RaisePropertyChanged("EmpSubsidiaryStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployerId {
            get {
                return this.EmployerIdField;
            }
            set {
                if ((this.EmployerIdField.Equals(value) != true)) {
                    this.EmployerIdField = value;
                    this.RaisePropertyChanged("EmployerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedEmployerSubsidiary", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedEmployerSubsidiary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.EmployerSubsidiary[] EmployerSubsidiaryDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.EmployerSubsidiary[] EmployerSubsidiaryDetails {
            get {
                return this.EmployerSubsidiaryDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployerSubsidiaryDetailsField, value) != true)) {
                    this.EmployerSubsidiaryDetailsField = value;
                    this.RaisePropertyChanged("EmployerSubsidiaryDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseManager", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class CaseManager : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CMStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CMZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseManagerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMAddress1 {
            get {
                return this.CMAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CMAddress1Field, value) != true)) {
                    this.CMAddress1Field = value;
                    this.RaisePropertyChanged("CMAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMAddress2 {
            get {
                return this.CMAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CMAddress2Field, value) != true)) {
                    this.CMAddress2Field = value;
                    this.RaisePropertyChanged("CMAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMCity {
            get {
                return this.CMCityField;
            }
            set {
                if ((object.ReferenceEquals(this.CMCityField, value) != true)) {
                    this.CMCityField = value;
                    this.RaisePropertyChanged("CMCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMEmail {
            get {
                return this.CMEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CMEmailField, value) != true)) {
                    this.CMEmailField = value;
                    this.RaisePropertyChanged("CMEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMFax {
            get {
                return this.CMFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.CMFaxField, value) != true)) {
                    this.CMFaxField = value;
                    this.RaisePropertyChanged("CMFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMFirstName {
            get {
                return this.CMFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CMFirstNameField, value) != true)) {
                    this.CMFirstNameField = value;
                    this.RaisePropertyChanged("CMFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMLastName {
            get {
                return this.CMLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CMLastNameField, value) != true)) {
                    this.CMLastNameField = value;
                    this.RaisePropertyChanged("CMLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMNotes {
            get {
                return this.CMNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.CMNotesField, value) != true)) {
                    this.CMNotesField = value;
                    this.RaisePropertyChanged("CMNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMPhone {
            get {
                return this.CMPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CMPhoneField, value) != true)) {
                    this.CMPhoneField = value;
                    this.RaisePropertyChanged("CMPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CMStateId {
            get {
                return this.CMStateIdField;
            }
            set {
                if ((this.CMStateIdField.Equals(value) != true)) {
                    this.CMStateIdField = value;
                    this.RaisePropertyChanged("CMStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CMZip {
            get {
                return this.CMZipField;
            }
            set {
                if ((object.ReferenceEquals(this.CMZipField, value) != true)) {
                    this.CMZipField = value;
                    this.RaisePropertyChanged("CMZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseManagerID {
            get {
                return this.CaseManagerIDField;
            }
            set {
                if ((this.CaseManagerIDField.Equals(value) != true)) {
                    this.CaseManagerIDField = value;
                    this.RaisePropertyChanged("CaseManagerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedCaseManager", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedCaseManager : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.CaseManager[] CaseManagerDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.CaseManager[] CaseManagerDetails {
            get {
                return this.CaseManagerDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseManagerDetailsField, value) != true)) {
                    this.CaseManagerDetailsField = value;
                    this.RaisePropertyChanged("CaseManagerDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThirdPartyAdministrator", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ThirdPartyAdministrator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPAAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPAAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPACityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPAFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TPAIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPANameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPAPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TPAStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPAZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPAAddress {
            get {
                return this.TPAAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.TPAAddressField, value) != true)) {
                    this.TPAAddressField = value;
                    this.RaisePropertyChanged("TPAAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPAAddress2 {
            get {
                return this.TPAAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TPAAddress2Field, value) != true)) {
                    this.TPAAddress2Field = value;
                    this.RaisePropertyChanged("TPAAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPACity {
            get {
                return this.TPACityField;
            }
            set {
                if ((object.ReferenceEquals(this.TPACityField, value) != true)) {
                    this.TPACityField = value;
                    this.RaisePropertyChanged("TPACity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPAFax {
            get {
                return this.TPAFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TPAFaxField, value) != true)) {
                    this.TPAFaxField = value;
                    this.RaisePropertyChanged("TPAFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TPAID {
            get {
                return this.TPAIDField;
            }
            set {
                if ((this.TPAIDField.Equals(value) != true)) {
                    this.TPAIDField = value;
                    this.RaisePropertyChanged("TPAID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPAName {
            get {
                return this.TPANameField;
            }
            set {
                if ((object.ReferenceEquals(this.TPANameField, value) != true)) {
                    this.TPANameField = value;
                    this.RaisePropertyChanged("TPAName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPAPhone {
            get {
                return this.TPAPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TPAPhoneField, value) != true)) {
                    this.TPAPhoneField = value;
                    this.RaisePropertyChanged("TPAPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TPAStateId {
            get {
                return this.TPAStateIdField;
            }
            set {
                if ((this.TPAStateIdField.Equals(value) != true)) {
                    this.TPAStateIdField = value;
                    this.RaisePropertyChanged("TPAStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPAZip {
            get {
                return this.TPAZipField;
            }
            set {
                if ((object.ReferenceEquals(this.TPAZipField, value) != true)) {
                    this.TPAZipField = value;
                    this.RaisePropertyChanged("TPAZip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedThirdPartyAdministrator", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedThirdPartyAdministrator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.ThirdPartyAdministrator[] ThirdPartyAdministratorDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.ThirdPartyAdministrator[] ThirdPartyAdministratorDetails {
            get {
                return this.ThirdPartyAdministratorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ThirdPartyAdministratorDetailsField, value) != true)) {
                    this.ThirdPartyAdministratorDetailsField = value;
                    this.RaisePropertyChanged("ThirdPartyAdministratorDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThirdPartyAdministratorBranch", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ThirdPartyAdministratorBranch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPABranchAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPABranchAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPABranchCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPABranchFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TPABranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPABranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPABranchPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TPABranchStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPABranchZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TPAIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPABranchAddress {
            get {
                return this.TPABranchAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.TPABranchAddressField, value) != true)) {
                    this.TPABranchAddressField = value;
                    this.RaisePropertyChanged("TPABranchAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPABranchAddress2 {
            get {
                return this.TPABranchAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TPABranchAddress2Field, value) != true)) {
                    this.TPABranchAddress2Field = value;
                    this.RaisePropertyChanged("TPABranchAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPABranchCity {
            get {
                return this.TPABranchCityField;
            }
            set {
                if ((object.ReferenceEquals(this.TPABranchCityField, value) != true)) {
                    this.TPABranchCityField = value;
                    this.RaisePropertyChanged("TPABranchCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPABranchFax {
            get {
                return this.TPABranchFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TPABranchFaxField, value) != true)) {
                    this.TPABranchFaxField = value;
                    this.RaisePropertyChanged("TPABranchFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TPABranchID {
            get {
                return this.TPABranchIDField;
            }
            set {
                if ((this.TPABranchIDField.Equals(value) != true)) {
                    this.TPABranchIDField = value;
                    this.RaisePropertyChanged("TPABranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPABranchName {
            get {
                return this.TPABranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TPABranchNameField, value) != true)) {
                    this.TPABranchNameField = value;
                    this.RaisePropertyChanged("TPABranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPABranchPhone {
            get {
                return this.TPABranchPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TPABranchPhoneField, value) != true)) {
                    this.TPABranchPhoneField = value;
                    this.RaisePropertyChanged("TPABranchPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TPABranchStateId {
            get {
                return this.TPABranchStateIdField;
            }
            set {
                if ((this.TPABranchStateIdField.Equals(value) != true)) {
                    this.TPABranchStateIdField = value;
                    this.RaisePropertyChanged("TPABranchStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPABranchZip {
            get {
                return this.TPABranchZipField;
            }
            set {
                if ((object.ReferenceEquals(this.TPABranchZipField, value) != true)) {
                    this.TPABranchZipField = value;
                    this.RaisePropertyChanged("TPABranchZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TPAID {
            get {
                return this.TPAIDField;
            }
            set {
                if ((this.TPAIDField.Equals(value) != true)) {
                    this.TPAIDField = value;
                    this.RaisePropertyChanged("TPAID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedThirdPartyAdministratorBranch", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedThirdPartyAdministratorBranch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch[] ThirdPartyAdministratorBranchDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch[] ThirdPartyAdministratorBranchDetails {
            get {
                return this.ThirdPartyAdministratorBranchDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ThirdPartyAdministratorBranchDetailsField, value) != true)) {
                    this.ThirdPartyAdministratorBranchDetailsField = value;
                    this.RaisePropertyChanged("ThirdPartyAdministratorBranchDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManagedCareCompany", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ManagedCareCompany : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompAddress {
            get {
                return this.CompAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CompAddressField, value) != true)) {
                    this.CompAddressField = value;
                    this.RaisePropertyChanged("CompAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompAddress2 {
            get {
                return this.CompAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CompAddress2Field, value) != true)) {
                    this.CompAddress2Field = value;
                    this.RaisePropertyChanged("CompAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompCity {
            get {
                return this.CompCityField;
            }
            set {
                if ((object.ReferenceEquals(this.CompCityField, value) != true)) {
                    this.CompCityField = value;
                    this.RaisePropertyChanged("CompCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompName {
            get {
                return this.CompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompNameField, value) != true)) {
                    this.CompNameField = value;
                    this.RaisePropertyChanged("CompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompStateId {
            get {
                return this.CompStateIdField;
            }
            set {
                if ((this.CompStateIdField.Equals(value) != true)) {
                    this.CompStateIdField = value;
                    this.RaisePropertyChanged("CompStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompStateName {
            get {
                return this.CompStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompStateNameField, value) != true)) {
                    this.CompStateNameField = value;
                    this.RaisePropertyChanged("CompStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompZip {
            get {
                return this.CompZipField;
            }
            set {
                if ((object.ReferenceEquals(this.CompZipField, value) != true)) {
                    this.CompZipField = value;
                    this.RaisePropertyChanged("CompZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedManagedCareCompany", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedManagedCareCompany : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.ManagedCareCompany[] ManagedCareCompanyDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.ManagedCareCompany[] ManagedCareCompanyDetails {
            get {
                return this.ManagedCareCompanyDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagedCareCompanyDetailsField, value) != true)) {
                    this.ManagedCareCompanyDetailsField = value;
                    this.RaisePropertyChanged("ManagedCareCompanyDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalGroup", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class MedicalGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MGAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MGAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MGCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MGNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MGStateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MGZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicalGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MGAddress {
            get {
                return this.MGAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MGAddressField, value) != true)) {
                    this.MGAddressField = value;
                    this.RaisePropertyChanged("MGAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MGAddress2 {
            get {
                return this.MGAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.MGAddress2Field, value) != true)) {
                    this.MGAddress2Field = value;
                    this.RaisePropertyChanged("MGAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MGCity {
            get {
                return this.MGCityField;
            }
            set {
                if ((object.ReferenceEquals(this.MGCityField, value) != true)) {
                    this.MGCityField = value;
                    this.RaisePropertyChanged("MGCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MGNote {
            get {
                return this.MGNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.MGNoteField, value) != true)) {
                    this.MGNoteField = value;
                    this.RaisePropertyChanged("MGNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MGStateID {
            get {
                return this.MGStateIDField;
            }
            set {
                if ((this.MGStateIDField.Equals(value) != true)) {
                    this.MGStateIDField = value;
                    this.RaisePropertyChanged("MGStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MGZip {
            get {
                return this.MGZipField;
            }
            set {
                if ((object.ReferenceEquals(this.MGZipField, value) != true)) {
                    this.MGZipField = value;
                    this.RaisePropertyChanged("MGZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicalGroupID {
            get {
                return this.MedicalGroupIDField;
            }
            set {
                if ((this.MedicalGroupIDField.Equals(value) != true)) {
                    this.MedicalGroupIDField = value;
                    this.RaisePropertyChanged("MedicalGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalGroupName {
            get {
                return this.MedicalGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalGroupNameField, value) != true)) {
                    this.MedicalGroupNameField = value;
                    this.RaisePropertyChanged("MedicalGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedMedicalGroup", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedMedicalGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.MedicalGroup[] MedicalGroupDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.MedicalGroup[] MedicalGroupDetails {
            get {
                return this.MedicalGroupDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalGroupDetailsField, value) != true)) {
                    this.MedicalGroupDetailsField = value;
                    this.RaisePropertyChanged("MedicalGroupDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attorney", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Attorney : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttorneyFirmIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttorneyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttorneyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttEmail {
            get {
                return this.AttEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AttEmailField, value) != true)) {
                    this.AttEmailField = value;
                    this.RaisePropertyChanged("AttEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttFax {
            get {
                return this.AttFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.AttFaxField, value) != true)) {
                    this.AttFaxField = value;
                    this.RaisePropertyChanged("AttFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttPhone {
            get {
                return this.AttPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.AttPhoneField, value) != true)) {
                    this.AttPhoneField = value;
                    this.RaisePropertyChanged("AttPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttorneyFirmID {
            get {
                return this.AttorneyFirmIDField;
            }
            set {
                if ((this.AttorneyFirmIDField.Equals(value) != true)) {
                    this.AttorneyFirmIDField = value;
                    this.RaisePropertyChanged("AttorneyFirmID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttorneyID {
            get {
                return this.AttorneyIDField;
            }
            set {
                if ((this.AttorneyIDField.Equals(value) != true)) {
                    this.AttorneyIDField = value;
                    this.RaisePropertyChanged("AttorneyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttorneyName {
            get {
                return this.AttorneyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttorneyNameField, value) != true)) {
                    this.AttorneyNameField = value;
                    this.RaisePropertyChanged("AttorneyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedAttorney", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedAttorney : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.Attorney[] AttorneyDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.Attorney[] AttorneyDetails {
            get {
                return this.AttorneyDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttorneyDetailsField, value) != true)) {
                    this.AttorneyDetailsField = value;
                    this.RaisePropertyChanged("AttorneyDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttorneyFirm", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class AttorneyFirm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttStateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttorneyFirmIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttorneyFirmNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttorneyFirmTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttorneyFirmTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttAddress1 {
            get {
                return this.AttAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AttAddress1Field, value) != true)) {
                    this.AttAddress1Field = value;
                    this.RaisePropertyChanged("AttAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttAddress2 {
            get {
                return this.AttAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AttAddress2Field, value) != true)) {
                    this.AttAddress2Field = value;
                    this.RaisePropertyChanged("AttAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttCity {
            get {
                return this.AttCityField;
            }
            set {
                if ((object.ReferenceEquals(this.AttCityField, value) != true)) {
                    this.AttCityField = value;
                    this.RaisePropertyChanged("AttCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttFax {
            get {
                return this.AttFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.AttFaxField, value) != true)) {
                    this.AttFaxField = value;
                    this.RaisePropertyChanged("AttFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttPhone {
            get {
                return this.AttPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.AttPhoneField, value) != true)) {
                    this.AttPhoneField = value;
                    this.RaisePropertyChanged("AttPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttStateID {
            get {
                return this.AttStateIDField;
            }
            set {
                if ((this.AttStateIDField.Equals(value) != true)) {
                    this.AttStateIDField = value;
                    this.RaisePropertyChanged("AttStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttStateName {
            get {
                return this.AttStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttStateNameField, value) != true)) {
                    this.AttStateNameField = value;
                    this.RaisePropertyChanged("AttStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttZip {
            get {
                return this.AttZipField;
            }
            set {
                if ((object.ReferenceEquals(this.AttZipField, value) != true)) {
                    this.AttZipField = value;
                    this.RaisePropertyChanged("AttZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttorneyFirmID {
            get {
                return this.AttorneyFirmIDField;
            }
            set {
                if ((this.AttorneyFirmIDField.Equals(value) != true)) {
                    this.AttorneyFirmIDField = value;
                    this.RaisePropertyChanged("AttorneyFirmID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttorneyFirmName {
            get {
                return this.AttorneyFirmNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttorneyFirmNameField, value) != true)) {
                    this.AttorneyFirmNameField = value;
                    this.RaisePropertyChanged("AttorneyFirmName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttorneyFirmType {
            get {
                return this.AttorneyFirmTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttorneyFirmTypeField, value) != true)) {
                    this.AttorneyFirmTypeField = value;
                    this.RaisePropertyChanged("AttorneyFirmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttorneyFirmTypeID {
            get {
                return this.AttorneyFirmTypeIDField;
            }
            set {
                if ((this.AttorneyFirmTypeIDField.Equals(value) != true)) {
                    this.AttorneyFirmTypeIDField = value;
                    this.RaisePropertyChanged("AttorneyFirmTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedAttorneyFirm", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedAttorneyFirm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.AttorneyFirm[] AttorneyFirmDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.AttorneyFirm[] AttorneyFirmDetails {
            get {
                return this.AttorneyFirmDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttorneyFirmDetailsField, value) != true)) {
                    this.AttorneyFirmDetailsField = value;
                    this.RaisePropertyChanged("AttorneyFirmDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeerReview", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class PeerReview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerReviewEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerReviewFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeerReviewIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerReviewNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerReviewPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeerReviewEmail {
            get {
                return this.PeerReviewEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerReviewEmailField, value) != true)) {
                    this.PeerReviewEmailField = value;
                    this.RaisePropertyChanged("PeerReviewEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeerReviewFax {
            get {
                return this.PeerReviewFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerReviewFaxField, value) != true)) {
                    this.PeerReviewFaxField = value;
                    this.RaisePropertyChanged("PeerReviewFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeerReviewID {
            get {
                return this.PeerReviewIDField;
            }
            set {
                if ((this.PeerReviewIDField.Equals(value) != true)) {
                    this.PeerReviewIDField = value;
                    this.RaisePropertyChanged("PeerReviewID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeerReviewName {
            get {
                return this.PeerReviewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerReviewNameField, value) != true)) {
                    this.PeerReviewNameField = value;
                    this.RaisePropertyChanged("PeerReviewName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeerReviewPhone {
            get {
                return this.PeerReviewPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerReviewPhoneField, value) != true)) {
                    this.PeerReviewPhoneField = value;
                    this.RaisePropertyChanged("PeerReviewPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedPeerReview", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedPeerReview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.PeerReview[] PeerReviewDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.PeerReview[] PeerReviewDetails {
            get {
                return this.PeerReviewDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerReviewDetailsField, value) != true)) {
                    this.PeerReviewDetailsField = value;
                    this.RaisePropertyChanged("PeerReviewDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientAndRequestModel", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientAndRequestModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.PatientByReferralID PatientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemainingDecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.RequestByReferralID[] RequestDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeExtensionPNCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.PatientByReferralID Patients {
            get {
                return this.PatientsField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientsField, value) != true)) {
                    this.PatientsField = value;
                    this.RaisePropertyChanged("Patients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemainingDecision {
            get {
                return this.RemainingDecisionField;
            }
            set {
                if ((this.RemainingDecisionField.Equals(value) != true)) {
                    this.RemainingDecisionField = value;
                    this.RaisePropertyChanged("RemainingDecision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestCount {
            get {
                return this.RequestCountField;
            }
            set {
                if ((this.RequestCountField.Equals(value) != true)) {
                    this.RequestCountField = value;
                    this.RaisePropertyChanged("RequestCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.RequestByReferralID[] RequestDetail {
            get {
                return this.RequestDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestDetailField, value) != true)) {
                    this.RequestDetailField = value;
                    this.RaisePropertyChanged("RequestDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeExtensionPNCount {
            get {
                return this.TimeExtensionPNCountField;
            }
            set {
                if ((this.TimeExtensionPNCountField.Equals(value) != true)) {
                    this.TimeExtensionPNCountField = value;
                    this.RaisePropertyChanged("TimeExtensionPNCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientByReferralID", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientByReferralID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientBillingRateTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatClaimNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PatDOIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientBillingRateTypeID {
            get {
                return this.ClientBillingRateTypeIDField;
            }
            set {
                if ((this.ClientBillingRateTypeIDField.Equals(value) != true)) {
                    this.ClientBillingRateTypeIDField = value;
                    this.RaisePropertyChanged("ClientBillingRateTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatClaimNumber {
            get {
                return this.PatClaimNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PatClaimNumberField, value) != true)) {
                    this.PatClaimNumberField = value;
                    this.RaisePropertyChanged("PatClaimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PatDOI {
            get {
                return this.PatDOIField;
            }
            set {
                if ((this.PatDOIField.Equals(value) != true)) {
                    this.PatDOIField = value;
                    this.RaisePropertyChanged("PatDOI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatFirstName {
            get {
                return this.PatFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatFirstNameField, value) != true)) {
                    this.PatFirstNameField = value;
                    this.RaisePropertyChanged("PatFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatLastName {
            get {
                return this.PatLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatLastNameField, value) != true)) {
                    this.PatLastNameField = value;
                    this.RaisePropertyChanged("PatLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestByReferralID", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RequestByReferralID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DecisionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DecisionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DecisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAClinicalReasonforDecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFADurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFADurationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAGuidelinesUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RFAHCRGDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFALatestDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFANotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARelevantPortionUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFARequestModifyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARequestedTreatmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Decision {
            get {
                return this.DecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.DecisionField, value) != true)) {
                    this.DecisionField = value;
                    this.RaisePropertyChanged("Decision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DecisionDate {
            get {
                return this.DecisionDateField;
            }
            set {
                if ((this.DecisionDateField.Equals(value) != true)) {
                    this.DecisionDateField = value;
                    this.RaisePropertyChanged("DecisionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DecisionDesc {
            get {
                return this.DecisionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DecisionDescField, value) != true)) {
                    this.DecisionDescField = value;
                    this.RaisePropertyChanged("DecisionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DecisionID {
            get {
                return this.DecisionIDField;
            }
            set {
                if ((this.DecisionIDField.Equals(value) != true)) {
                    this.DecisionIDField = value;
                    this.RaisePropertyChanged("DecisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAClinicalReasonforDecision {
            get {
                return this.RFAClinicalReasonforDecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAClinicalReasonforDecisionField, value) != true)) {
                    this.RFAClinicalReasonforDecisionField = value;
                    this.RaisePropertyChanged("RFAClinicalReasonforDecision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFADuration {
            get {
                return this.RFADurationField;
            }
            set {
                if ((this.RFADurationField.Equals(value) != true)) {
                    this.RFADurationField = value;
                    this.RaisePropertyChanged("RFADuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFADurationTypeID {
            get {
                return this.RFADurationTypeIDField;
            }
            set {
                if ((this.RFADurationTypeIDField.Equals(value) != true)) {
                    this.RFADurationTypeIDField = value;
                    this.RaisePropertyChanged("RFADurationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAFrequency {
            get {
                return this.RFAFrequencyField;
            }
            set {
                if ((this.RFAFrequencyField.Equals(value) != true)) {
                    this.RFAFrequencyField = value;
                    this.RaisePropertyChanged("RFAFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAGuidelinesUtilized {
            get {
                return this.RFAGuidelinesUtilizedField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAGuidelinesUtilizedField, value) != true)) {
                    this.RFAGuidelinesUtilizedField = value;
                    this.RaisePropertyChanged("RFAGuidelinesUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RFAHCRGDate {
            get {
                return this.RFAHCRGDateField;
            }
            set {
                if ((this.RFAHCRGDateField.Equals(value) != true)) {
                    this.RFAHCRGDateField = value;
                    this.RaisePropertyChanged("RFAHCRGDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFALatestDueDate {
            get {
                return this.RFALatestDueDateField;
            }
            set {
                if ((this.RFALatestDueDateField.Equals(value) != true)) {
                    this.RFALatestDueDateField = value;
                    this.RaisePropertyChanged("RFALatestDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFANotes {
            get {
                return this.RFANotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RFANotesField, value) != true)) {
                    this.RFANotesField = value;
                    this.RaisePropertyChanged("RFANotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARelevantPortionUtilized {
            get {
                return this.RFARelevantPortionUtilizedField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARelevantPortionUtilizedField, value) != true)) {
                    this.RFARelevantPortionUtilizedField = value;
                    this.RaisePropertyChanged("RFARelevantPortionUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFARequestModifyID {
            get {
                return this.RFARequestModifyIDField;
            }
            set {
                if ((this.RFARequestModifyIDField.Equals(value) != true)) {
                    this.RFARequestModifyIDField = value;
                    this.RaisePropertyChanged("RFARequestModifyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARequestedTreatment {
            get {
                return this.RFARequestedTreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARequestedTreatmentField, value) != true)) {
                    this.RFARequestedTreatmentField = value;
                    this.RaisePropertyChanged("RFARequestedTreatment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAStatus {
            get {
                return this.RFAStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAStatusField, value) != true)) {
                    this.RFAStatusField = value;
                    this.RaisePropertyChanged("RFAStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ADR", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ADR : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADRAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADRAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADRCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ADRIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADRNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ADRStateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADRZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADRAddress {
            get {
                return this.ADRAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ADRAddressField, value) != true)) {
                    this.ADRAddressField = value;
                    this.RaisePropertyChanged("ADRAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADRAddress2 {
            get {
                return this.ADRAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ADRAddress2Field, value) != true)) {
                    this.ADRAddress2Field = value;
                    this.RaisePropertyChanged("ADRAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADRCity {
            get {
                return this.ADRCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ADRCityField, value) != true)) {
                    this.ADRCityField = value;
                    this.RaisePropertyChanged("ADRCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ADRID {
            get {
                return this.ADRIDField;
            }
            set {
                if ((this.ADRIDField.Equals(value) != true)) {
                    this.ADRIDField = value;
                    this.RaisePropertyChanged("ADRID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADRName {
            get {
                return this.ADRNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ADRNameField, value) != true)) {
                    this.ADRNameField = value;
                    this.RaisePropertyChanged("ADRName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ADRStateID {
            get {
                return this.ADRStateIDField;
            }
            set {
                if ((this.ADRStateIDField.Equals(value) != true)) {
                    this.ADRStateIDField = value;
                    this.RaisePropertyChanged("ADRStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADRZip {
            get {
                return this.ADRZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ADRZipField, value) != true)) {
                    this.ADRZipField = value;
                    this.RaisePropertyChanged("ADRZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone {
            get {
                return this.ContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true)) {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedADR", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedADR : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PaticipantService.ADR[] ADRDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PaticipantService.ADR[] ADRDetails {
            get {
                return this.ADRDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ADRDetailsField, value) != true)) {
                    this.ADRDetailsField = value;
                    this.RaisePropertyChanged("ADRDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MMCService.PaticipantService.IPaticipantService")]
    public interface IPaticipantService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addAdjuster", ReplyAction="http://tempuri.org/IPaticipantService/addAdjusterResponse")]
        int addAdjuster(MMC.MMCService.PaticipantService.Adjuster _adjuster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addAdjuster", ReplyAction="http://tempuri.org/IPaticipantService/addAdjusterResponse")]
        System.Threading.Tasks.Task<int> addAdjusterAsync(MMC.MMCService.PaticipantService.Adjuster _adjuster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateAdjuster", ReplyAction="http://tempuri.org/IPaticipantService/updateAdjusterResponse")]
        int updateAdjuster(MMC.MMCService.PaticipantService.Adjuster _adjuster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateAdjuster", ReplyAction="http://tempuri.org/IPaticipantService/updateAdjusterResponse")]
        System.Threading.Tasks.Task<int> updateAdjusterAsync(MMC.MMCService.PaticipantService.Adjuster _adjuster);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteAdjuster", ReplyAction="http://tempuri.org/IPaticipantService/deleteAdjusterResponse")]
        void deleteAdjuster(int _adjusterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteAdjuster", ReplyAction="http://tempuri.org/IPaticipantService/deleteAdjusterResponse")]
        System.Threading.Tasks.Task deleteAdjusterAsync(int _adjusterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getadjustersAll", ReplyAction="http://tempuri.org/IPaticipantService/getadjustersAllResponse")]
        MMC.MMCService.PaticipantService.Adjuster[] getadjustersAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getadjustersAll", ReplyAction="http://tempuri.org/IPaticipantService/getadjustersAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Adjuster[]> getadjustersAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAdjusterByID", ReplyAction="http://tempuri.org/IPaticipantService/getAdjusterByIDResponse")]
        MMC.MMCService.PaticipantService.Adjuster getAdjusterByID(int _adjusterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAdjusterByID", ReplyAction="http://tempuri.org/IPaticipantService/getAdjusterByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Adjuster> getAdjusterByIDAsync(int _adjusterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getadjustersByName", ReplyAction="http://tempuri.org/IPaticipantService/getadjustersByNameResponse")]
        MMC.MMCService.PaticipantService.PagedAdjuster getadjustersByName(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getadjustersByName", ReplyAction="http://tempuri.org/IPaticipantService/getadjustersByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedAdjuster> getadjustersByNameAsync(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addPhysician", ReplyAction="http://tempuri.org/IPaticipantService/addPhysicianResponse")]
        int addPhysician(MMC.MMCService.PaticipantService.Physician _physician);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addPhysician", ReplyAction="http://tempuri.org/IPaticipantService/addPhysicianResponse")]
        System.Threading.Tasks.Task<int> addPhysicianAsync(MMC.MMCService.PaticipantService.Physician _physician);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updatePhysician", ReplyAction="http://tempuri.org/IPaticipantService/updatePhysicianResponse")]
        int updatePhysician(MMC.MMCService.PaticipantService.Physician _physician);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updatePhysician", ReplyAction="http://tempuri.org/IPaticipantService/updatePhysicianResponse")]
        System.Threading.Tasks.Task<int> updatePhysicianAsync(MMC.MMCService.PaticipantService.Physician _physician);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deletePhysician", ReplyAction="http://tempuri.org/IPaticipantService/deletePhysicianResponse")]
        void deletePhysician(int _physicianID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deletePhysician", ReplyAction="http://tempuri.org/IPaticipantService/deletePhysicianResponse")]
        System.Threading.Tasks.Task deletePhysicianAsync(int _physicianID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getphysicianAll", ReplyAction="http://tempuri.org/IPaticipantService/getphysicianAllResponse")]
        MMC.MMCService.PaticipantService.Physician[] getphysicianAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getphysicianAll", ReplyAction="http://tempuri.org/IPaticipantService/getphysicianAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Physician[]> getphysicianAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getPhysicianByID", ReplyAction="http://tempuri.org/IPaticipantService/getPhysicianByIDResponse")]
        MMC.MMCService.PaticipantService.Physician getPhysicianByID(int _physicianID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getPhysicianByID", ReplyAction="http://tempuri.org/IPaticipantService/getPhysicianByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Physician> getPhysicianByIDAsync(int _physicianID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/GetPhysicianByName", ReplyAction="http://tempuri.org/IPaticipantService/GetPhysicianByNameResponse")]
        MMC.MMCService.PaticipantService.PagedPhysician GetPhysicianByName(string _searchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/GetPhysicianByName", ReplyAction="http://tempuri.org/IPaticipantService/GetPhysicianByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedPhysician> GetPhysicianByNameAsync(string _searchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/GetPhysicianByNPI", ReplyAction="http://tempuri.org/IPaticipantService/GetPhysicianByNPIResponse")]
        MMC.MMCService.PaticipantService.PagedPhysician GetPhysicianByNPI(string _searchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/GetPhysicianByNPI", ReplyAction="http://tempuri.org/IPaticipantService/GetPhysicianByNPIResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedPhysician> GetPhysicianByNPIAsync(string _searchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/GetPhysicianBySpeciality", ReplyAction="http://tempuri.org/IPaticipantService/GetPhysicianBySpecialityResponse")]
        MMC.MMCService.PaticipantService.PagedPhysician GetPhysicianBySpeciality(int _searchID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/GetPhysicianBySpeciality", ReplyAction="http://tempuri.org/IPaticipantService/GetPhysicianBySpecialityResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedPhysician> GetPhysicianBySpecialityAsync(int _searchID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getVendorsAll", ReplyAction="http://tempuri.org/IPaticipantService/getVendorsAllResponse")]
        MMC.MMCService.PaticipantService.Vendor[] getVendorsAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getVendorsAll", ReplyAction="http://tempuri.org/IPaticipantService/getVendorsAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Vendor[]> getVendorsAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getVendorByID", ReplyAction="http://tempuri.org/IPaticipantService/getVendorByIDResponse")]
        MMC.MMCService.PaticipantService.Vendor getVendorByID(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getVendorByID", ReplyAction="http://tempuri.org/IPaticipantService/getVendorByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Vendor> getVendorByIDAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addVendor", ReplyAction="http://tempuri.org/IPaticipantService/addVendorResponse")]
        int addVendor(MMC.MMCService.PaticipantService.Vendor _vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addVendor", ReplyAction="http://tempuri.org/IPaticipantService/addVendorResponse")]
        System.Threading.Tasks.Task<int> addVendorAsync(MMC.MMCService.PaticipantService.Vendor _vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateVendor", ReplyAction="http://tempuri.org/IPaticipantService/updateVendorResponse")]
        int updateVendor(MMC.MMCService.PaticipantService.Vendor _vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateVendor", ReplyAction="http://tempuri.org/IPaticipantService/updateVendorResponse")]
        System.Threading.Tasks.Task<int> updateVendorAsync(MMC.MMCService.PaticipantService.Vendor _vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteVendor", ReplyAction="http://tempuri.org/IPaticipantService/deleteVendorResponse")]
        void deleteVendor(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteVendor", ReplyAction="http://tempuri.org/IPaticipantService/deleteVendorResponse")]
        System.Threading.Tasks.Task deleteVendorAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getVendorsByName", ReplyAction="http://tempuri.org/IPaticipantService/getVendorsByNameResponse")]
        MMC.MMCService.PaticipantService.PagedVendor getVendorsByName(string searchtext, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getVendorsByName", ReplyAction="http://tempuri.org/IPaticipantService/getVendorsByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedVendor> getVendorsByNameAsync(string searchtext, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addInsurer", ReplyAction="http://tempuri.org/IPaticipantService/addInsurerResponse")]
        int addInsurer(MMC.MMCService.PaticipantService.Insurer _Insurer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addInsurer", ReplyAction="http://tempuri.org/IPaticipantService/addInsurerResponse")]
        System.Threading.Tasks.Task<int> addInsurerAsync(MMC.MMCService.PaticipantService.Insurer _Insurer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateInsurer", ReplyAction="http://tempuri.org/IPaticipantService/updateInsurerResponse")]
        int updateInsurer(MMC.MMCService.PaticipantService.Insurer _Insurer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateInsurer", ReplyAction="http://tempuri.org/IPaticipantService/updateInsurerResponse")]
        System.Threading.Tasks.Task<int> updateInsurerAsync(MMC.MMCService.PaticipantService.Insurer _Insurer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteInsurer", ReplyAction="http://tempuri.org/IPaticipantService/deleteInsurerResponse")]
        void deleteInsurer(int _InsurerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteInsurer", ReplyAction="http://tempuri.org/IPaticipantService/deleteInsurerResponse")]
        System.Threading.Tasks.Task deleteInsurerAsync(int _InsurerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsurersAll", ReplyAction="http://tempuri.org/IPaticipantService/getInsurersAllResponse")]
        MMC.MMCService.PaticipantService.Insurer[] getInsurersAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsurersAll", ReplyAction="http://tempuri.org/IPaticipantService/getInsurersAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Insurer[]> getInsurersAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsurerByID", ReplyAction="http://tempuri.org/IPaticipantService/getInsurerByIDResponse")]
        MMC.MMCService.PaticipantService.Insurer getInsurerByID(int _InsurerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsurerByID", ReplyAction="http://tempuri.org/IPaticipantService/getInsurerByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Insurer> getInsurerByIDAsync(int _InsurerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsurersByName", ReplyAction="http://tempuri.org/IPaticipantService/getInsurersByNameResponse")]
        MMC.MMCService.PaticipantService.PagedInsurer getInsurersByName(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsurersByName", ReplyAction="http://tempuri.org/IPaticipantService/getInsurersByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedInsurer> getInsurersByNameAsync(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addInsuranceBranch", ReplyAction="http://tempuri.org/IPaticipantService/addInsuranceBranchResponse")]
        int addInsuranceBranch(MMC.MMCService.PaticipantService.InsuranceBranch _insuranceBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addInsuranceBranch", ReplyAction="http://tempuri.org/IPaticipantService/addInsuranceBranchResponse")]
        System.Threading.Tasks.Task<int> addInsuranceBranchAsync(MMC.MMCService.PaticipantService.InsuranceBranch _insuranceBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateInsuranceBranch", ReplyAction="http://tempuri.org/IPaticipantService/updateInsuranceBranchResponse")]
        int updateInsuranceBranch(MMC.MMCService.PaticipantService.InsuranceBranch _insuranceBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateInsuranceBranch", ReplyAction="http://tempuri.org/IPaticipantService/updateInsuranceBranchResponse")]
        System.Threading.Tasks.Task<int> updateInsuranceBranchAsync(MMC.MMCService.PaticipantService.InsuranceBranch _insuranceBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteInsuranceBranch", ReplyAction="http://tempuri.org/IPaticipantService/deleteInsuranceBranchResponse")]
        void deleteInsuranceBranch(int _insuranceBranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteInsuranceBranch", ReplyAction="http://tempuri.org/IPaticipantService/deleteInsuranceBranchResponse")]
        System.Threading.Tasks.Task deleteInsuranceBranchAsync(int _insuranceBranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsuranceBranchesByInsurerID", ReplyAction="http://tempuri.org/IPaticipantService/getInsuranceBranchesByInsurerIDResponse")]
        MMC.MMCService.PaticipantService.PagedInsuranceBranch getInsuranceBranchesByInsurerID(int _insurerID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsuranceBranchesByInsurerID", ReplyAction="http://tempuri.org/IPaticipantService/getInsuranceBranchesByInsurerIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedInsuranceBranch> getInsuranceBranchesByInsurerIDAsync(int _insurerID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsuranceBranchesAllByInsurerID", ReplyAction="http://tempuri.org/IPaticipantService/getInsuranceBranchesAllByInsurerIDResponse")]
        MMC.MMCService.PaticipantService.InsuranceBranch[] getInsuranceBranchesAllByInsurerID(int _insurerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsuranceBranchesAllByInsurerID", ReplyAction="http://tempuri.org/IPaticipantService/getInsuranceBranchesAllByInsurerIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.InsuranceBranch[]> getInsuranceBranchesAllByInsurerIDAsync(int _insurerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsuranceBranchByID", ReplyAction="http://tempuri.org/IPaticipantService/getInsuranceBranchByIDResponse")]
        MMC.MMCService.PaticipantService.InsuranceBranch getInsuranceBranchByID(int _insuranceBranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getInsuranceBranchByID", ReplyAction="http://tempuri.org/IPaticipantService/getInsuranceBranchByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.InsuranceBranch> getInsuranceBranchByIDAsync(int _insuranceBranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addEmployer", ReplyAction="http://tempuri.org/IPaticipantService/addEmployerResponse")]
        int addEmployer(MMC.MMCService.PaticipantService.Employer _employer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addEmployer", ReplyAction="http://tempuri.org/IPaticipantService/addEmployerResponse")]
        System.Threading.Tasks.Task<int> addEmployerAsync(MMC.MMCService.PaticipantService.Employer _employer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateEmployer", ReplyAction="http://tempuri.org/IPaticipantService/updateEmployerResponse")]
        int updateEmployer(MMC.MMCService.PaticipantService.Employer _employer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateEmployer", ReplyAction="http://tempuri.org/IPaticipantService/updateEmployerResponse")]
        System.Threading.Tasks.Task<int> updateEmployerAsync(MMC.MMCService.PaticipantService.Employer _employer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteEmployer", ReplyAction="http://tempuri.org/IPaticipantService/deleteEmployerResponse")]
        void deleteEmployer(int _employerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteEmployer", ReplyAction="http://tempuri.org/IPaticipantService/deleteEmployerResponse")]
        System.Threading.Tasks.Task deleteEmployerAsync(int _employerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployersAll", ReplyAction="http://tempuri.org/IPaticipantService/getEmployersAllResponse")]
        MMC.MMCService.PaticipantService.Employer[] getEmployersAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployersAll", ReplyAction="http://tempuri.org/IPaticipantService/getEmployersAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Employer[]> getEmployersAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployerByID", ReplyAction="http://tempuri.org/IPaticipantService/getEmployerByIDResponse")]
        MMC.MMCService.PaticipantService.Employer getEmployerByID(int _employerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployerByID", ReplyAction="http://tempuri.org/IPaticipantService/getEmployerByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Employer> getEmployerByIDAsync(int _employerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployersByName", ReplyAction="http://tempuri.org/IPaticipantService/getEmployersByNameResponse")]
        MMC.MMCService.PaticipantService.PagedEmployer getEmployersByName(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployersByName", ReplyAction="http://tempuri.org/IPaticipantService/getEmployersByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedEmployer> getEmployersByNameAsync(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addEmployerSubsidiaries", ReplyAction="http://tempuri.org/IPaticipantService/addEmployerSubsidiariesResponse")]
        int addEmployerSubsidiaries(MMC.MMCService.PaticipantService.EmployerSubsidiary _employerSubsidiaries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addEmployerSubsidiaries", ReplyAction="http://tempuri.org/IPaticipantService/addEmployerSubsidiariesResponse")]
        System.Threading.Tasks.Task<int> addEmployerSubsidiariesAsync(MMC.MMCService.PaticipantService.EmployerSubsidiary _employerSubsidiaries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateEmployerSubsidiaries", ReplyAction="http://tempuri.org/IPaticipantService/updateEmployerSubsidiariesResponse")]
        int updateEmployerSubsidiaries(MMC.MMCService.PaticipantService.EmployerSubsidiary _employerSubsidiaries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateEmployerSubsidiaries", ReplyAction="http://tempuri.org/IPaticipantService/updateEmployerSubsidiariesResponse")]
        System.Threading.Tasks.Task<int> updateEmployerSubsidiariesAsync(MMC.MMCService.PaticipantService.EmployerSubsidiary _employerSubsidiaries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteEmployerSubsidiaries", ReplyAction="http://tempuri.org/IPaticipantService/deleteEmployerSubsidiariesResponse")]
        void deleteEmployerSubsidiaries(int _employerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteEmployerSubsidiaries", ReplyAction="http://tempuri.org/IPaticipantService/deleteEmployerSubsidiariesResponse")]
        System.Threading.Tasks.Task deleteEmployerSubsidiariesAsync(int _employerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesAll", ReplyAction="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesAllResponse")]
        MMC.MMCService.PaticipantService.EmployerSubsidiary[] getEmployerSubsidiariesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesAll", ReplyAction="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.EmployerSubsidiary[]> getEmployerSubsidiariesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesByID", ReplyAction="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesByIDResponse")]
        MMC.MMCService.PaticipantService.EmployerSubsidiary getEmployerSubsidiariesByID(int _employerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesByID", ReplyAction="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.EmployerSubsidiary> getEmployerSubsidiariesByIDAsync(int _employerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesByEmployerID", ReplyAction="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesByEmployerIDResponse" +
            "")]
        MMC.MMCService.PaticipantService.PagedEmployerSubsidiary getEmployerSubsidiariesByEmployerID(int _employerID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesByEmployerID", ReplyAction="http://tempuri.org/IPaticipantService/getEmployerSubsidiariesByEmployerIDResponse" +
            "")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedEmployerSubsidiary> getEmployerSubsidiariesByEmployerIDAsync(int _employerID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAllEmployerSubsidiariesByEmployerID", ReplyAction="http://tempuri.org/IPaticipantService/getAllEmployerSubsidiariesByEmployerIDRespo" +
            "nse")]
        MMC.MMCService.PaticipantService.EmployerSubsidiary[] getAllEmployerSubsidiariesByEmployerID(int _employerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAllEmployerSubsidiariesByEmployerID", ReplyAction="http://tempuri.org/IPaticipantService/getAllEmployerSubsidiariesByEmployerIDRespo" +
            "nse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.EmployerSubsidiary[]> getAllEmployerSubsidiariesByEmployerIDAsync(int _employerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addCaseManager", ReplyAction="http://tempuri.org/IPaticipantService/addCaseManagerResponse")]
        int addCaseManager(MMC.MMCService.PaticipantService.CaseManager _caseManager);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addCaseManager", ReplyAction="http://tempuri.org/IPaticipantService/addCaseManagerResponse")]
        System.Threading.Tasks.Task<int> addCaseManagerAsync(MMC.MMCService.PaticipantService.CaseManager _caseManager);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateCaseManager", ReplyAction="http://tempuri.org/IPaticipantService/updateCaseManagerResponse")]
        int updateCaseManager(MMC.MMCService.PaticipantService.CaseManager _caseManager);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateCaseManager", ReplyAction="http://tempuri.org/IPaticipantService/updateCaseManagerResponse")]
        System.Threading.Tasks.Task<int> updateCaseManagerAsync(MMC.MMCService.PaticipantService.CaseManager _caseManager);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteCaseManager", ReplyAction="http://tempuri.org/IPaticipantService/deleteCaseManagerResponse")]
        void deleteCaseManager(int _caseManagerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteCaseManager", ReplyAction="http://tempuri.org/IPaticipantService/deleteCaseManagerResponse")]
        System.Threading.Tasks.Task deleteCaseManagerAsync(int _caseManagerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getCaseManagerAll", ReplyAction="http://tempuri.org/IPaticipantService/getCaseManagerAllResponse")]
        MMC.MMCService.PaticipantService.CaseManager[] getCaseManagerAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getCaseManagerAll", ReplyAction="http://tempuri.org/IPaticipantService/getCaseManagerAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.CaseManager[]> getCaseManagerAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getCaseManagerByID", ReplyAction="http://tempuri.org/IPaticipantService/getCaseManagerByIDResponse")]
        MMC.MMCService.PaticipantService.CaseManager getCaseManagerByID(int _caseManager);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getCaseManagerByID", ReplyAction="http://tempuri.org/IPaticipantService/getCaseManagerByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.CaseManager> getCaseManagerByIDAsync(int _caseManager);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getCaseManagerByName", ReplyAction="http://tempuri.org/IPaticipantService/getCaseManagerByNameResponse")]
        MMC.MMCService.PaticipantService.PagedCaseManager getCaseManagerByName(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getCaseManagerByName", ReplyAction="http://tempuri.org/IPaticipantService/getCaseManagerByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedCaseManager> getCaseManagerByNameAsync(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addThirdPartyAdministrator", ReplyAction="http://tempuri.org/IPaticipantService/addThirdPartyAdministratorResponse")]
        int addThirdPartyAdministrator(MMC.MMCService.PaticipantService.ThirdPartyAdministrator _thirdPartyAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addThirdPartyAdministrator", ReplyAction="http://tempuri.org/IPaticipantService/addThirdPartyAdministratorResponse")]
        System.Threading.Tasks.Task<int> addThirdPartyAdministratorAsync(MMC.MMCService.PaticipantService.ThirdPartyAdministrator _thirdPartyAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateThirdPartyAdministrator", ReplyAction="http://tempuri.org/IPaticipantService/updateThirdPartyAdministratorResponse")]
        int updateThirdPartyAdministrator(MMC.MMCService.PaticipantService.ThirdPartyAdministrator _thirdPartyAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateThirdPartyAdministrator", ReplyAction="http://tempuri.org/IPaticipantService/updateThirdPartyAdministratorResponse")]
        System.Threading.Tasks.Task<int> updateThirdPartyAdministratorAsync(MMC.MMCService.PaticipantService.ThirdPartyAdministrator _thirdPartyAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteThirdPartyAdministrator", ReplyAction="http://tempuri.org/IPaticipantService/deleteThirdPartyAdministratorResponse")]
        void deleteThirdPartyAdministrator(int _thirdPartyAdministratorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteThirdPartyAdministrator", ReplyAction="http://tempuri.org/IPaticipantService/deleteThirdPartyAdministratorResponse")]
        System.Threading.Tasks.Task deleteThirdPartyAdministratorAsync(int _thirdPartyAdministratorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorsAll", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorsAllResponse")]
        MMC.MMCService.PaticipantService.ThirdPartyAdministrator[] getThirdPartyAdministratorsAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorsAll", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorsAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ThirdPartyAdministrator[]> getThirdPartyAdministratorsAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorByID", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorByIDResponse")]
        MMC.MMCService.PaticipantService.ThirdPartyAdministrator getThirdPartyAdministratorByID(int _thirdPartyAdministratorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorByID", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ThirdPartyAdministrator> getThirdPartyAdministratorByIDAsync(int _thirdPartyAdministratorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorsByName", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorsByNameResponse")]
        MMC.MMCService.PaticipantService.PagedThirdPartyAdministrator getThirdPartyAdministratorsByName(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorsByName", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorsByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedThirdPartyAdministrator> getThirdPartyAdministratorsByNameAsync(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IPaticipantService/addThirdPartyAdministratorBranchResponse")]
        int addThirdPartyAdministratorBranch(MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch _thirdPartyAdministratorBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IPaticipantService/addThirdPartyAdministratorBranchResponse")]
        System.Threading.Tasks.Task<int> addThirdPartyAdministratorBranchAsync(MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch _thirdPartyAdministratorBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IPaticipantService/updateThirdPartyAdministratorBranchResponse" +
            "")]
        int updateThirdPartyAdministratorBranch(MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch _thirdPartyAdministratorBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IPaticipantService/updateThirdPartyAdministratorBranchResponse" +
            "")]
        System.Threading.Tasks.Task<int> updateThirdPartyAdministratorBranchAsync(MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch _thirdPartyAdministratorBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IPaticipantService/deleteThirdPartyAdministratorBranchResponse" +
            "")]
        void deleteThirdPartyAdministratorBranch(int _thirdPartyAdministratorBranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IPaticipantService/deleteThirdPartyAdministratorBranchResponse" +
            "")]
        System.Threading.Tasks.Task deleteThirdPartyAdministratorBranchAsync(int _thirdPartyAdministratorBranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesAll", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesAllRespon" +
            "se")]
        MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch[] getThirdPartyAdministratorBranchesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesAll", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesAllRespon" +
            "se")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch[]> getThirdPartyAdministratorBranchesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchByID", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchByIDRespons" +
            "e")]
        MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch getThirdPartyAdministratorBranchByID(int _thirdPartyAdministratorBranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchByID", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchByIDRespons" +
            "e")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch> getThirdPartyAdministratorBranchByIDAsync(int _thirdPartyAdministratorBranchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesByTPAID", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesByTPAIDRe" +
            "sponse")]
        MMC.MMCService.PaticipantService.PagedThirdPartyAdministratorBranch getThirdPartyAdministratorBranchesByTPAID(int _thirdPartyAdministratorId, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesByTPAID", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesByTPAIDRe" +
            "sponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedThirdPartyAdministratorBranch> getThirdPartyAdministratorBranchesByTPAIDAsync(int _thirdPartyAdministratorId, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesAllByTPAI" +
            "D", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesAllByTPAI" +
            "DResponse")]
        MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch[] getThirdPartyAdministratorBranchesAllByTPAID(int _tpaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesAllByTPAI" +
            "D", ReplyAction="http://tempuri.org/IPaticipantService/getThirdPartyAdministratorBranchesAllByTPAI" +
            "DResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch[]> getThirdPartyAdministratorBranchesAllByTPAIDAsync(int _tpaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addManagedCareCompany", ReplyAction="http://tempuri.org/IPaticipantService/addManagedCareCompanyResponse")]
        int addManagedCareCompany(MMC.MMCService.PaticipantService.ManagedCareCompany _company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addManagedCareCompany", ReplyAction="http://tempuri.org/IPaticipantService/addManagedCareCompanyResponse")]
        System.Threading.Tasks.Task<int> addManagedCareCompanyAsync(MMC.MMCService.PaticipantService.ManagedCareCompany _company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateManagedCareCompany", ReplyAction="http://tempuri.org/IPaticipantService/updateManagedCareCompanyResponse")]
        int updateManagedCareCompany(MMC.MMCService.PaticipantService.ManagedCareCompany _company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateManagedCareCompany", ReplyAction="http://tempuri.org/IPaticipantService/updateManagedCareCompanyResponse")]
        System.Threading.Tasks.Task<int> updateManagedCareCompanyAsync(MMC.MMCService.PaticipantService.ManagedCareCompany _company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteManagedCareCompany", ReplyAction="http://tempuri.org/IPaticipantService/deleteManagedCareCompanyResponse")]
        void deleteManagedCareCompany(int _companyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteManagedCareCompany", ReplyAction="http://tempuri.org/IPaticipantService/deleteManagedCareCompanyResponse")]
        System.Threading.Tasks.Task deleteManagedCareCompanyAsync(int _companyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getManagedCareCompanyAll", ReplyAction="http://tempuri.org/IPaticipantService/getManagedCareCompanyAllResponse")]
        MMC.MMCService.PaticipantService.ManagedCareCompany[] getManagedCareCompanyAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getManagedCareCompanyAll", ReplyAction="http://tempuri.org/IPaticipantService/getManagedCareCompanyAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ManagedCareCompany[]> getManagedCareCompanyAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getManagedCareCompanyByID", ReplyAction="http://tempuri.org/IPaticipantService/getManagedCareCompanyByIDResponse")]
        MMC.MMCService.PaticipantService.ManagedCareCompany getManagedCareCompanyByID(int _companyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getManagedCareCompanyByID", ReplyAction="http://tempuri.org/IPaticipantService/getManagedCareCompanyByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ManagedCareCompany> getManagedCareCompanyByIDAsync(int _companyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getManagedCareCompanyByName", ReplyAction="http://tempuri.org/IPaticipantService/getManagedCareCompanyByNameResponse")]
        MMC.MMCService.PaticipantService.PagedManagedCareCompany getManagedCareCompanyByName(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getManagedCareCompanyByName", ReplyAction="http://tempuri.org/IPaticipantService/getManagedCareCompanyByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedManagedCareCompany> getManagedCareCompanyByNameAsync(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addMedicalGroup", ReplyAction="http://tempuri.org/IPaticipantService/addMedicalGroupResponse")]
        int addMedicalGroup(MMC.MMCService.PaticipantService.MedicalGroup _medicalGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addMedicalGroup", ReplyAction="http://tempuri.org/IPaticipantService/addMedicalGroupResponse")]
        System.Threading.Tasks.Task<int> addMedicalGroupAsync(MMC.MMCService.PaticipantService.MedicalGroup _medicalGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateMedicalGroup", ReplyAction="http://tempuri.org/IPaticipantService/updateMedicalGroupResponse")]
        int updateMedicalGroup(MMC.MMCService.PaticipantService.MedicalGroup _medicalGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateMedicalGroup", ReplyAction="http://tempuri.org/IPaticipantService/updateMedicalGroupResponse")]
        System.Threading.Tasks.Task<int> updateMedicalGroupAsync(MMC.MMCService.PaticipantService.MedicalGroup _medicalGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteMedicalGroup", ReplyAction="http://tempuri.org/IPaticipantService/deleteMedicalGroupResponse")]
        void deleteMedicalGroup(int _medicalGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteMedicalGroup", ReplyAction="http://tempuri.org/IPaticipantService/deleteMedicalGroupResponse")]
        System.Threading.Tasks.Task deleteMedicalGroupAsync(int _medicalGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getMedicalGroupsAll", ReplyAction="http://tempuri.org/IPaticipantService/getMedicalGroupsAllResponse")]
        MMC.MMCService.PaticipantService.MedicalGroup[] getMedicalGroupsAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getMedicalGroupsAll", ReplyAction="http://tempuri.org/IPaticipantService/getMedicalGroupsAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.MedicalGroup[]> getMedicalGroupsAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getMedicalGroupByID", ReplyAction="http://tempuri.org/IPaticipantService/getMedicalGroupByIDResponse")]
        MMC.MMCService.PaticipantService.MedicalGroup getMedicalGroupByID(int _medicalGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getMedicalGroupByID", ReplyAction="http://tempuri.org/IPaticipantService/getMedicalGroupByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.MedicalGroup> getMedicalGroupByIDAsync(int _medicalGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getMedicalGroupsByName", ReplyAction="http://tempuri.org/IPaticipantService/getMedicalGroupsByNameResponse")]
        MMC.MMCService.PaticipantService.PagedMedicalGroup getMedicalGroupsByName(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getMedicalGroupsByName", ReplyAction="http://tempuri.org/IPaticipantService/getMedicalGroupsByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedMedicalGroup> getMedicalGroupsByNameAsync(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addAttorney", ReplyAction="http://tempuri.org/IPaticipantService/addAttorneyResponse")]
        int addAttorney(MMC.MMCService.PaticipantService.Attorney _attorney);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addAttorney", ReplyAction="http://tempuri.org/IPaticipantService/addAttorneyResponse")]
        System.Threading.Tasks.Task<int> addAttorneyAsync(MMC.MMCService.PaticipantService.Attorney _attorney);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateAttorney", ReplyAction="http://tempuri.org/IPaticipantService/updateAttorneyResponse")]
        int updateAttorney(MMC.MMCService.PaticipantService.Attorney _attorney);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateAttorney", ReplyAction="http://tempuri.org/IPaticipantService/updateAttorneyResponse")]
        System.Threading.Tasks.Task<int> updateAttorneyAsync(MMC.MMCService.PaticipantService.Attorney _attorney);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteAttorney", ReplyAction="http://tempuri.org/IPaticipantService/deleteAttorneyResponse")]
        void deleteAttorney(int _attorneyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteAttorney", ReplyAction="http://tempuri.org/IPaticipantService/deleteAttorneyResponse")]
        System.Threading.Tasks.Task deleteAttorneyAsync(int _attorneyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyAll", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyAllResponse")]
        MMC.MMCService.PaticipantService.Attorney[] getAttorneyAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyAll", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Attorney[]> getAttorneyAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyByID", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyByIDResponse")]
        MMC.MMCService.PaticipantService.Attorney getAttorneyByID(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyByID", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Attorney> getAttorneyByIDAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyByAttorneyFirmID", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyByAttorneyFirmIDResponse")]
        MMC.MMCService.PaticipantService.PagedAttorney getAttorneyByAttorneyFirmID(int _attorneyFirmID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyByAttorneyFirmID", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyByAttorneyFirmIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedAttorney> getAttorneyByAttorneyFirmIDAsync(int _attorneyFirmID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyRecordsByFirmTypeID", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyRecordsByFirmTypeIDResponse")]
        MMC.MMCService.PaticipantService.PagedAttorney getAttorneyRecordsByFirmTypeID(int _attorneyFirmTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyRecordsByFirmTypeID", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyRecordsByFirmTypeIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedAttorney> getAttorneyRecordsByFirmTypeIDAsync(int _attorneyFirmTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addAttorneyFirm", ReplyAction="http://tempuri.org/IPaticipantService/addAttorneyFirmResponse")]
        int addAttorneyFirm(MMC.MMCService.PaticipantService.AttorneyFirm _attorneyFirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addAttorneyFirm", ReplyAction="http://tempuri.org/IPaticipantService/addAttorneyFirmResponse")]
        System.Threading.Tasks.Task<int> addAttorneyFirmAsync(MMC.MMCService.PaticipantService.AttorneyFirm _attorneyFirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateAttorneyFirm", ReplyAction="http://tempuri.org/IPaticipantService/updateAttorneyFirmResponse")]
        int updateAttorneyFirm(MMC.MMCService.PaticipantService.AttorneyFirm _attorneyFirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateAttorneyFirm", ReplyAction="http://tempuri.org/IPaticipantService/updateAttorneyFirmResponse")]
        System.Threading.Tasks.Task<int> updateAttorneyFirmAsync(MMC.MMCService.PaticipantService.AttorneyFirm _attorneyFirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteAttorneyFirm", ReplyAction="http://tempuri.org/IPaticipantService/deleteAttorneyFirmResponse")]
        void deleteAttorneyFirm(int _attorneyFirmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteAttorneyFirm", ReplyAction="http://tempuri.org/IPaticipantService/deleteAttorneyFirmResponse")]
        System.Threading.Tasks.Task deleteAttorneyFirmAsync(int _attorneyFirmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyFirmAll", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyFirmAllResponse")]
        MMC.MMCService.PaticipantService.AttorneyFirm[] getAttorneyFirmAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyFirmAll", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyFirmAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.AttorneyFirm[]> getAttorneyFirmAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyFirmByID", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyFirmByIDResponse")]
        MMC.MMCService.PaticipantService.AttorneyFirm getAttorneyFirmByID(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyFirmByID", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyFirmByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.AttorneyFirm> getAttorneyFirmByIDAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyAndAttorneyFirmByName", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyAndAttorneyFirmByNameResponse")]
        MMC.MMCService.PaticipantService.PagedAttorneyFirm getAttorneyAndAttorneyFirmByName(string _searchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getAttorneyAndAttorneyFirmByName", ReplyAction="http://tempuri.org/IPaticipantService/getAttorneyAndAttorneyFirmByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedAttorneyFirm> getAttorneyAndAttorneyFirmByNameAsync(string _searchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addPeerReview", ReplyAction="http://tempuri.org/IPaticipantService/addPeerReviewResponse")]
        int addPeerReview(MMC.MMCService.PaticipantService.PeerReview _peerReview);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addPeerReview", ReplyAction="http://tempuri.org/IPaticipantService/addPeerReviewResponse")]
        System.Threading.Tasks.Task<int> addPeerReviewAsync(MMC.MMCService.PaticipantService.PeerReview _peerReview);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updatePeerReview", ReplyAction="http://tempuri.org/IPaticipantService/updatePeerReviewResponse")]
        int updatePeerReview(MMC.MMCService.PaticipantService.PeerReview _peerReview);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updatePeerReview", ReplyAction="http://tempuri.org/IPaticipantService/updatePeerReviewResponse")]
        System.Threading.Tasks.Task<int> updatePeerReviewAsync(MMC.MMCService.PaticipantService.PeerReview _peerReview);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deletePeerReview", ReplyAction="http://tempuri.org/IPaticipantService/deletePeerReviewResponse")]
        void deletePeerReview(int _peerReviewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deletePeerReview", ReplyAction="http://tempuri.org/IPaticipantService/deletePeerReviewResponse")]
        System.Threading.Tasks.Task deletePeerReviewAsync(int _peerReviewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getPeerReviewsAll", ReplyAction="http://tempuri.org/IPaticipantService/getPeerReviewsAllResponse")]
        MMC.MMCService.PaticipantService.PeerReview[] getPeerReviewsAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getPeerReviewsAll", ReplyAction="http://tempuri.org/IPaticipantService/getPeerReviewsAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PeerReview[]> getPeerReviewsAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getPeerReviewByID", ReplyAction="http://tempuri.org/IPaticipantService/getPeerReviewByIDResponse")]
        MMC.MMCService.PaticipantService.PeerReview getPeerReviewByID(int _peerReviewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getPeerReviewByID", ReplyAction="http://tempuri.org/IPaticipantService/getPeerReviewByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PeerReview> getPeerReviewByIDAsync(int _peerReviewId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getPeerReviewsByName", ReplyAction="http://tempuri.org/IPaticipantService/getPeerReviewsByNameResponse")]
        MMC.MMCService.PaticipantService.PagedPeerReview getPeerReviewsByName(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getPeerReviewsByName", ReplyAction="http://tempuri.org/IPaticipantService/getPeerReviewsByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedPeerReview> getPeerReviewsByNameAsync(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getPatientAndPeerReviewRequestByReferralId", ReplyAction="http://tempuri.org/IPaticipantService/getPatientAndPeerReviewRequestByReferralIdR" +
            "esponse")]
        MMC.MMCService.PaticipantService.PatientAndRequestModel getPatientAndPeerReviewRequestByReferralId(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getPatientAndPeerReviewRequestByReferralId", ReplyAction="http://tempuri.org/IPaticipantService/getPatientAndPeerReviewRequestByReferralIdR" +
            "esponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PatientAndRequestModel> getPatientAndPeerReviewRequestByReferralIdAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addADR", ReplyAction="http://tempuri.org/IPaticipantService/addADRResponse")]
        int addADR(MMC.MMCService.PaticipantService.ADR _ADR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/addADR", ReplyAction="http://tempuri.org/IPaticipantService/addADRResponse")]
        System.Threading.Tasks.Task<int> addADRAsync(MMC.MMCService.PaticipantService.ADR _ADR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateADR", ReplyAction="http://tempuri.org/IPaticipantService/updateADRResponse")]
        int updateADR(MMC.MMCService.PaticipantService.ADR _ADR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/updateADR", ReplyAction="http://tempuri.org/IPaticipantService/updateADRResponse")]
        System.Threading.Tasks.Task<int> updateADRAsync(MMC.MMCService.PaticipantService.ADR _ADR);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteADR", ReplyAction="http://tempuri.org/IPaticipantService/deleteADRResponse")]
        void deleteADR(int _ADRId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/deleteADR", ReplyAction="http://tempuri.org/IPaticipantService/deleteADRResponse")]
        System.Threading.Tasks.Task deleteADRAsync(int _ADRId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getADRsAll", ReplyAction="http://tempuri.org/IPaticipantService/getADRsAllResponse")]
        MMC.MMCService.PaticipantService.ADR[] getADRsAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getADRsAll", ReplyAction="http://tempuri.org/IPaticipantService/getADRsAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ADR[]> getADRsAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getADRByID", ReplyAction="http://tempuri.org/IPaticipantService/getADRByIDResponse")]
        MMC.MMCService.PaticipantService.ADR getADRByID(int _Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getADRByID", ReplyAction="http://tempuri.org/IPaticipantService/getADRByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ADR> getADRByIDAsync(int _Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getADRsByName", ReplyAction="http://tempuri.org/IPaticipantService/getADRsByNameResponse")]
        MMC.MMCService.PaticipantService.PagedADR getADRsByName(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaticipantService/getADRsByName", ReplyAction="http://tempuri.org/IPaticipantService/getADRsByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedADR> getADRsByNameAsync(string SearchText, int _skip, int _take);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPaticipantServiceChannel : MMC.MMCService.PaticipantService.IPaticipantService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaticipantServiceClient : System.ServiceModel.ClientBase<MMC.MMCService.PaticipantService.IPaticipantService>, MMC.MMCService.PaticipantService.IPaticipantService {
        
        public PaticipantServiceClient() {
        }
        
        public PaticipantServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PaticipantServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaticipantServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaticipantServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int addAdjuster(MMC.MMCService.PaticipantService.Adjuster _adjuster) {
            return base.Channel.addAdjuster(_adjuster);
        }
        
        public System.Threading.Tasks.Task<int> addAdjusterAsync(MMC.MMCService.PaticipantService.Adjuster _adjuster) {
            return base.Channel.addAdjusterAsync(_adjuster);
        }
        
        public int updateAdjuster(MMC.MMCService.PaticipantService.Adjuster _adjuster) {
            return base.Channel.updateAdjuster(_adjuster);
        }
        
        public System.Threading.Tasks.Task<int> updateAdjusterAsync(MMC.MMCService.PaticipantService.Adjuster _adjuster) {
            return base.Channel.updateAdjusterAsync(_adjuster);
        }
        
        public void deleteAdjuster(int _adjusterId) {
            base.Channel.deleteAdjuster(_adjusterId);
        }
        
        public System.Threading.Tasks.Task deleteAdjusterAsync(int _adjusterId) {
            return base.Channel.deleteAdjusterAsync(_adjusterId);
        }
        
        public MMC.MMCService.PaticipantService.Adjuster[] getadjustersAll() {
            return base.Channel.getadjustersAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Adjuster[]> getadjustersAllAsync() {
            return base.Channel.getadjustersAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.Adjuster getAdjusterByID(int _adjusterId) {
            return base.Channel.getAdjusterByID(_adjusterId);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Adjuster> getAdjusterByIDAsync(int _adjusterId) {
            return base.Channel.getAdjusterByIDAsync(_adjusterId);
        }
        
        public MMC.MMCService.PaticipantService.PagedAdjuster getadjustersByName(string SearchText, int _skip, int _take) {
            return base.Channel.getadjustersByName(SearchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedAdjuster> getadjustersByNameAsync(string SearchText, int _skip, int _take) {
            return base.Channel.getadjustersByNameAsync(SearchText, _skip, _take);
        }
        
        public int addPhysician(MMC.MMCService.PaticipantService.Physician _physician) {
            return base.Channel.addPhysician(_physician);
        }
        
        public System.Threading.Tasks.Task<int> addPhysicianAsync(MMC.MMCService.PaticipantService.Physician _physician) {
            return base.Channel.addPhysicianAsync(_physician);
        }
        
        public int updatePhysician(MMC.MMCService.PaticipantService.Physician _physician) {
            return base.Channel.updatePhysician(_physician);
        }
        
        public System.Threading.Tasks.Task<int> updatePhysicianAsync(MMC.MMCService.PaticipantService.Physician _physician) {
            return base.Channel.updatePhysicianAsync(_physician);
        }
        
        public void deletePhysician(int _physicianID) {
            base.Channel.deletePhysician(_physicianID);
        }
        
        public System.Threading.Tasks.Task deletePhysicianAsync(int _physicianID) {
            return base.Channel.deletePhysicianAsync(_physicianID);
        }
        
        public MMC.MMCService.PaticipantService.Physician[] getphysicianAll() {
            return base.Channel.getphysicianAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Physician[]> getphysicianAllAsync() {
            return base.Channel.getphysicianAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.Physician getPhysicianByID(int _physicianID) {
            return base.Channel.getPhysicianByID(_physicianID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Physician> getPhysicianByIDAsync(int _physicianID) {
            return base.Channel.getPhysicianByIDAsync(_physicianID);
        }
        
        public MMC.MMCService.PaticipantService.PagedPhysician GetPhysicianByName(string _searchText, int _skip, int _take) {
            return base.Channel.GetPhysicianByName(_searchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedPhysician> GetPhysicianByNameAsync(string _searchText, int _skip, int _take) {
            return base.Channel.GetPhysicianByNameAsync(_searchText, _skip, _take);
        }
        
        public MMC.MMCService.PaticipantService.PagedPhysician GetPhysicianByNPI(string _searchText, int _skip, int _take) {
            return base.Channel.GetPhysicianByNPI(_searchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedPhysician> GetPhysicianByNPIAsync(string _searchText, int _skip, int _take) {
            return base.Channel.GetPhysicianByNPIAsync(_searchText, _skip, _take);
        }
        
        public MMC.MMCService.PaticipantService.PagedPhysician GetPhysicianBySpeciality(int _searchID, int _skip, int _take) {
            return base.Channel.GetPhysicianBySpeciality(_searchID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedPhysician> GetPhysicianBySpecialityAsync(int _searchID, int _skip, int _take) {
            return base.Channel.GetPhysicianBySpecialityAsync(_searchID, _skip, _take);
        }
        
        public MMC.MMCService.PaticipantService.Vendor[] getVendorsAll() {
            return base.Channel.getVendorsAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Vendor[]> getVendorsAllAsync() {
            return base.Channel.getVendorsAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.Vendor getVendorByID(int _id) {
            return base.Channel.getVendorByID(_id);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Vendor> getVendorByIDAsync(int _id) {
            return base.Channel.getVendorByIDAsync(_id);
        }
        
        public int addVendor(MMC.MMCService.PaticipantService.Vendor _vendor) {
            return base.Channel.addVendor(_vendor);
        }
        
        public System.Threading.Tasks.Task<int> addVendorAsync(MMC.MMCService.PaticipantService.Vendor _vendor) {
            return base.Channel.addVendorAsync(_vendor);
        }
        
        public int updateVendor(MMC.MMCService.PaticipantService.Vendor _vendor) {
            return base.Channel.updateVendor(_vendor);
        }
        
        public System.Threading.Tasks.Task<int> updateVendorAsync(MMC.MMCService.PaticipantService.Vendor _vendor) {
            return base.Channel.updateVendorAsync(_vendor);
        }
        
        public void deleteVendor(int _id) {
            base.Channel.deleteVendor(_id);
        }
        
        public System.Threading.Tasks.Task deleteVendorAsync(int _id) {
            return base.Channel.deleteVendorAsync(_id);
        }
        
        public MMC.MMCService.PaticipantService.PagedVendor getVendorsByName(string searchtext, int skip, int take) {
            return base.Channel.getVendorsByName(searchtext, skip, take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedVendor> getVendorsByNameAsync(string searchtext, int skip, int take) {
            return base.Channel.getVendorsByNameAsync(searchtext, skip, take);
        }
        
        public int addInsurer(MMC.MMCService.PaticipantService.Insurer _Insurer) {
            return base.Channel.addInsurer(_Insurer);
        }
        
        public System.Threading.Tasks.Task<int> addInsurerAsync(MMC.MMCService.PaticipantService.Insurer _Insurer) {
            return base.Channel.addInsurerAsync(_Insurer);
        }
        
        public int updateInsurer(MMC.MMCService.PaticipantService.Insurer _Insurer) {
            return base.Channel.updateInsurer(_Insurer);
        }
        
        public System.Threading.Tasks.Task<int> updateInsurerAsync(MMC.MMCService.PaticipantService.Insurer _Insurer) {
            return base.Channel.updateInsurerAsync(_Insurer);
        }
        
        public void deleteInsurer(int _InsurerId) {
            base.Channel.deleteInsurer(_InsurerId);
        }
        
        public System.Threading.Tasks.Task deleteInsurerAsync(int _InsurerId) {
            return base.Channel.deleteInsurerAsync(_InsurerId);
        }
        
        public MMC.MMCService.PaticipantService.Insurer[] getInsurersAll() {
            return base.Channel.getInsurersAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Insurer[]> getInsurersAllAsync() {
            return base.Channel.getInsurersAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.Insurer getInsurerByID(int _InsurerId) {
            return base.Channel.getInsurerByID(_InsurerId);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Insurer> getInsurerByIDAsync(int _InsurerId) {
            return base.Channel.getInsurerByIDAsync(_InsurerId);
        }
        
        public MMC.MMCService.PaticipantService.PagedInsurer getInsurersByName(string SearchText, int _skip, int _take) {
            return base.Channel.getInsurersByName(SearchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedInsurer> getInsurersByNameAsync(string SearchText, int _skip, int _take) {
            return base.Channel.getInsurersByNameAsync(SearchText, _skip, _take);
        }
        
        public int addInsuranceBranch(MMC.MMCService.PaticipantService.InsuranceBranch _insuranceBranch) {
            return base.Channel.addInsuranceBranch(_insuranceBranch);
        }
        
        public System.Threading.Tasks.Task<int> addInsuranceBranchAsync(MMC.MMCService.PaticipantService.InsuranceBranch _insuranceBranch) {
            return base.Channel.addInsuranceBranchAsync(_insuranceBranch);
        }
        
        public int updateInsuranceBranch(MMC.MMCService.PaticipantService.InsuranceBranch _insuranceBranch) {
            return base.Channel.updateInsuranceBranch(_insuranceBranch);
        }
        
        public System.Threading.Tasks.Task<int> updateInsuranceBranchAsync(MMC.MMCService.PaticipantService.InsuranceBranch _insuranceBranch) {
            return base.Channel.updateInsuranceBranchAsync(_insuranceBranch);
        }
        
        public void deleteInsuranceBranch(int _insuranceBranchID) {
            base.Channel.deleteInsuranceBranch(_insuranceBranchID);
        }
        
        public System.Threading.Tasks.Task deleteInsuranceBranchAsync(int _insuranceBranchID) {
            return base.Channel.deleteInsuranceBranchAsync(_insuranceBranchID);
        }
        
        public MMC.MMCService.PaticipantService.PagedInsuranceBranch getInsuranceBranchesByInsurerID(int _insurerID, int _skip, int _take) {
            return base.Channel.getInsuranceBranchesByInsurerID(_insurerID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedInsuranceBranch> getInsuranceBranchesByInsurerIDAsync(int _insurerID, int _skip, int _take) {
            return base.Channel.getInsuranceBranchesByInsurerIDAsync(_insurerID, _skip, _take);
        }
        
        public MMC.MMCService.PaticipantService.InsuranceBranch[] getInsuranceBranchesAllByInsurerID(int _insurerID) {
            return base.Channel.getInsuranceBranchesAllByInsurerID(_insurerID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.InsuranceBranch[]> getInsuranceBranchesAllByInsurerIDAsync(int _insurerID) {
            return base.Channel.getInsuranceBranchesAllByInsurerIDAsync(_insurerID);
        }
        
        public MMC.MMCService.PaticipantService.InsuranceBranch getInsuranceBranchByID(int _insuranceBranchID) {
            return base.Channel.getInsuranceBranchByID(_insuranceBranchID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.InsuranceBranch> getInsuranceBranchByIDAsync(int _insuranceBranchID) {
            return base.Channel.getInsuranceBranchByIDAsync(_insuranceBranchID);
        }
        
        public int addEmployer(MMC.MMCService.PaticipantService.Employer _employer) {
            return base.Channel.addEmployer(_employer);
        }
        
        public System.Threading.Tasks.Task<int> addEmployerAsync(MMC.MMCService.PaticipantService.Employer _employer) {
            return base.Channel.addEmployerAsync(_employer);
        }
        
        public int updateEmployer(MMC.MMCService.PaticipantService.Employer _employer) {
            return base.Channel.updateEmployer(_employer);
        }
        
        public System.Threading.Tasks.Task<int> updateEmployerAsync(MMC.MMCService.PaticipantService.Employer _employer) {
            return base.Channel.updateEmployerAsync(_employer);
        }
        
        public void deleteEmployer(int _employerid) {
            base.Channel.deleteEmployer(_employerid);
        }
        
        public System.Threading.Tasks.Task deleteEmployerAsync(int _employerid) {
            return base.Channel.deleteEmployerAsync(_employerid);
        }
        
        public MMC.MMCService.PaticipantService.Employer[] getEmployersAll() {
            return base.Channel.getEmployersAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Employer[]> getEmployersAllAsync() {
            return base.Channel.getEmployersAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.Employer getEmployerByID(int _employerid) {
            return base.Channel.getEmployerByID(_employerid);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Employer> getEmployerByIDAsync(int _employerid) {
            return base.Channel.getEmployerByIDAsync(_employerid);
        }
        
        public MMC.MMCService.PaticipantService.PagedEmployer getEmployersByName(string SearchText, int _skip, int _take) {
            return base.Channel.getEmployersByName(SearchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedEmployer> getEmployersByNameAsync(string SearchText, int _skip, int _take) {
            return base.Channel.getEmployersByNameAsync(SearchText, _skip, _take);
        }
        
        public int addEmployerSubsidiaries(MMC.MMCService.PaticipantService.EmployerSubsidiary _employerSubsidiaries) {
            return base.Channel.addEmployerSubsidiaries(_employerSubsidiaries);
        }
        
        public System.Threading.Tasks.Task<int> addEmployerSubsidiariesAsync(MMC.MMCService.PaticipantService.EmployerSubsidiary _employerSubsidiaries) {
            return base.Channel.addEmployerSubsidiariesAsync(_employerSubsidiaries);
        }
        
        public int updateEmployerSubsidiaries(MMC.MMCService.PaticipantService.EmployerSubsidiary _employerSubsidiaries) {
            return base.Channel.updateEmployerSubsidiaries(_employerSubsidiaries);
        }
        
        public System.Threading.Tasks.Task<int> updateEmployerSubsidiariesAsync(MMC.MMCService.PaticipantService.EmployerSubsidiary _employerSubsidiaries) {
            return base.Channel.updateEmployerSubsidiariesAsync(_employerSubsidiaries);
        }
        
        public void deleteEmployerSubsidiaries(int _employerid) {
            base.Channel.deleteEmployerSubsidiaries(_employerid);
        }
        
        public System.Threading.Tasks.Task deleteEmployerSubsidiariesAsync(int _employerid) {
            return base.Channel.deleteEmployerSubsidiariesAsync(_employerid);
        }
        
        public MMC.MMCService.PaticipantService.EmployerSubsidiary[] getEmployerSubsidiariesAll() {
            return base.Channel.getEmployerSubsidiariesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.EmployerSubsidiary[]> getEmployerSubsidiariesAllAsync() {
            return base.Channel.getEmployerSubsidiariesAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.EmployerSubsidiary getEmployerSubsidiariesByID(int _employerid) {
            return base.Channel.getEmployerSubsidiariesByID(_employerid);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.EmployerSubsidiary> getEmployerSubsidiariesByIDAsync(int _employerid) {
            return base.Channel.getEmployerSubsidiariesByIDAsync(_employerid);
        }
        
        public MMC.MMCService.PaticipantService.PagedEmployerSubsidiary getEmployerSubsidiariesByEmployerID(int _employerID, int _skip, int _take) {
            return base.Channel.getEmployerSubsidiariesByEmployerID(_employerID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedEmployerSubsidiary> getEmployerSubsidiariesByEmployerIDAsync(int _employerID, int _skip, int _take) {
            return base.Channel.getEmployerSubsidiariesByEmployerIDAsync(_employerID, _skip, _take);
        }
        
        public MMC.MMCService.PaticipantService.EmployerSubsidiary[] getAllEmployerSubsidiariesByEmployerID(int _employerID) {
            return base.Channel.getAllEmployerSubsidiariesByEmployerID(_employerID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.EmployerSubsidiary[]> getAllEmployerSubsidiariesByEmployerIDAsync(int _employerID) {
            return base.Channel.getAllEmployerSubsidiariesByEmployerIDAsync(_employerID);
        }
        
        public int addCaseManager(MMC.MMCService.PaticipantService.CaseManager _caseManager) {
            return base.Channel.addCaseManager(_caseManager);
        }
        
        public System.Threading.Tasks.Task<int> addCaseManagerAsync(MMC.MMCService.PaticipantService.CaseManager _caseManager) {
            return base.Channel.addCaseManagerAsync(_caseManager);
        }
        
        public int updateCaseManager(MMC.MMCService.PaticipantService.CaseManager _caseManager) {
            return base.Channel.updateCaseManager(_caseManager);
        }
        
        public System.Threading.Tasks.Task<int> updateCaseManagerAsync(MMC.MMCService.PaticipantService.CaseManager _caseManager) {
            return base.Channel.updateCaseManagerAsync(_caseManager);
        }
        
        public void deleteCaseManager(int _caseManagerId) {
            base.Channel.deleteCaseManager(_caseManagerId);
        }
        
        public System.Threading.Tasks.Task deleteCaseManagerAsync(int _caseManagerId) {
            return base.Channel.deleteCaseManagerAsync(_caseManagerId);
        }
        
        public MMC.MMCService.PaticipantService.CaseManager[] getCaseManagerAll() {
            return base.Channel.getCaseManagerAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.CaseManager[]> getCaseManagerAllAsync() {
            return base.Channel.getCaseManagerAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.CaseManager getCaseManagerByID(int _caseManager) {
            return base.Channel.getCaseManagerByID(_caseManager);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.CaseManager> getCaseManagerByIDAsync(int _caseManager) {
            return base.Channel.getCaseManagerByIDAsync(_caseManager);
        }
        
        public MMC.MMCService.PaticipantService.PagedCaseManager getCaseManagerByName(string SearchText, int _skip, int _take) {
            return base.Channel.getCaseManagerByName(SearchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedCaseManager> getCaseManagerByNameAsync(string SearchText, int _skip, int _take) {
            return base.Channel.getCaseManagerByNameAsync(SearchText, _skip, _take);
        }
        
        public int addThirdPartyAdministrator(MMC.MMCService.PaticipantService.ThirdPartyAdministrator _thirdPartyAdministrator) {
            return base.Channel.addThirdPartyAdministrator(_thirdPartyAdministrator);
        }
        
        public System.Threading.Tasks.Task<int> addThirdPartyAdministratorAsync(MMC.MMCService.PaticipantService.ThirdPartyAdministrator _thirdPartyAdministrator) {
            return base.Channel.addThirdPartyAdministratorAsync(_thirdPartyAdministrator);
        }
        
        public int updateThirdPartyAdministrator(MMC.MMCService.PaticipantService.ThirdPartyAdministrator _thirdPartyAdministrator) {
            return base.Channel.updateThirdPartyAdministrator(_thirdPartyAdministrator);
        }
        
        public System.Threading.Tasks.Task<int> updateThirdPartyAdministratorAsync(MMC.MMCService.PaticipantService.ThirdPartyAdministrator _thirdPartyAdministrator) {
            return base.Channel.updateThirdPartyAdministratorAsync(_thirdPartyAdministrator);
        }
        
        public void deleteThirdPartyAdministrator(int _thirdPartyAdministratorId) {
            base.Channel.deleteThirdPartyAdministrator(_thirdPartyAdministratorId);
        }
        
        public System.Threading.Tasks.Task deleteThirdPartyAdministratorAsync(int _thirdPartyAdministratorId) {
            return base.Channel.deleteThirdPartyAdministratorAsync(_thirdPartyAdministratorId);
        }
        
        public MMC.MMCService.PaticipantService.ThirdPartyAdministrator[] getThirdPartyAdministratorsAll() {
            return base.Channel.getThirdPartyAdministratorsAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ThirdPartyAdministrator[]> getThirdPartyAdministratorsAllAsync() {
            return base.Channel.getThirdPartyAdministratorsAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.ThirdPartyAdministrator getThirdPartyAdministratorByID(int _thirdPartyAdministratorId) {
            return base.Channel.getThirdPartyAdministratorByID(_thirdPartyAdministratorId);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ThirdPartyAdministrator> getThirdPartyAdministratorByIDAsync(int _thirdPartyAdministratorId) {
            return base.Channel.getThirdPartyAdministratorByIDAsync(_thirdPartyAdministratorId);
        }
        
        public MMC.MMCService.PaticipantService.PagedThirdPartyAdministrator getThirdPartyAdministratorsByName(string SearchText, int _skip, int _take) {
            return base.Channel.getThirdPartyAdministratorsByName(SearchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedThirdPartyAdministrator> getThirdPartyAdministratorsByNameAsync(string SearchText, int _skip, int _take) {
            return base.Channel.getThirdPartyAdministratorsByNameAsync(SearchText, _skip, _take);
        }
        
        public int addThirdPartyAdministratorBranch(MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch _thirdPartyAdministratorBranch) {
            return base.Channel.addThirdPartyAdministratorBranch(_thirdPartyAdministratorBranch);
        }
        
        public System.Threading.Tasks.Task<int> addThirdPartyAdministratorBranchAsync(MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch _thirdPartyAdministratorBranch) {
            return base.Channel.addThirdPartyAdministratorBranchAsync(_thirdPartyAdministratorBranch);
        }
        
        public int updateThirdPartyAdministratorBranch(MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch _thirdPartyAdministratorBranch) {
            return base.Channel.updateThirdPartyAdministratorBranch(_thirdPartyAdministratorBranch);
        }
        
        public System.Threading.Tasks.Task<int> updateThirdPartyAdministratorBranchAsync(MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch _thirdPartyAdministratorBranch) {
            return base.Channel.updateThirdPartyAdministratorBranchAsync(_thirdPartyAdministratorBranch);
        }
        
        public void deleteThirdPartyAdministratorBranch(int _thirdPartyAdministratorBranchId) {
            base.Channel.deleteThirdPartyAdministratorBranch(_thirdPartyAdministratorBranchId);
        }
        
        public System.Threading.Tasks.Task deleteThirdPartyAdministratorBranchAsync(int _thirdPartyAdministratorBranchId) {
            return base.Channel.deleteThirdPartyAdministratorBranchAsync(_thirdPartyAdministratorBranchId);
        }
        
        public MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch[] getThirdPartyAdministratorBranchesAll() {
            return base.Channel.getThirdPartyAdministratorBranchesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch[]> getThirdPartyAdministratorBranchesAllAsync() {
            return base.Channel.getThirdPartyAdministratorBranchesAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch getThirdPartyAdministratorBranchByID(int _thirdPartyAdministratorBranchId) {
            return base.Channel.getThirdPartyAdministratorBranchByID(_thirdPartyAdministratorBranchId);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch> getThirdPartyAdministratorBranchByIDAsync(int _thirdPartyAdministratorBranchId) {
            return base.Channel.getThirdPartyAdministratorBranchByIDAsync(_thirdPartyAdministratorBranchId);
        }
        
        public MMC.MMCService.PaticipantService.PagedThirdPartyAdministratorBranch getThirdPartyAdministratorBranchesByTPAID(int _thirdPartyAdministratorId, int _skip, int _take) {
            return base.Channel.getThirdPartyAdministratorBranchesByTPAID(_thirdPartyAdministratorId, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedThirdPartyAdministratorBranch> getThirdPartyAdministratorBranchesByTPAIDAsync(int _thirdPartyAdministratorId, int _skip, int _take) {
            return base.Channel.getThirdPartyAdministratorBranchesByTPAIDAsync(_thirdPartyAdministratorId, _skip, _take);
        }
        
        public MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch[] getThirdPartyAdministratorBranchesAllByTPAID(int _tpaID) {
            return base.Channel.getThirdPartyAdministratorBranchesAllByTPAID(_tpaID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ThirdPartyAdministratorBranch[]> getThirdPartyAdministratorBranchesAllByTPAIDAsync(int _tpaID) {
            return base.Channel.getThirdPartyAdministratorBranchesAllByTPAIDAsync(_tpaID);
        }
        
        public int addManagedCareCompany(MMC.MMCService.PaticipantService.ManagedCareCompany _company) {
            return base.Channel.addManagedCareCompany(_company);
        }
        
        public System.Threading.Tasks.Task<int> addManagedCareCompanyAsync(MMC.MMCService.PaticipantService.ManagedCareCompany _company) {
            return base.Channel.addManagedCareCompanyAsync(_company);
        }
        
        public int updateManagedCareCompany(MMC.MMCService.PaticipantService.ManagedCareCompany _company) {
            return base.Channel.updateManagedCareCompany(_company);
        }
        
        public System.Threading.Tasks.Task<int> updateManagedCareCompanyAsync(MMC.MMCService.PaticipantService.ManagedCareCompany _company) {
            return base.Channel.updateManagedCareCompanyAsync(_company);
        }
        
        public void deleteManagedCareCompany(int _companyid) {
            base.Channel.deleteManagedCareCompany(_companyid);
        }
        
        public System.Threading.Tasks.Task deleteManagedCareCompanyAsync(int _companyid) {
            return base.Channel.deleteManagedCareCompanyAsync(_companyid);
        }
        
        public MMC.MMCService.PaticipantService.ManagedCareCompany[] getManagedCareCompanyAll() {
            return base.Channel.getManagedCareCompanyAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ManagedCareCompany[]> getManagedCareCompanyAllAsync() {
            return base.Channel.getManagedCareCompanyAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.ManagedCareCompany getManagedCareCompanyByID(int _companyid) {
            return base.Channel.getManagedCareCompanyByID(_companyid);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ManagedCareCompany> getManagedCareCompanyByIDAsync(int _companyid) {
            return base.Channel.getManagedCareCompanyByIDAsync(_companyid);
        }
        
        public MMC.MMCService.PaticipantService.PagedManagedCareCompany getManagedCareCompanyByName(string SearchText, int _skip, int _take) {
            return base.Channel.getManagedCareCompanyByName(SearchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedManagedCareCompany> getManagedCareCompanyByNameAsync(string SearchText, int _skip, int _take) {
            return base.Channel.getManagedCareCompanyByNameAsync(SearchText, _skip, _take);
        }
        
        public int addMedicalGroup(MMC.MMCService.PaticipantService.MedicalGroup _medicalGroup) {
            return base.Channel.addMedicalGroup(_medicalGroup);
        }
        
        public System.Threading.Tasks.Task<int> addMedicalGroupAsync(MMC.MMCService.PaticipantService.MedicalGroup _medicalGroup) {
            return base.Channel.addMedicalGroupAsync(_medicalGroup);
        }
        
        public int updateMedicalGroup(MMC.MMCService.PaticipantService.MedicalGroup _medicalGroup) {
            return base.Channel.updateMedicalGroup(_medicalGroup);
        }
        
        public System.Threading.Tasks.Task<int> updateMedicalGroupAsync(MMC.MMCService.PaticipantService.MedicalGroup _medicalGroup) {
            return base.Channel.updateMedicalGroupAsync(_medicalGroup);
        }
        
        public void deleteMedicalGroup(int _medicalGroupId) {
            base.Channel.deleteMedicalGroup(_medicalGroupId);
        }
        
        public System.Threading.Tasks.Task deleteMedicalGroupAsync(int _medicalGroupId) {
            return base.Channel.deleteMedicalGroupAsync(_medicalGroupId);
        }
        
        public MMC.MMCService.PaticipantService.MedicalGroup[] getMedicalGroupsAll() {
            return base.Channel.getMedicalGroupsAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.MedicalGroup[]> getMedicalGroupsAllAsync() {
            return base.Channel.getMedicalGroupsAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.MedicalGroup getMedicalGroupByID(int _medicalGroupId) {
            return base.Channel.getMedicalGroupByID(_medicalGroupId);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.MedicalGroup> getMedicalGroupByIDAsync(int _medicalGroupId) {
            return base.Channel.getMedicalGroupByIDAsync(_medicalGroupId);
        }
        
        public MMC.MMCService.PaticipantService.PagedMedicalGroup getMedicalGroupsByName(string SearchText, int _skip, int _take) {
            return base.Channel.getMedicalGroupsByName(SearchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedMedicalGroup> getMedicalGroupsByNameAsync(string SearchText, int _skip, int _take) {
            return base.Channel.getMedicalGroupsByNameAsync(SearchText, _skip, _take);
        }
        
        public int addAttorney(MMC.MMCService.PaticipantService.Attorney _attorney) {
            return base.Channel.addAttorney(_attorney);
        }
        
        public System.Threading.Tasks.Task<int> addAttorneyAsync(MMC.MMCService.PaticipantService.Attorney _attorney) {
            return base.Channel.addAttorneyAsync(_attorney);
        }
        
        public int updateAttorney(MMC.MMCService.PaticipantService.Attorney _attorney) {
            return base.Channel.updateAttorney(_attorney);
        }
        
        public System.Threading.Tasks.Task<int> updateAttorneyAsync(MMC.MMCService.PaticipantService.Attorney _attorney) {
            return base.Channel.updateAttorneyAsync(_attorney);
        }
        
        public void deleteAttorney(int _attorneyId) {
            base.Channel.deleteAttorney(_attorneyId);
        }
        
        public System.Threading.Tasks.Task deleteAttorneyAsync(int _attorneyId) {
            return base.Channel.deleteAttorneyAsync(_attorneyId);
        }
        
        public MMC.MMCService.PaticipantService.Attorney[] getAttorneyAll() {
            return base.Channel.getAttorneyAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Attorney[]> getAttorneyAllAsync() {
            return base.Channel.getAttorneyAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.Attorney getAttorneyByID(int _id) {
            return base.Channel.getAttorneyByID(_id);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.Attorney> getAttorneyByIDAsync(int _id) {
            return base.Channel.getAttorneyByIDAsync(_id);
        }
        
        public MMC.MMCService.PaticipantService.PagedAttorney getAttorneyByAttorneyFirmID(int _attorneyFirmID, int _skip, int _take) {
            return base.Channel.getAttorneyByAttorneyFirmID(_attorneyFirmID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedAttorney> getAttorneyByAttorneyFirmIDAsync(int _attorneyFirmID, int _skip, int _take) {
            return base.Channel.getAttorneyByAttorneyFirmIDAsync(_attorneyFirmID, _skip, _take);
        }
        
        public MMC.MMCService.PaticipantService.PagedAttorney getAttorneyRecordsByFirmTypeID(int _attorneyFirmTypeID) {
            return base.Channel.getAttorneyRecordsByFirmTypeID(_attorneyFirmTypeID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedAttorney> getAttorneyRecordsByFirmTypeIDAsync(int _attorneyFirmTypeID) {
            return base.Channel.getAttorneyRecordsByFirmTypeIDAsync(_attorneyFirmTypeID);
        }
        
        public int addAttorneyFirm(MMC.MMCService.PaticipantService.AttorneyFirm _attorneyFirm) {
            return base.Channel.addAttorneyFirm(_attorneyFirm);
        }
        
        public System.Threading.Tasks.Task<int> addAttorneyFirmAsync(MMC.MMCService.PaticipantService.AttorneyFirm _attorneyFirm) {
            return base.Channel.addAttorneyFirmAsync(_attorneyFirm);
        }
        
        public int updateAttorneyFirm(MMC.MMCService.PaticipantService.AttorneyFirm _attorneyFirm) {
            return base.Channel.updateAttorneyFirm(_attorneyFirm);
        }
        
        public System.Threading.Tasks.Task<int> updateAttorneyFirmAsync(MMC.MMCService.PaticipantService.AttorneyFirm _attorneyFirm) {
            return base.Channel.updateAttorneyFirmAsync(_attorneyFirm);
        }
        
        public void deleteAttorneyFirm(int _attorneyFirmID) {
            base.Channel.deleteAttorneyFirm(_attorneyFirmID);
        }
        
        public System.Threading.Tasks.Task deleteAttorneyFirmAsync(int _attorneyFirmID) {
            return base.Channel.deleteAttorneyFirmAsync(_attorneyFirmID);
        }
        
        public MMC.MMCService.PaticipantService.AttorneyFirm[] getAttorneyFirmAll() {
            return base.Channel.getAttorneyFirmAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.AttorneyFirm[]> getAttorneyFirmAllAsync() {
            return base.Channel.getAttorneyFirmAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.AttorneyFirm getAttorneyFirmByID(int _id) {
            return base.Channel.getAttorneyFirmByID(_id);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.AttorneyFirm> getAttorneyFirmByIDAsync(int _id) {
            return base.Channel.getAttorneyFirmByIDAsync(_id);
        }
        
        public MMC.MMCService.PaticipantService.PagedAttorneyFirm getAttorneyAndAttorneyFirmByName(string _searchText, int _skip, int _take) {
            return base.Channel.getAttorneyAndAttorneyFirmByName(_searchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedAttorneyFirm> getAttorneyAndAttorneyFirmByNameAsync(string _searchText, int _skip, int _take) {
            return base.Channel.getAttorneyAndAttorneyFirmByNameAsync(_searchText, _skip, _take);
        }
        
        public int addPeerReview(MMC.MMCService.PaticipantService.PeerReview _peerReview) {
            return base.Channel.addPeerReview(_peerReview);
        }
        
        public System.Threading.Tasks.Task<int> addPeerReviewAsync(MMC.MMCService.PaticipantService.PeerReview _peerReview) {
            return base.Channel.addPeerReviewAsync(_peerReview);
        }
        
        public int updatePeerReview(MMC.MMCService.PaticipantService.PeerReview _peerReview) {
            return base.Channel.updatePeerReview(_peerReview);
        }
        
        public System.Threading.Tasks.Task<int> updatePeerReviewAsync(MMC.MMCService.PaticipantService.PeerReview _peerReview) {
            return base.Channel.updatePeerReviewAsync(_peerReview);
        }
        
        public void deletePeerReview(int _peerReviewId) {
            base.Channel.deletePeerReview(_peerReviewId);
        }
        
        public System.Threading.Tasks.Task deletePeerReviewAsync(int _peerReviewId) {
            return base.Channel.deletePeerReviewAsync(_peerReviewId);
        }
        
        public MMC.MMCService.PaticipantService.PeerReview[] getPeerReviewsAll() {
            return base.Channel.getPeerReviewsAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PeerReview[]> getPeerReviewsAllAsync() {
            return base.Channel.getPeerReviewsAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.PeerReview getPeerReviewByID(int _peerReviewId) {
            return base.Channel.getPeerReviewByID(_peerReviewId);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PeerReview> getPeerReviewByIDAsync(int _peerReviewId) {
            return base.Channel.getPeerReviewByIDAsync(_peerReviewId);
        }
        
        public MMC.MMCService.PaticipantService.PagedPeerReview getPeerReviewsByName(string SearchText, int _skip, int _take) {
            return base.Channel.getPeerReviewsByName(SearchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedPeerReview> getPeerReviewsByNameAsync(string SearchText, int _skip, int _take) {
            return base.Channel.getPeerReviewsByNameAsync(SearchText, _skip, _take);
        }
        
        public MMC.MMCService.PaticipantService.PatientAndRequestModel getPatientAndPeerReviewRequestByReferralId(int _referralID) {
            return base.Channel.getPatientAndPeerReviewRequestByReferralId(_referralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PatientAndRequestModel> getPatientAndPeerReviewRequestByReferralIdAsync(int _referralID) {
            return base.Channel.getPatientAndPeerReviewRequestByReferralIdAsync(_referralID);
        }
        
        public int addADR(MMC.MMCService.PaticipantService.ADR _ADR) {
            return base.Channel.addADR(_ADR);
        }
        
        public System.Threading.Tasks.Task<int> addADRAsync(MMC.MMCService.PaticipantService.ADR _ADR) {
            return base.Channel.addADRAsync(_ADR);
        }
        
        public int updateADR(MMC.MMCService.PaticipantService.ADR _ADR) {
            return base.Channel.updateADR(_ADR);
        }
        
        public System.Threading.Tasks.Task<int> updateADRAsync(MMC.MMCService.PaticipantService.ADR _ADR) {
            return base.Channel.updateADRAsync(_ADR);
        }
        
        public void deleteADR(int _ADRId) {
            base.Channel.deleteADR(_ADRId);
        }
        
        public System.Threading.Tasks.Task deleteADRAsync(int _ADRId) {
            return base.Channel.deleteADRAsync(_ADRId);
        }
        
        public MMC.MMCService.PaticipantService.ADR[] getADRsAll() {
            return base.Channel.getADRsAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ADR[]> getADRsAllAsync() {
            return base.Channel.getADRsAllAsync();
        }
        
        public MMC.MMCService.PaticipantService.ADR getADRByID(int _Id) {
            return base.Channel.getADRByID(_Id);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.ADR> getADRByIDAsync(int _Id) {
            return base.Channel.getADRByIDAsync(_Id);
        }
        
        public MMC.MMCService.PaticipantService.PagedADR getADRsByName(string SearchText, int _skip, int _take) {
            return base.Channel.getADRsByName(SearchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PaticipantService.PagedADR> getADRsByNameAsync(string SearchText, int _skip, int _take) {
            return base.Channel.getADRsByNameAsync(SearchText, _skip, _take);
        }
    }
}
