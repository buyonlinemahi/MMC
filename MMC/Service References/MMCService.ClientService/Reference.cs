//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMC.MMCService.ClientService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaimAdministratorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimAdministratorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimAdministratorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimAdministratorID {
            get {
                return this.ClaimAdministratorIDField;
            }
            set {
                if ((this.ClaimAdministratorIDField.Equals(value) != true)) {
                    this.ClaimAdministratorIDField = value;
                    this.RaisePropertyChanged("ClaimAdministratorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimAdministratorName {
            get {
                return this.ClaimAdministratorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimAdministratorNameField, value) != true)) {
                    this.ClaimAdministratorNameField = value;
                    this.RaisePropertyChanged("ClaimAdministratorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimAdministratorType {
            get {
                return this.ClaimAdministratorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimAdministratorTypeField, value) != true)) {
                    this.ClaimAdministratorTypeField = value;
                    this.RaisePropertyChanged("ClaimAdministratorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedClient", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedClient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.ClientService.Client[] ClientDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.ClientService.Client[] ClientDetails {
            get {
                return this.ClientDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientDetailsField, value) != true)) {
                    this.ClientDetailsField = value;
                    this.RaisePropertyChanged("ClientDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdjusterByClientID", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class AdjusterByClientID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdjusterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdjusterNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdjusterID {
            get {
                return this.AdjusterIDField;
            }
            set {
                if ((this.AdjusterIDField.Equals(value) != true)) {
                    this.AdjusterIDField = value;
                    this.RaisePropertyChanged("AdjusterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdjusterName {
            get {
                return this.AdjusterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AdjusterNameField, value) != true)) {
                    this.AdjusterNameField = value;
                    this.RaisePropertyChanged("AdjusterName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClaimAdministratorAllByClientID", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClaimAdministratorAllByClientID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ids {
            get {
                return this.IdsField;
            }
            set {
                if ((object.ReferenceEquals(this.IdsField, value) != true)) {
                    this.IdsField = value;
                    this.RaisePropertyChanged("Ids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientInsurer", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientInsurer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientInsurerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsurerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientInsurerID {
            get {
                return this.ClientInsurerIDField;
            }
            set {
                if ((this.ClientInsurerIDField.Equals(value) != true)) {
                    this.ClientInsurerIDField = value;
                    this.RaisePropertyChanged("ClientInsurerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsAddress1 {
            get {
                return this.InsAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.InsAddress1Field, value) != true)) {
                    this.InsAddress1Field = value;
                    this.RaisePropertyChanged("InsAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsCity {
            get {
                return this.InsCityField;
            }
            set {
                if ((object.ReferenceEquals(this.InsCityField, value) != true)) {
                    this.InsCityField = value;
                    this.RaisePropertyChanged("InsCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsName {
            get {
                return this.InsNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsNameField, value) != true)) {
                    this.InsNameField = value;
                    this.RaisePropertyChanged("InsName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsState {
            get {
                return this.InsStateField;
            }
            set {
                if ((object.ReferenceEquals(this.InsStateField, value) != true)) {
                    this.InsStateField = value;
                    this.RaisePropertyChanged("InsState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsType {
            get {
                return this.InsTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InsTypeField, value) != true)) {
                    this.InsTypeField = value;
                    this.RaisePropertyChanged("InsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsZip {
            get {
                return this.InsZipField;
            }
            set {
                if ((object.ReferenceEquals(this.InsZipField, value) != true)) {
                    this.InsZipField = value;
                    this.RaisePropertyChanged("InsZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsurerID {
            get {
                return this.InsurerIDField;
            }
            set {
                if ((this.InsurerIDField.Equals(value) != true)) {
                    this.InsurerIDField = value;
                    this.RaisePropertyChanged("InsurerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedClientInsurer", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedClientInsurer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.ClientService.ClientInsurer[] ClientInsurerDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.ClientService.ClientInsurer[] ClientInsurerDetails {
            get {
                return this.ClientInsurerDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientInsurerDetailsField, value) != true)) {
                    this.ClientInsurerDetailsField = value;
                    this.RaisePropertyChanged("ClientInsurerDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientInsuranceBranch", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientInsuranceBranch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientInsuranceBranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsBranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsuranceBranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsurerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientInsuranceBranchID {
            get {
                return this.ClientInsuranceBranchIDField;
            }
            set {
                if ((this.ClientInsuranceBranchIDField.Equals(value) != true)) {
                    this.ClientInsuranceBranchIDField = value;
                    this.RaisePropertyChanged("ClientInsuranceBranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsBranchName {
            get {
                return this.InsBranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsBranchNameField, value) != true)) {
                    this.InsBranchNameField = value;
                    this.RaisePropertyChanged("InsBranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsuranceBranchID {
            get {
                return this.InsuranceBranchIDField;
            }
            set {
                if ((this.InsuranceBranchIDField.Equals(value) != true)) {
                    this.InsuranceBranchIDField = value;
                    this.RaisePropertyChanged("InsuranceBranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsurerID {
            get {
                return this.InsurerIDField;
            }
            set {
                if ((this.InsurerIDField.Equals(value) != true)) {
                    this.InsurerIDField = value;
                    this.RaisePropertyChanged("InsurerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientEmployer", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientEmployer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientEmployerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientEmployerID {
            get {
                return this.ClientEmployerIDField;
            }
            set {
                if ((this.ClientEmployerIDField.Equals(value) != true)) {
                    this.ClientEmployerIDField = value;
                    this.RaisePropertyChanged("ClientEmployerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpAddress1 {
            get {
                return this.EmpAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.EmpAddress1Field, value) != true)) {
                    this.EmpAddress1Field = value;
                    this.RaisePropertyChanged("EmpAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpCity {
            get {
                return this.EmpCityField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCityField, value) != true)) {
                    this.EmpCityField = value;
                    this.RaisePropertyChanged("EmpCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpName {
            get {
                return this.EmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNameField, value) != true)) {
                    this.EmpNameField = value;
                    this.RaisePropertyChanged("EmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpState {
            get {
                return this.EmpStateField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpStateField, value) != true)) {
                    this.EmpStateField = value;
                    this.RaisePropertyChanged("EmpState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpZip {
            get {
                return this.EmpZipField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpZipField, value) != true)) {
                    this.EmpZipField = value;
                    this.RaisePropertyChanged("EmpZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployerID {
            get {
                return this.EmployerIDField;
            }
            set {
                if ((this.EmployerIDField.Equals(value) != true)) {
                    this.EmployerIDField = value;
                    this.RaisePropertyChanged("EmployerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedClientEmployer", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedClientEmployer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.ClientService.ClientEmployer[] ClientEmployerDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.ClientService.ClientEmployer[] ClientEmployerDetails {
            get {
                return this.ClientEmployerDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientEmployerDetailsField, value) != true)) {
                    this.ClientEmployerDetailsField = value;
                    this.RaisePropertyChanged("ClientEmployerDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientThirdPartyAdministrator", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientThirdPartyAdministrator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientTPAIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPAAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPACityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TPAIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPANameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPAStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPATypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPAZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientTPAID {
            get {
                return this.ClientTPAIDField;
            }
            set {
                if ((this.ClientTPAIDField.Equals(value) != true)) {
                    this.ClientTPAIDField = value;
                    this.RaisePropertyChanged("ClientTPAID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPAAddress {
            get {
                return this.TPAAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.TPAAddressField, value) != true)) {
                    this.TPAAddressField = value;
                    this.RaisePropertyChanged("TPAAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPACity {
            get {
                return this.TPACityField;
            }
            set {
                if ((object.ReferenceEquals(this.TPACityField, value) != true)) {
                    this.TPACityField = value;
                    this.RaisePropertyChanged("TPACity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TPAID {
            get {
                return this.TPAIDField;
            }
            set {
                if ((this.TPAIDField.Equals(value) != true)) {
                    this.TPAIDField = value;
                    this.RaisePropertyChanged("TPAID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPAName {
            get {
                return this.TPANameField;
            }
            set {
                if ((object.ReferenceEquals(this.TPANameField, value) != true)) {
                    this.TPANameField = value;
                    this.RaisePropertyChanged("TPAName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPAState {
            get {
                return this.TPAStateField;
            }
            set {
                if ((object.ReferenceEquals(this.TPAStateField, value) != true)) {
                    this.TPAStateField = value;
                    this.RaisePropertyChanged("TPAState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPAType {
            get {
                return this.TPATypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TPATypeField, value) != true)) {
                    this.TPATypeField = value;
                    this.RaisePropertyChanged("TPAType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPAZip {
            get {
                return this.TPAZipField;
            }
            set {
                if ((object.ReferenceEquals(this.TPAZipField, value) != true)) {
                    this.TPAZipField = value;
                    this.RaisePropertyChanged("TPAZip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedClientThirdPartyAdministrator", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedClientThirdPartyAdministrator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.ClientService.ClientThirdPartyAdministrator[] ClientThirdPartyAdministratorDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.ClientService.ClientThirdPartyAdministrator[] ClientThirdPartyAdministratorDetails {
            get {
                return this.ClientThirdPartyAdministratorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientThirdPartyAdministratorDetailsField, value) != true)) {
                    this.ClientThirdPartyAdministratorDetailsField = value;
                    this.RaisePropertyChanged("ClientThirdPartyAdministratorDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientThirdPartyAdministratorBranch", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientThirdPartyAdministratorBranch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientTPABranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TPABranchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TPABranchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TPAIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientTPABranchID {
            get {
                return this.ClientTPABranchIDField;
            }
            set {
                if ((this.ClientTPABranchIDField.Equals(value) != true)) {
                    this.ClientTPABranchIDField = value;
                    this.RaisePropertyChanged("ClientTPABranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TPABranchID {
            get {
                return this.TPABranchIDField;
            }
            set {
                if ((this.TPABranchIDField.Equals(value) != true)) {
                    this.TPABranchIDField = value;
                    this.RaisePropertyChanged("TPABranchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TPABranchName {
            get {
                return this.TPABranchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TPABranchNameField, value) != true)) {
                    this.TPABranchNameField = value;
                    this.RaisePropertyChanged("TPABranchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TPAID {
            get {
                return this.TPAIDField;
            }
            set {
                if ((this.TPAIDField.Equals(value) != true)) {
                    this.TPAIDField = value;
                    this.RaisePropertyChanged("TPAID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientManagedCareCompany", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientManagedCareCompany : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientCompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientCompanyID {
            get {
                return this.ClientCompanyIDField;
            }
            set {
                if ((this.ClientCompanyIDField.Equals(value) != true)) {
                    this.ClientCompanyIDField = value;
                    this.RaisePropertyChanged("ClientCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompAddress {
            get {
                return this.CompAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CompAddressField, value) != true)) {
                    this.CompAddressField = value;
                    this.RaisePropertyChanged("CompAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompCity {
            get {
                return this.CompCityField;
            }
            set {
                if ((object.ReferenceEquals(this.CompCityField, value) != true)) {
                    this.CompCityField = value;
                    this.RaisePropertyChanged("CompCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompName {
            get {
                return this.CompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompNameField, value) != true)) {
                    this.CompNameField = value;
                    this.RaisePropertyChanged("CompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompState {
            get {
                return this.CompStateField;
            }
            set {
                if ((object.ReferenceEquals(this.CompStateField, value) != true)) {
                    this.CompStateField = value;
                    this.RaisePropertyChanged("CompState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompZip {
            get {
                return this.CompZipField;
            }
            set {
                if ((object.ReferenceEquals(this.CompZipField, value) != true)) {
                    this.CompZipField = value;
                    this.RaisePropertyChanged("CompZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedClientManagedCareCompany", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedClientManagedCareCompany : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.ClientService.ClientManagedCareCompany[] ClientManagedCareCompanyDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.ClientService.ClientManagedCareCompany[] ClientManagedCareCompanyDetails {
            get {
                return this.ClientManagedCareCompanyDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientManagedCareCompanyDetailsField, value) != true)) {
                    this.ClientManagedCareCompanyDetailsField = value;
                    this.RaisePropertyChanged("ClientManagedCareCompanyDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientBilling", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientBilling : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientAttentionToFreeTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientAttentionToIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientBillingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientBillingRateTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientInvoiceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ClientIsPrivateLabelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientAttentionToFreeText {
            get {
                return this.ClientAttentionToFreeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientAttentionToFreeTextField, value) != true)) {
                    this.ClientAttentionToFreeTextField = value;
                    this.RaisePropertyChanged("ClientAttentionToFreeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientAttentionToID {
            get {
                return this.ClientAttentionToIDField;
            }
            set {
                if ((this.ClientAttentionToIDField.Equals(value) != true)) {
                    this.ClientAttentionToIDField = value;
                    this.RaisePropertyChanged("ClientAttentionToID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientBillingID {
            get {
                return this.ClientBillingIDField;
            }
            set {
                if ((this.ClientBillingIDField.Equals(value) != true)) {
                    this.ClientBillingIDField = value;
                    this.RaisePropertyChanged("ClientBillingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientBillingRateTypeID {
            get {
                return this.ClientBillingRateTypeIDField;
            }
            set {
                if ((this.ClientBillingRateTypeIDField.Equals(value) != true)) {
                    this.ClientBillingRateTypeIDField = value;
                    this.RaisePropertyChanged("ClientBillingRateTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientInvoiceNumber {
            get {
                return this.ClientInvoiceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientInvoiceNumberField, value) != true)) {
                    this.ClientInvoiceNumberField = value;
                    this.RaisePropertyChanged("ClientInvoiceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ClientIsPrivateLabel {
            get {
                return this.ClientIsPrivateLabelField;
            }
            set {
                if ((this.ClientIsPrivateLabelField.Equals(value) != true)) {
                    this.ClientIsPrivateLabelField = value;
                    this.RaisePropertyChanged("ClientIsPrivateLabel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientBillingRetailRate", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientBillingRetailRate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientBillingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingRetailRateAdminFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingRetailRateDeferralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientBillingRetailRateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingRetailRateIMRMDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingRetailRateIMRPrepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingRetailRateIMRRushField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingRetailRateMDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingRetailRateRNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingRetailRateSpecialityReviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientBillingID {
            get {
                return this.ClientBillingIDField;
            }
            set {
                if ((this.ClientBillingIDField.Equals(value) != true)) {
                    this.ClientBillingIDField = value;
                    this.RaisePropertyChanged("ClientBillingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingRetailRateAdminFee {
            get {
                return this.ClientBillingRetailRateAdminFeeField;
            }
            set {
                if ((this.ClientBillingRetailRateAdminFeeField.Equals(value) != true)) {
                    this.ClientBillingRetailRateAdminFeeField = value;
                    this.RaisePropertyChanged("ClientBillingRetailRateAdminFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingRetailRateDeferral {
            get {
                return this.ClientBillingRetailRateDeferralField;
            }
            set {
                if ((this.ClientBillingRetailRateDeferralField.Equals(value) != true)) {
                    this.ClientBillingRetailRateDeferralField = value;
                    this.RaisePropertyChanged("ClientBillingRetailRateDeferral");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientBillingRetailRateID {
            get {
                return this.ClientBillingRetailRateIDField;
            }
            set {
                if ((this.ClientBillingRetailRateIDField.Equals(value) != true)) {
                    this.ClientBillingRetailRateIDField = value;
                    this.RaisePropertyChanged("ClientBillingRetailRateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingRetailRateIMRMD {
            get {
                return this.ClientBillingRetailRateIMRMDField;
            }
            set {
                if ((this.ClientBillingRetailRateIMRMDField.Equals(value) != true)) {
                    this.ClientBillingRetailRateIMRMDField = value;
                    this.RaisePropertyChanged("ClientBillingRetailRateIMRMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingRetailRateIMRPrep {
            get {
                return this.ClientBillingRetailRateIMRPrepField;
            }
            set {
                if ((this.ClientBillingRetailRateIMRPrepField.Equals(value) != true)) {
                    this.ClientBillingRetailRateIMRPrepField = value;
                    this.RaisePropertyChanged("ClientBillingRetailRateIMRPrep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingRetailRateIMRRush {
            get {
                return this.ClientBillingRetailRateIMRRushField;
            }
            set {
                if ((this.ClientBillingRetailRateIMRRushField.Equals(value) != true)) {
                    this.ClientBillingRetailRateIMRRushField = value;
                    this.RaisePropertyChanged("ClientBillingRetailRateIMRRush");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingRetailRateMD {
            get {
                return this.ClientBillingRetailRateMDField;
            }
            set {
                if ((this.ClientBillingRetailRateMDField.Equals(value) != true)) {
                    this.ClientBillingRetailRateMDField = value;
                    this.RaisePropertyChanged("ClientBillingRetailRateMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingRetailRateRN {
            get {
                return this.ClientBillingRetailRateRNField;
            }
            set {
                if ((this.ClientBillingRetailRateRNField.Equals(value) != true)) {
                    this.ClientBillingRetailRateRNField = value;
                    this.RaisePropertyChanged("ClientBillingRetailRateRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingRetailRateSpecialityReview {
            get {
                return this.ClientBillingRetailRateSpecialityReviewField;
            }
            set {
                if ((this.ClientBillingRetailRateSpecialityReviewField.Equals(value) != true)) {
                    this.ClientBillingRetailRateSpecialityReviewField = value;
                    this.RaisePropertyChanged("ClientBillingRetailRateSpecialityReview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientBillingWholesaleRate", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientBillingWholesaleRate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientBillingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingWholesaleRateAdminFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingWholesaleRateDeferralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientBillingWholesaleRateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingWholesaleRateIMRMDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingWholesaleRateIMRPrepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingWholesaleRateIMRRushField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingWholesaleRateMDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingWholesaleRateRNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ClientBillingWholesaleRateSpecialityReviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientBillingID {
            get {
                return this.ClientBillingIDField;
            }
            set {
                if ((this.ClientBillingIDField.Equals(value) != true)) {
                    this.ClientBillingIDField = value;
                    this.RaisePropertyChanged("ClientBillingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingWholesaleRateAdminFee {
            get {
                return this.ClientBillingWholesaleRateAdminFeeField;
            }
            set {
                if ((this.ClientBillingWholesaleRateAdminFeeField.Equals(value) != true)) {
                    this.ClientBillingWholesaleRateAdminFeeField = value;
                    this.RaisePropertyChanged("ClientBillingWholesaleRateAdminFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingWholesaleRateDeferral {
            get {
                return this.ClientBillingWholesaleRateDeferralField;
            }
            set {
                if ((this.ClientBillingWholesaleRateDeferralField.Equals(value) != true)) {
                    this.ClientBillingWholesaleRateDeferralField = value;
                    this.RaisePropertyChanged("ClientBillingWholesaleRateDeferral");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientBillingWholesaleRateID {
            get {
                return this.ClientBillingWholesaleRateIDField;
            }
            set {
                if ((this.ClientBillingWholesaleRateIDField.Equals(value) != true)) {
                    this.ClientBillingWholesaleRateIDField = value;
                    this.RaisePropertyChanged("ClientBillingWholesaleRateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingWholesaleRateIMRMD {
            get {
                return this.ClientBillingWholesaleRateIMRMDField;
            }
            set {
                if ((this.ClientBillingWholesaleRateIMRMDField.Equals(value) != true)) {
                    this.ClientBillingWholesaleRateIMRMDField = value;
                    this.RaisePropertyChanged("ClientBillingWholesaleRateIMRMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingWholesaleRateIMRPrep {
            get {
                return this.ClientBillingWholesaleRateIMRPrepField;
            }
            set {
                if ((this.ClientBillingWholesaleRateIMRPrepField.Equals(value) != true)) {
                    this.ClientBillingWholesaleRateIMRPrepField = value;
                    this.RaisePropertyChanged("ClientBillingWholesaleRateIMRPrep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingWholesaleRateIMRRush {
            get {
                return this.ClientBillingWholesaleRateIMRRushField;
            }
            set {
                if ((this.ClientBillingWholesaleRateIMRRushField.Equals(value) != true)) {
                    this.ClientBillingWholesaleRateIMRRushField = value;
                    this.RaisePropertyChanged("ClientBillingWholesaleRateIMRRush");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingWholesaleRateMD {
            get {
                return this.ClientBillingWholesaleRateMDField;
            }
            set {
                if ((this.ClientBillingWholesaleRateMDField.Equals(value) != true)) {
                    this.ClientBillingWholesaleRateMDField = value;
                    this.RaisePropertyChanged("ClientBillingWholesaleRateMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingWholesaleRateRN {
            get {
                return this.ClientBillingWholesaleRateRNField;
            }
            set {
                if ((this.ClientBillingWholesaleRateRNField.Equals(value) != true)) {
                    this.ClientBillingWholesaleRateRNField = value;
                    this.RaisePropertyChanged("ClientBillingWholesaleRateRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ClientBillingWholesaleRateSpecialityReview {
            get {
                return this.ClientBillingWholesaleRateSpecialityReviewField;
            }
            set {
                if ((this.ClientBillingWholesaleRateSpecialityReviewField.Equals(value) != true)) {
                    this.ClientBillingWholesaleRateSpecialityReviewField = value;
                    this.RaisePropertyChanged("ClientBillingWholesaleRateSpecialityReview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientPrivateLabel", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientPrivateLabel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientPrivateEmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientPrivateLabelAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientPrivateLabelCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientPrivateLabelFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientPrivateLabelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientPrivateLabelLogoNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientPrivateLabelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientPrivateLabelPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientPrivateLabelStateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientPrivateLabelTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientPrivateLabelZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientStatementStartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientPrivateEmailID {
            get {
                return this.ClientPrivateEmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientPrivateEmailIDField, value) != true)) {
                    this.ClientPrivateEmailIDField = value;
                    this.RaisePropertyChanged("ClientPrivateEmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientPrivateLabelAddress {
            get {
                return this.ClientPrivateLabelAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientPrivateLabelAddressField, value) != true)) {
                    this.ClientPrivateLabelAddressField = value;
                    this.RaisePropertyChanged("ClientPrivateLabelAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientPrivateLabelCity {
            get {
                return this.ClientPrivateLabelCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientPrivateLabelCityField, value) != true)) {
                    this.ClientPrivateLabelCityField = value;
                    this.RaisePropertyChanged("ClientPrivateLabelCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientPrivateLabelFax {
            get {
                return this.ClientPrivateLabelFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientPrivateLabelFaxField, value) != true)) {
                    this.ClientPrivateLabelFaxField = value;
                    this.RaisePropertyChanged("ClientPrivateLabelFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientPrivateLabelID {
            get {
                return this.ClientPrivateLabelIDField;
            }
            set {
                if ((this.ClientPrivateLabelIDField.Equals(value) != true)) {
                    this.ClientPrivateLabelIDField = value;
                    this.RaisePropertyChanged("ClientPrivateLabelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientPrivateLabelLogoName {
            get {
                return this.ClientPrivateLabelLogoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientPrivateLabelLogoNameField, value) != true)) {
                    this.ClientPrivateLabelLogoNameField = value;
                    this.RaisePropertyChanged("ClientPrivateLabelLogoName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientPrivateLabelName {
            get {
                return this.ClientPrivateLabelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientPrivateLabelNameField, value) != true)) {
                    this.ClientPrivateLabelNameField = value;
                    this.RaisePropertyChanged("ClientPrivateLabelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientPrivateLabelPhone {
            get {
                return this.ClientPrivateLabelPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientPrivateLabelPhoneField, value) != true)) {
                    this.ClientPrivateLabelPhoneField = value;
                    this.RaisePropertyChanged("ClientPrivateLabelPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientPrivateLabelStateID {
            get {
                return this.ClientPrivateLabelStateIDField;
            }
            set {
                if ((this.ClientPrivateLabelStateIDField.Equals(value) != true)) {
                    this.ClientPrivateLabelStateIDField = value;
                    this.RaisePropertyChanged("ClientPrivateLabelStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientPrivateLabelTax {
            get {
                return this.ClientPrivateLabelTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientPrivateLabelTaxField, value) != true)) {
                    this.ClientPrivateLabelTaxField = value;
                    this.RaisePropertyChanged("ClientPrivateLabelTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientPrivateLabelZip {
            get {
                return this.ClientPrivateLabelZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientPrivateLabelZipField, value) != true)) {
                    this.ClientPrivateLabelZipField = value;
                    this.RaisePropertyChanged("ClientPrivateLabelZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientStatementStart {
            get {
                return this.ClientStatementStartField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientStatementStartField, value) != true)) {
                    this.ClientStatementStartField = value;
                    this.RaisePropertyChanged("ClientStatementStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MMCService.ClientService.IClientService")]
    public interface IClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClient", ReplyAction="http://tempuri.org/IClientService/addClientResponse")]
        int addClient(MMC.MMCService.ClientService.Client _Client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClient", ReplyAction="http://tempuri.org/IClientService/addClientResponse")]
        System.Threading.Tasks.Task<int> addClientAsync(MMC.MMCService.ClientService.Client _Client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClient", ReplyAction="http://tempuri.org/IClientService/updateClientResponse")]
        int updateClient(MMC.MMCService.ClientService.Client _Client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClient", ReplyAction="http://tempuri.org/IClientService/updateClientResponse")]
        System.Threading.Tasks.Task<int> updateClientAsync(MMC.MMCService.ClientService.Client _Client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClient", ReplyAction="http://tempuri.org/IClientService/deleteClientResponse")]
        void deleteClient(int _ClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClient", ReplyAction="http://tempuri.org/IClientService/deleteClientResponse")]
        System.Threading.Tasks.Task deleteClientAsync(int _ClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientByID", ReplyAction="http://tempuri.org/IClientService/getClientByIDResponse")]
        MMC.MMCService.ClientService.Client getClientByID(int _ClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientByID", ReplyAction="http://tempuri.org/IClientService/getClientByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.Client> getClientByIDAsync(int _ClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientByName", ReplyAction="http://tempuri.org/IClientService/getClientByNameResponse")]
        MMC.MMCService.ClientService.PagedClient getClientByName(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientByName", ReplyAction="http://tempuri.org/IClientService/getClientByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.PagedClient> getClientByNameAsync(string SearchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientAll", ReplyAction="http://tempuri.org/IClientService/getClientAllResponse")]
        MMC.MMCService.ClientService.Client[] getClientAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientAll", ReplyAction="http://tempuri.org/IClientService/getClientAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.Client[]> getClientAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClaimAdministratorByClientID", ReplyAction="http://tempuri.org/IClientService/getClaimAdministratorByClientIDResponse")]
        MMC.MMCService.ClientService.Client getClaimAdministratorByClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClaimAdministratorByClientID", ReplyAction="http://tempuri.org/IClientService/getClaimAdministratorByClientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.Client> getClaimAdministratorByClientIDAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getAdjusterByClientID", ReplyAction="http://tempuri.org/IClientService/getAdjusterByClientIDResponse")]
        MMC.MMCService.ClientService.AdjusterByClientID[] getAdjusterByClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getAdjusterByClientID", ReplyAction="http://tempuri.org/IClientService/getAdjusterByClientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.AdjusterByClientID[]> getAdjusterByClientIDAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClaimAdministratorAllByClientID", ReplyAction="http://tempuri.org/IClientService/getClaimAdministratorAllByClientIDResponse")]
        MMC.MMCService.ClientService.ClaimAdministratorAllByClientID[] getClaimAdministratorAllByClientID(int _clientid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClaimAdministratorAllByClientID", ReplyAction="http://tempuri.org/IClientService/getClaimAdministratorAllByClientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClaimAdministratorAllByClientID[]> getClaimAdministratorAllByClientIDAsync(int _clientid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientInsurer", ReplyAction="http://tempuri.org/IClientService/addClientInsurerResponse")]
        int addClientInsurer(MMC.MMCService.ClientService.ClientInsurer _clientInsurer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientInsurer", ReplyAction="http://tempuri.org/IClientService/addClientInsurerResponse")]
        System.Threading.Tasks.Task<int> addClientInsurerAsync(MMC.MMCService.ClientService.ClientInsurer _clientInsurer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientInsurer", ReplyAction="http://tempuri.org/IClientService/updateClientInsurerResponse")]
        int updateClientInsurer(MMC.MMCService.ClientService.ClientInsurer _clientInsurer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientInsurer", ReplyAction="http://tempuri.org/IClientService/updateClientInsurerResponse")]
        System.Threading.Tasks.Task<int> updateClientInsurerAsync(MMC.MMCService.ClientService.ClientInsurer _clientInsurer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientInsurer", ReplyAction="http://tempuri.org/IClientService/deleteClientInsurerResponse")]
        void deleteClientInsurer(int _clientInsurerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientInsurer", ReplyAction="http://tempuri.org/IClientService/deleteClientInsurerResponse")]
        System.Threading.Tasks.Task deleteClientInsurerAsync(int _clientInsurerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientInsurerByClientID", ReplyAction="http://tempuri.org/IClientService/getClientInsurerByClientIDResponse")]
        MMC.MMCService.ClientService.PagedClientInsurer getClientInsurerByClientID(int ClientID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientInsurerByClientID", ReplyAction="http://tempuri.org/IClientService/getClientInsurerByClientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.PagedClientInsurer> getClientInsurerByClientIDAsync(int ClientID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getAllClientInsurerByClientID", ReplyAction="http://tempuri.org/IClientService/getAllClientInsurerByClientIDResponse")]
        MMC.MMCService.ClientService.ClientInsurer[] getAllClientInsurerByClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getAllClientInsurerByClientID", ReplyAction="http://tempuri.org/IClientService/getAllClientInsurerByClientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientInsurer[]> getAllClientInsurerByClientIDAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientInsuranceBranch", ReplyAction="http://tempuri.org/IClientService/addClientInsuranceBranchResponse")]
        int addClientInsuranceBranch(MMC.MMCService.ClientService.ClientInsuranceBranch _clientInsuranceBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientInsuranceBranch", ReplyAction="http://tempuri.org/IClientService/addClientInsuranceBranchResponse")]
        System.Threading.Tasks.Task<int> addClientInsuranceBranchAsync(MMC.MMCService.ClientService.ClientInsuranceBranch _clientInsuranceBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientInsuranceBranch", ReplyAction="http://tempuri.org/IClientService/updateClientInsuranceBranchResponse")]
        int updateClientInsuranceBranch(MMC.MMCService.ClientService.ClientInsuranceBranch _clientInsuranceBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientInsuranceBranch", ReplyAction="http://tempuri.org/IClientService/updateClientInsuranceBranchResponse")]
        System.Threading.Tasks.Task<int> updateClientInsuranceBranchAsync(MMC.MMCService.ClientService.ClientInsuranceBranch _clientInsuranceBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientInsuranceBranch", ReplyAction="http://tempuri.org/IClientService/deleteClientInsuranceBranchResponse")]
        void deleteClientInsuranceBranch(int _clientInsuranceBranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientInsuranceBranch", ReplyAction="http://tempuri.org/IClientService/deleteClientInsuranceBranchResponse")]
        System.Threading.Tasks.Task deleteClientInsuranceBranchAsync(int _clientInsuranceBranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientInsuranceBranchByInsurerID", ReplyAction="http://tempuri.org/IClientService/deleteClientInsuranceBranchByInsurerIDResponse")]
        void deleteClientInsuranceBranchByInsurerID(int _insurerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientInsuranceBranchByInsurerID", ReplyAction="http://tempuri.org/IClientService/deleteClientInsuranceBranchByInsurerIDResponse")]
        System.Threading.Tasks.Task deleteClientInsuranceBranchByInsurerIDAsync(int _insurerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientInsuranceBranchesAllByInsurerID", ReplyAction="http://tempuri.org/IClientService/getClientInsuranceBranchesAllByInsurerIDRespons" +
            "e")]
        MMC.MMCService.ClientService.ClientInsuranceBranch[] getClientInsuranceBranchesAllByInsurerID(int _ClientID, int _insurerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientInsuranceBranchesAllByInsurerID", ReplyAction="http://tempuri.org/IClientService/getClientInsuranceBranchesAllByInsurerIDRespons" +
            "e")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientInsuranceBranch[]> getClientInsuranceBranchesAllByInsurerIDAsync(int _ClientID, int _insurerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientEmployer", ReplyAction="http://tempuri.org/IClientService/addClientEmployerResponse")]
        int addClientEmployer(MMC.MMCService.ClientService.ClientEmployer _clientEmployer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientEmployer", ReplyAction="http://tempuri.org/IClientService/addClientEmployerResponse")]
        System.Threading.Tasks.Task<int> addClientEmployerAsync(MMC.MMCService.ClientService.ClientEmployer _clientEmployer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientEmployer", ReplyAction="http://tempuri.org/IClientService/updateClientEmployerResponse")]
        int updateClientEmployer(MMC.MMCService.ClientService.ClientEmployer _clientEmployer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientEmployer", ReplyAction="http://tempuri.org/IClientService/updateClientEmployerResponse")]
        System.Threading.Tasks.Task<int> updateClientEmployerAsync(MMC.MMCService.ClientService.ClientEmployer _clientEmployer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientEmployer", ReplyAction="http://tempuri.org/IClientService/deleteClientEmployerResponse")]
        void deleteClientEmployer(int _clientEmployerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientEmployer", ReplyAction="http://tempuri.org/IClientService/deleteClientEmployerResponse")]
        System.Threading.Tasks.Task deleteClientEmployerAsync(int _clientEmployerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientEmployerByClientID", ReplyAction="http://tempuri.org/IClientService/getClientEmployerByClientIDResponse")]
        MMC.MMCService.ClientService.PagedClientEmployer getClientEmployerByClientID(int ClientID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientEmployerByClientID", ReplyAction="http://tempuri.org/IClientService/getClientEmployerByClientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.PagedClientEmployer> getClientEmployerByClientIDAsync(int ClientID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getAllClientEmployerByClientID", ReplyAction="http://tempuri.org/IClientService/getAllClientEmployerByClientIDResponse")]
        MMC.MMCService.ClientService.ClientEmployer[] getAllClientEmployerByClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getAllClientEmployerByClientID", ReplyAction="http://tempuri.org/IClientService/getAllClientEmployerByClientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientEmployer[]> getAllClientEmployerByClientIDAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientThirdPartyAdministrator", ReplyAction="http://tempuri.org/IClientService/addClientThirdPartyAdministratorResponse")]
        int addClientThirdPartyAdministrator(MMC.MMCService.ClientService.ClientThirdPartyAdministrator _clientThirdPartyAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientThirdPartyAdministrator", ReplyAction="http://tempuri.org/IClientService/addClientThirdPartyAdministratorResponse")]
        System.Threading.Tasks.Task<int> addClientThirdPartyAdministratorAsync(MMC.MMCService.ClientService.ClientThirdPartyAdministrator _clientThirdPartyAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientThirdPartyAdministrator", ReplyAction="http://tempuri.org/IClientService/updateClientThirdPartyAdministratorResponse")]
        int updateClientThirdPartyAdministrator(MMC.MMCService.ClientService.ClientThirdPartyAdministrator _clientThirdPartyAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientThirdPartyAdministrator", ReplyAction="http://tempuri.org/IClientService/updateClientThirdPartyAdministratorResponse")]
        System.Threading.Tasks.Task<int> updateClientThirdPartyAdministratorAsync(MMC.MMCService.ClientService.ClientThirdPartyAdministrator _clientThirdPartyAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientThirdPartyAdministrator", ReplyAction="http://tempuri.org/IClientService/deleteClientThirdPartyAdministratorResponse")]
        void deleteClientThirdPartyAdministrator(int _clientTPAID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientThirdPartyAdministrator", ReplyAction="http://tempuri.org/IClientService/deleteClientThirdPartyAdministratorResponse")]
        System.Threading.Tasks.Task deleteClientThirdPartyAdministratorAsync(int _clientTPAID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientThirdPartyAdministratorByClientID", ReplyAction="http://tempuri.org/IClientService/getClientThirdPartyAdministratorByClientIDRespo" +
            "nse")]
        MMC.MMCService.ClientService.PagedClientThirdPartyAdministrator getClientThirdPartyAdministratorByClientID(int ClientID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientThirdPartyAdministratorByClientID", ReplyAction="http://tempuri.org/IClientService/getClientThirdPartyAdministratorByClientIDRespo" +
            "nse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.PagedClientThirdPartyAdministrator> getClientThirdPartyAdministratorByClientIDAsync(int ClientID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getAllClientThirdPartyAdministratorByClientID", ReplyAction="http://tempuri.org/IClientService/getAllClientThirdPartyAdministratorByClientIDRe" +
            "sponse")]
        MMC.MMCService.ClientService.ClientThirdPartyAdministrator[] getAllClientThirdPartyAdministratorByClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getAllClientThirdPartyAdministratorByClientID", ReplyAction="http://tempuri.org/IClientService/getAllClientThirdPartyAdministratorByClientIDRe" +
            "sponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientThirdPartyAdministrator[]> getAllClientThirdPartyAdministratorByClientIDAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IClientService/addClientThirdPartyAdministratorBranchResponse")]
        int addClientThirdPartyAdministratorBranch(MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch _clientThirdPartyAdministratorBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IClientService/addClientThirdPartyAdministratorBranchResponse")]
        System.Threading.Tasks.Task<int> addClientThirdPartyAdministratorBranchAsync(MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch _clientThirdPartyAdministratorBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IClientService/updateClientThirdPartyAdministratorBranchRespon" +
            "se")]
        int updateClientThirdPartyAdministratorBranch(MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch _clientThirdPartyAdministratorBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IClientService/updateClientThirdPartyAdministratorBranchRespon" +
            "se")]
        System.Threading.Tasks.Task<int> updateClientThirdPartyAdministratorBranchAsync(MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch _clientThirdPartyAdministratorBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IClientService/deleteClientThirdPartyAdministratorBranchRespon" +
            "se")]
        void deleteClientThirdPartyAdministratorBranch(int _clientTPABranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientThirdPartyAdministratorBranch", ReplyAction="http://tempuri.org/IClientService/deleteClientThirdPartyAdministratorBranchRespon" +
            "se")]
        System.Threading.Tasks.Task deleteClientThirdPartyAdministratorBranchAsync(int _clientTPABranchID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientThirdPartyAdministratorBranchByTPAI" +
            "D", ReplyAction="http://tempuri.org/IClientService/deleteClientThirdPartyAdministratorBranchByTPAI" +
            "DResponse")]
        void deleteClientThirdPartyAdministratorBranchByTPAID(int _TPAID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientThirdPartyAdministratorBranchByTPAI" +
            "D", ReplyAction="http://tempuri.org/IClientService/deleteClientThirdPartyAdministratorBranchByTPAI" +
            "DResponse")]
        System.Threading.Tasks.Task deleteClientThirdPartyAdministratorBranchByTPAIDAsync(int _TPAID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientTPABranchesAllByTPAID", ReplyAction="http://tempuri.org/IClientService/getClientTPABranchesAllByTPAIDResponse")]
        MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch[] getClientTPABranchesAllByTPAID(int _ClientID, int _tpaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientTPABranchesAllByTPAID", ReplyAction="http://tempuri.org/IClientService/getClientTPABranchesAllByTPAIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch[]> getClientTPABranchesAllByTPAIDAsync(int _ClientID, int _tpaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientManagedCareCompany", ReplyAction="http://tempuri.org/IClientService/addClientManagedCareCompanyResponse")]
        int addClientManagedCareCompany(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientManagedCareCompany", ReplyAction="http://tempuri.org/IClientService/addClientManagedCareCompanyResponse")]
        System.Threading.Tasks.Task<int> addClientManagedCareCompanyAsync(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientManagedCareCompany", ReplyAction="http://tempuri.org/IClientService/updateClientManagedCareCompanyResponse")]
        int updateClientManagedCareCompany(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientManagedCareCompany", ReplyAction="http://tempuri.org/IClientService/updateClientManagedCareCompanyResponse")]
        System.Threading.Tasks.Task<int> updateClientManagedCareCompanyAsync(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientManagedCareCompany", ReplyAction="http://tempuri.org/IClientService/deleteClientManagedCareCompanyResponse")]
        void deleteClientManagedCareCompany(int _clientManagedCareCompanyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientManagedCareCompany", ReplyAction="http://tempuri.org/IClientService/deleteClientManagedCareCompanyResponse")]
        System.Threading.Tasks.Task deleteClientManagedCareCompanyAsync(int _clientManagedCareCompanyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientManagedCareCompanyByClientID", ReplyAction="http://tempuri.org/IClientService/getClientManagedCareCompanyByClientIDResponse")]
        MMC.MMCService.ClientService.PagedClientManagedCareCompany getClientManagedCareCompanyByClientID(int ClientID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientManagedCareCompanyByClientID", ReplyAction="http://tempuri.org/IClientService/getClientManagedCareCompanyByClientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.PagedClientManagedCareCompany> getClientManagedCareCompanyByClientIDAsync(int ClientID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getAllClaimAdministrator", ReplyAction="http://tempuri.org/IClientService/getAllClaimAdministratorResponse")]
        MMC.MMCService.ClientService.Client[] getAllClaimAdministrator();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getAllClaimAdministrator", ReplyAction="http://tempuri.org/IClientService/getAllClaimAdministratorResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.Client[]> getAllClaimAdministratorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientManagedCareCompanyByClientID", ReplyAction="http://tempuri.org/IClientService/updateClientManagedCareCompanyByClientIDRespons" +
            "e")]
        int updateClientManagedCareCompanyByClientID(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientManagedCareCompanyByClientID", ReplyAction="http://tempuri.org/IClientService/updateClientManagedCareCompanyByClientIDRespons" +
            "e")]
        System.Threading.Tasks.Task<int> updateClientManagedCareCompanyByClientIDAsync(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientBilling", ReplyAction="http://tempuri.org/IClientService/addClientBillingResponse")]
        int addClientBilling(MMC.MMCService.ClientService.ClientBilling _clientBilling);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientBilling", ReplyAction="http://tempuri.org/IClientService/addClientBillingResponse")]
        System.Threading.Tasks.Task<int> addClientBillingAsync(MMC.MMCService.ClientService.ClientBilling _clientBilling);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientBilling", ReplyAction="http://tempuri.org/IClientService/updateClientBillingResponse")]
        int updateClientBilling(MMC.MMCService.ClientService.ClientBilling _clientBilling);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientBilling", ReplyAction="http://tempuri.org/IClientService/updateClientBillingResponse")]
        System.Threading.Tasks.Task<int> updateClientBillingAsync(MMC.MMCService.ClientService.ClientBilling _clientBilling);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientBilling", ReplyAction="http://tempuri.org/IClientService/deleteClientBillingResponse")]
        void deleteClientBilling(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientBilling", ReplyAction="http://tempuri.org/IClientService/deleteClientBillingResponse")]
        System.Threading.Tasks.Task deleteClientBillingAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingByID", ReplyAction="http://tempuri.org/IClientService/getClientBillingByIDResponse")]
        MMC.MMCService.ClientService.ClientBilling getClientBillingByID(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingByID", ReplyAction="http://tempuri.org/IClientService/getClientBillingByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBilling> getClientBillingByIDAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingDetailByClientID", ReplyAction="http://tempuri.org/IClientService/getClientBillingDetailByClientIDResponse")]
        MMC.MMCService.ClientService.ClientBilling getClientBillingDetailByClientID(int _clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingDetailByClientID", ReplyAction="http://tempuri.org/IClientService/getClientBillingDetailByClientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBilling> getClientBillingDetailByClientIDAsync(int _clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientBillingRetailRate", ReplyAction="http://tempuri.org/IClientService/addClientBillingRetailRateResponse")]
        int addClientBillingRetailRate(MMC.MMCService.ClientService.ClientBillingRetailRate _clientBillingRetailRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientBillingRetailRate", ReplyAction="http://tempuri.org/IClientService/addClientBillingRetailRateResponse")]
        System.Threading.Tasks.Task<int> addClientBillingRetailRateAsync(MMC.MMCService.ClientService.ClientBillingRetailRate _clientBillingRetailRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientBillingRetailRate", ReplyAction="http://tempuri.org/IClientService/updateClientBillingRetailRateResponse")]
        int updateClientBillingRetailRate(MMC.MMCService.ClientService.ClientBillingRetailRate _clientBillingRetailRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientBillingRetailRate", ReplyAction="http://tempuri.org/IClientService/updateClientBillingRetailRateResponse")]
        System.Threading.Tasks.Task<int> updateClientBillingRetailRateAsync(MMC.MMCService.ClientService.ClientBillingRetailRate _clientBillingRetailRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientBillingRetailRate", ReplyAction="http://tempuri.org/IClientService/deleteClientBillingRetailRateResponse")]
        void deleteClientBillingRetailRate(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientBillingRetailRate", ReplyAction="http://tempuri.org/IClientService/deleteClientBillingRetailRateResponse")]
        System.Threading.Tasks.Task deleteClientBillingRetailRateAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingRetailRateByID", ReplyAction="http://tempuri.org/IClientService/getClientBillingRetailRateByIDResponse")]
        MMC.MMCService.ClientService.ClientBillingRetailRate getClientBillingRetailRateByID(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingRetailRateByID", ReplyAction="http://tempuri.org/IClientService/getClientBillingRetailRateByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBillingRetailRate> getClientBillingRetailRateByIDAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingRetailRateByClientBillingID", ReplyAction="http://tempuri.org/IClientService/getClientBillingRetailRateByClientBillingIDResp" +
            "onse")]
        MMC.MMCService.ClientService.ClientBillingRetailRate getClientBillingRetailRateByClientBillingID(int _clientBillingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingRetailRateByClientBillingID", ReplyAction="http://tempuri.org/IClientService/getClientBillingRetailRateByClientBillingIDResp" +
            "onse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBillingRetailRate> getClientBillingRetailRateByClientBillingIDAsync(int _clientBillingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientBillingWholesaleRate", ReplyAction="http://tempuri.org/IClientService/addClientBillingWholesaleRateResponse")]
        int addClientBillingWholesaleRate(MMC.MMCService.ClientService.ClientBillingWholesaleRate _clientBillingWholesaleRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientBillingWholesaleRate", ReplyAction="http://tempuri.org/IClientService/addClientBillingWholesaleRateResponse")]
        System.Threading.Tasks.Task<int> addClientBillingWholesaleRateAsync(MMC.MMCService.ClientService.ClientBillingWholesaleRate _clientBillingWholesaleRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientBillingWholesaleRate", ReplyAction="http://tempuri.org/IClientService/updateClientBillingWholesaleRateResponse")]
        int updateClientBillingWholesaleRate(MMC.MMCService.ClientService.ClientBillingWholesaleRate _clientBillingWholesaleRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientBillingWholesaleRate", ReplyAction="http://tempuri.org/IClientService/updateClientBillingWholesaleRateResponse")]
        System.Threading.Tasks.Task<int> updateClientBillingWholesaleRateAsync(MMC.MMCService.ClientService.ClientBillingWholesaleRate _clientBillingWholesaleRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientBillingWholesaleRate", ReplyAction="http://tempuri.org/IClientService/deleteClientBillingWholesaleRateResponse")]
        void deleteClientBillingWholesaleRate(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientBillingWholesaleRate", ReplyAction="http://tempuri.org/IClientService/deleteClientBillingWholesaleRateResponse")]
        System.Threading.Tasks.Task deleteClientBillingWholesaleRateAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingWholesaleRateByID", ReplyAction="http://tempuri.org/IClientService/getClientBillingWholesaleRateByIDResponse")]
        MMC.MMCService.ClientService.ClientBillingWholesaleRate getClientBillingWholesaleRateByID(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingWholesaleRateByID", ReplyAction="http://tempuri.org/IClientService/getClientBillingWholesaleRateByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBillingWholesaleRate> getClientBillingWholesaleRateByIDAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingWholesaleRateByClientBillingID", ReplyAction="http://tempuri.org/IClientService/getClientBillingWholesaleRateByClientBillingIDR" +
            "esponse")]
        MMC.MMCService.ClientService.ClientBillingWholesaleRate getClientBillingWholesaleRateByClientBillingID(int _clientBillingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientBillingWholesaleRateByClientBillingID", ReplyAction="http://tempuri.org/IClientService/getClientBillingWholesaleRateByClientBillingIDR" +
            "esponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBillingWholesaleRate> getClientBillingWholesaleRateByClientBillingIDAsync(int _clientBillingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientPrivateLabel", ReplyAction="http://tempuri.org/IClientService/addClientPrivateLabelResponse")]
        int addClientPrivateLabel(MMC.MMCService.ClientService.ClientPrivateLabel _clientPrivateLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/addClientPrivateLabel", ReplyAction="http://tempuri.org/IClientService/addClientPrivateLabelResponse")]
        System.Threading.Tasks.Task<int> addClientPrivateLabelAsync(MMC.MMCService.ClientService.ClientPrivateLabel _clientPrivateLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientPrivateLabel", ReplyAction="http://tempuri.org/IClientService/updateClientPrivateLabelResponse")]
        int updateClientPrivateLabel(MMC.MMCService.ClientService.ClientPrivateLabel _clientPrivateLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/updateClientPrivateLabel", ReplyAction="http://tempuri.org/IClientService/updateClientPrivateLabelResponse")]
        System.Threading.Tasks.Task<int> updateClientPrivateLabelAsync(MMC.MMCService.ClientService.ClientPrivateLabel _clientPrivateLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientPrivateLabel", ReplyAction="http://tempuri.org/IClientService/deleteClientPrivateLabelResponse")]
        void deleteClientPrivateLabel(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientPrivateLabel", ReplyAction="http://tempuri.org/IClientService/deleteClientPrivateLabelResponse")]
        System.Threading.Tasks.Task deleteClientPrivateLabelAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientPrivateLabelByClientID", ReplyAction="http://tempuri.org/IClientService/deleteClientPrivateLabelByClientIDResponse")]
        void deleteClientPrivateLabelByClientID(int _clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/deleteClientPrivateLabelByClientID", ReplyAction="http://tempuri.org/IClientService/deleteClientPrivateLabelByClientIDResponse")]
        System.Threading.Tasks.Task deleteClientPrivateLabelByClientIDAsync(int _clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientPrivateLabelByID", ReplyAction="http://tempuri.org/IClientService/getClientPrivateLabelByIDResponse")]
        MMC.MMCService.ClientService.ClientPrivateLabel getClientPrivateLabelByID(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientPrivateLabelByID", ReplyAction="http://tempuri.org/IClientService/getClientPrivateLabelByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientPrivateLabel> getClientPrivateLabelByIDAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientPrivateLabelDetailByClientID", ReplyAction="http://tempuri.org/IClientService/getClientPrivateLabelDetailByClientIDResponse")]
        MMC.MMCService.ClientService.ClientPrivateLabel getClientPrivateLabelDetailByClientID(int _clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/getClientPrivateLabelDetailByClientID", ReplyAction="http://tempuri.org/IClientService/getClientPrivateLabelDetailByClientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientPrivateLabel> getClientPrivateLabelDetailByClientIDAsync(int _clientID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceChannel : MMC.MMCService.ClientService.IClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<MMC.MMCService.ClientService.IClientService>, MMC.MMCService.ClientService.IClientService {
        
        public ClientServiceClient() {
        }
        
        public ClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int addClient(MMC.MMCService.ClientService.Client _Client) {
            return base.Channel.addClient(_Client);
        }
        
        public System.Threading.Tasks.Task<int> addClientAsync(MMC.MMCService.ClientService.Client _Client) {
            return base.Channel.addClientAsync(_Client);
        }
        
        public int updateClient(MMC.MMCService.ClientService.Client _Client) {
            return base.Channel.updateClient(_Client);
        }
        
        public System.Threading.Tasks.Task<int> updateClientAsync(MMC.MMCService.ClientService.Client _Client) {
            return base.Channel.updateClientAsync(_Client);
        }
        
        public void deleteClient(int _ClientId) {
            base.Channel.deleteClient(_ClientId);
        }
        
        public System.Threading.Tasks.Task deleteClientAsync(int _ClientId) {
            return base.Channel.deleteClientAsync(_ClientId);
        }
        
        public MMC.MMCService.ClientService.Client getClientByID(int _ClientId) {
            return base.Channel.getClientByID(_ClientId);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.Client> getClientByIDAsync(int _ClientId) {
            return base.Channel.getClientByIDAsync(_ClientId);
        }
        
        public MMC.MMCService.ClientService.PagedClient getClientByName(string SearchText, int _skip, int _take) {
            return base.Channel.getClientByName(SearchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.PagedClient> getClientByNameAsync(string SearchText, int _skip, int _take) {
            return base.Channel.getClientByNameAsync(SearchText, _skip, _take);
        }
        
        public MMC.MMCService.ClientService.Client[] getClientAll() {
            return base.Channel.getClientAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.Client[]> getClientAllAsync() {
            return base.Channel.getClientAllAsync();
        }
        
        public MMC.MMCService.ClientService.Client getClaimAdministratorByClientID(int ClientID) {
            return base.Channel.getClaimAdministratorByClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.Client> getClaimAdministratorByClientIDAsync(int ClientID) {
            return base.Channel.getClaimAdministratorByClientIDAsync(ClientID);
        }
        
        public MMC.MMCService.ClientService.AdjusterByClientID[] getAdjusterByClientID(int ClientID) {
            return base.Channel.getAdjusterByClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.AdjusterByClientID[]> getAdjusterByClientIDAsync(int ClientID) {
            return base.Channel.getAdjusterByClientIDAsync(ClientID);
        }
        
        public MMC.MMCService.ClientService.ClaimAdministratorAllByClientID[] getClaimAdministratorAllByClientID(int _clientid) {
            return base.Channel.getClaimAdministratorAllByClientID(_clientid);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClaimAdministratorAllByClientID[]> getClaimAdministratorAllByClientIDAsync(int _clientid) {
            return base.Channel.getClaimAdministratorAllByClientIDAsync(_clientid);
        }
        
        public int addClientInsurer(MMC.MMCService.ClientService.ClientInsurer _clientInsurer) {
            return base.Channel.addClientInsurer(_clientInsurer);
        }
        
        public System.Threading.Tasks.Task<int> addClientInsurerAsync(MMC.MMCService.ClientService.ClientInsurer _clientInsurer) {
            return base.Channel.addClientInsurerAsync(_clientInsurer);
        }
        
        public int updateClientInsurer(MMC.MMCService.ClientService.ClientInsurer _clientInsurer) {
            return base.Channel.updateClientInsurer(_clientInsurer);
        }
        
        public System.Threading.Tasks.Task<int> updateClientInsurerAsync(MMC.MMCService.ClientService.ClientInsurer _clientInsurer) {
            return base.Channel.updateClientInsurerAsync(_clientInsurer);
        }
        
        public void deleteClientInsurer(int _clientInsurerID) {
            base.Channel.deleteClientInsurer(_clientInsurerID);
        }
        
        public System.Threading.Tasks.Task deleteClientInsurerAsync(int _clientInsurerID) {
            return base.Channel.deleteClientInsurerAsync(_clientInsurerID);
        }
        
        public MMC.MMCService.ClientService.PagedClientInsurer getClientInsurerByClientID(int ClientID, int _skip, int _take) {
            return base.Channel.getClientInsurerByClientID(ClientID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.PagedClientInsurer> getClientInsurerByClientIDAsync(int ClientID, int _skip, int _take) {
            return base.Channel.getClientInsurerByClientIDAsync(ClientID, _skip, _take);
        }
        
        public MMC.MMCService.ClientService.ClientInsurer[] getAllClientInsurerByClientID(int ClientID) {
            return base.Channel.getAllClientInsurerByClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientInsurer[]> getAllClientInsurerByClientIDAsync(int ClientID) {
            return base.Channel.getAllClientInsurerByClientIDAsync(ClientID);
        }
        
        public int addClientInsuranceBranch(MMC.MMCService.ClientService.ClientInsuranceBranch _clientInsuranceBranch) {
            return base.Channel.addClientInsuranceBranch(_clientInsuranceBranch);
        }
        
        public System.Threading.Tasks.Task<int> addClientInsuranceBranchAsync(MMC.MMCService.ClientService.ClientInsuranceBranch _clientInsuranceBranch) {
            return base.Channel.addClientInsuranceBranchAsync(_clientInsuranceBranch);
        }
        
        public int updateClientInsuranceBranch(MMC.MMCService.ClientService.ClientInsuranceBranch _clientInsuranceBranch) {
            return base.Channel.updateClientInsuranceBranch(_clientInsuranceBranch);
        }
        
        public System.Threading.Tasks.Task<int> updateClientInsuranceBranchAsync(MMC.MMCService.ClientService.ClientInsuranceBranch _clientInsuranceBranch) {
            return base.Channel.updateClientInsuranceBranchAsync(_clientInsuranceBranch);
        }
        
        public void deleteClientInsuranceBranch(int _clientInsuranceBranchID) {
            base.Channel.deleteClientInsuranceBranch(_clientInsuranceBranchID);
        }
        
        public System.Threading.Tasks.Task deleteClientInsuranceBranchAsync(int _clientInsuranceBranchID) {
            return base.Channel.deleteClientInsuranceBranchAsync(_clientInsuranceBranchID);
        }
        
        public void deleteClientInsuranceBranchByInsurerID(int _insurerID) {
            base.Channel.deleteClientInsuranceBranchByInsurerID(_insurerID);
        }
        
        public System.Threading.Tasks.Task deleteClientInsuranceBranchByInsurerIDAsync(int _insurerID) {
            return base.Channel.deleteClientInsuranceBranchByInsurerIDAsync(_insurerID);
        }
        
        public MMC.MMCService.ClientService.ClientInsuranceBranch[] getClientInsuranceBranchesAllByInsurerID(int _ClientID, int _insurerID) {
            return base.Channel.getClientInsuranceBranchesAllByInsurerID(_ClientID, _insurerID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientInsuranceBranch[]> getClientInsuranceBranchesAllByInsurerIDAsync(int _ClientID, int _insurerID) {
            return base.Channel.getClientInsuranceBranchesAllByInsurerIDAsync(_ClientID, _insurerID);
        }
        
        public int addClientEmployer(MMC.MMCService.ClientService.ClientEmployer _clientEmployer) {
            return base.Channel.addClientEmployer(_clientEmployer);
        }
        
        public System.Threading.Tasks.Task<int> addClientEmployerAsync(MMC.MMCService.ClientService.ClientEmployer _clientEmployer) {
            return base.Channel.addClientEmployerAsync(_clientEmployer);
        }
        
        public int updateClientEmployer(MMC.MMCService.ClientService.ClientEmployer _clientEmployer) {
            return base.Channel.updateClientEmployer(_clientEmployer);
        }
        
        public System.Threading.Tasks.Task<int> updateClientEmployerAsync(MMC.MMCService.ClientService.ClientEmployer _clientEmployer) {
            return base.Channel.updateClientEmployerAsync(_clientEmployer);
        }
        
        public void deleteClientEmployer(int _clientEmployerID) {
            base.Channel.deleteClientEmployer(_clientEmployerID);
        }
        
        public System.Threading.Tasks.Task deleteClientEmployerAsync(int _clientEmployerID) {
            return base.Channel.deleteClientEmployerAsync(_clientEmployerID);
        }
        
        public MMC.MMCService.ClientService.PagedClientEmployer getClientEmployerByClientID(int ClientID, int _skip, int _take) {
            return base.Channel.getClientEmployerByClientID(ClientID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.PagedClientEmployer> getClientEmployerByClientIDAsync(int ClientID, int _skip, int _take) {
            return base.Channel.getClientEmployerByClientIDAsync(ClientID, _skip, _take);
        }
        
        public MMC.MMCService.ClientService.ClientEmployer[] getAllClientEmployerByClientID(int ClientID) {
            return base.Channel.getAllClientEmployerByClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientEmployer[]> getAllClientEmployerByClientIDAsync(int ClientID) {
            return base.Channel.getAllClientEmployerByClientIDAsync(ClientID);
        }
        
        public int addClientThirdPartyAdministrator(MMC.MMCService.ClientService.ClientThirdPartyAdministrator _clientThirdPartyAdministrator) {
            return base.Channel.addClientThirdPartyAdministrator(_clientThirdPartyAdministrator);
        }
        
        public System.Threading.Tasks.Task<int> addClientThirdPartyAdministratorAsync(MMC.MMCService.ClientService.ClientThirdPartyAdministrator _clientThirdPartyAdministrator) {
            return base.Channel.addClientThirdPartyAdministratorAsync(_clientThirdPartyAdministrator);
        }
        
        public int updateClientThirdPartyAdministrator(MMC.MMCService.ClientService.ClientThirdPartyAdministrator _clientThirdPartyAdministrator) {
            return base.Channel.updateClientThirdPartyAdministrator(_clientThirdPartyAdministrator);
        }
        
        public System.Threading.Tasks.Task<int> updateClientThirdPartyAdministratorAsync(MMC.MMCService.ClientService.ClientThirdPartyAdministrator _clientThirdPartyAdministrator) {
            return base.Channel.updateClientThirdPartyAdministratorAsync(_clientThirdPartyAdministrator);
        }
        
        public void deleteClientThirdPartyAdministrator(int _clientTPAID) {
            base.Channel.deleteClientThirdPartyAdministrator(_clientTPAID);
        }
        
        public System.Threading.Tasks.Task deleteClientThirdPartyAdministratorAsync(int _clientTPAID) {
            return base.Channel.deleteClientThirdPartyAdministratorAsync(_clientTPAID);
        }
        
        public MMC.MMCService.ClientService.PagedClientThirdPartyAdministrator getClientThirdPartyAdministratorByClientID(int ClientID, int _skip, int _take) {
            return base.Channel.getClientThirdPartyAdministratorByClientID(ClientID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.PagedClientThirdPartyAdministrator> getClientThirdPartyAdministratorByClientIDAsync(int ClientID, int _skip, int _take) {
            return base.Channel.getClientThirdPartyAdministratorByClientIDAsync(ClientID, _skip, _take);
        }
        
        public MMC.MMCService.ClientService.ClientThirdPartyAdministrator[] getAllClientThirdPartyAdministratorByClientID(int ClientID) {
            return base.Channel.getAllClientThirdPartyAdministratorByClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientThirdPartyAdministrator[]> getAllClientThirdPartyAdministratorByClientIDAsync(int ClientID) {
            return base.Channel.getAllClientThirdPartyAdministratorByClientIDAsync(ClientID);
        }
        
        public int addClientThirdPartyAdministratorBranch(MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch _clientThirdPartyAdministratorBranch) {
            return base.Channel.addClientThirdPartyAdministratorBranch(_clientThirdPartyAdministratorBranch);
        }
        
        public System.Threading.Tasks.Task<int> addClientThirdPartyAdministratorBranchAsync(MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch _clientThirdPartyAdministratorBranch) {
            return base.Channel.addClientThirdPartyAdministratorBranchAsync(_clientThirdPartyAdministratorBranch);
        }
        
        public int updateClientThirdPartyAdministratorBranch(MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch _clientThirdPartyAdministratorBranch) {
            return base.Channel.updateClientThirdPartyAdministratorBranch(_clientThirdPartyAdministratorBranch);
        }
        
        public System.Threading.Tasks.Task<int> updateClientThirdPartyAdministratorBranchAsync(MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch _clientThirdPartyAdministratorBranch) {
            return base.Channel.updateClientThirdPartyAdministratorBranchAsync(_clientThirdPartyAdministratorBranch);
        }
        
        public void deleteClientThirdPartyAdministratorBranch(int _clientTPABranchID) {
            base.Channel.deleteClientThirdPartyAdministratorBranch(_clientTPABranchID);
        }
        
        public System.Threading.Tasks.Task deleteClientThirdPartyAdministratorBranchAsync(int _clientTPABranchID) {
            return base.Channel.deleteClientThirdPartyAdministratorBranchAsync(_clientTPABranchID);
        }
        
        public void deleteClientThirdPartyAdministratorBranchByTPAID(int _TPAID) {
            base.Channel.deleteClientThirdPartyAdministratorBranchByTPAID(_TPAID);
        }
        
        public System.Threading.Tasks.Task deleteClientThirdPartyAdministratorBranchByTPAIDAsync(int _TPAID) {
            return base.Channel.deleteClientThirdPartyAdministratorBranchByTPAIDAsync(_TPAID);
        }
        
        public MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch[] getClientTPABranchesAllByTPAID(int _ClientID, int _tpaID) {
            return base.Channel.getClientTPABranchesAllByTPAID(_ClientID, _tpaID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientThirdPartyAdministratorBranch[]> getClientTPABranchesAllByTPAIDAsync(int _ClientID, int _tpaID) {
            return base.Channel.getClientTPABranchesAllByTPAIDAsync(_ClientID, _tpaID);
        }
        
        public int addClientManagedCareCompany(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany) {
            return base.Channel.addClientManagedCareCompany(_clientManagedCareCompany);
        }
        
        public System.Threading.Tasks.Task<int> addClientManagedCareCompanyAsync(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany) {
            return base.Channel.addClientManagedCareCompanyAsync(_clientManagedCareCompany);
        }
        
        public int updateClientManagedCareCompany(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany) {
            return base.Channel.updateClientManagedCareCompany(_clientManagedCareCompany);
        }
        
        public System.Threading.Tasks.Task<int> updateClientManagedCareCompanyAsync(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany) {
            return base.Channel.updateClientManagedCareCompanyAsync(_clientManagedCareCompany);
        }
        
        public void deleteClientManagedCareCompany(int _clientManagedCareCompanyID) {
            base.Channel.deleteClientManagedCareCompany(_clientManagedCareCompanyID);
        }
        
        public System.Threading.Tasks.Task deleteClientManagedCareCompanyAsync(int _clientManagedCareCompanyID) {
            return base.Channel.deleteClientManagedCareCompanyAsync(_clientManagedCareCompanyID);
        }
        
        public MMC.MMCService.ClientService.PagedClientManagedCareCompany getClientManagedCareCompanyByClientID(int ClientID, int _skip, int _take) {
            return base.Channel.getClientManagedCareCompanyByClientID(ClientID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.PagedClientManagedCareCompany> getClientManagedCareCompanyByClientIDAsync(int ClientID, int _skip, int _take) {
            return base.Channel.getClientManagedCareCompanyByClientIDAsync(ClientID, _skip, _take);
        }
        
        public MMC.MMCService.ClientService.Client[] getAllClaimAdministrator() {
            return base.Channel.getAllClaimAdministrator();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.Client[]> getAllClaimAdministratorAsync() {
            return base.Channel.getAllClaimAdministratorAsync();
        }
        
        public int updateClientManagedCareCompanyByClientID(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany) {
            return base.Channel.updateClientManagedCareCompanyByClientID(_clientManagedCareCompany);
        }
        
        public System.Threading.Tasks.Task<int> updateClientManagedCareCompanyByClientIDAsync(MMC.MMCService.ClientService.ClientManagedCareCompany _clientManagedCareCompany) {
            return base.Channel.updateClientManagedCareCompanyByClientIDAsync(_clientManagedCareCompany);
        }
        
        public int addClientBilling(MMC.MMCService.ClientService.ClientBilling _clientBilling) {
            return base.Channel.addClientBilling(_clientBilling);
        }
        
        public System.Threading.Tasks.Task<int> addClientBillingAsync(MMC.MMCService.ClientService.ClientBilling _clientBilling) {
            return base.Channel.addClientBillingAsync(_clientBilling);
        }
        
        public int updateClientBilling(MMC.MMCService.ClientService.ClientBilling _clientBilling) {
            return base.Channel.updateClientBilling(_clientBilling);
        }
        
        public System.Threading.Tasks.Task<int> updateClientBillingAsync(MMC.MMCService.ClientService.ClientBilling _clientBilling) {
            return base.Channel.updateClientBillingAsync(_clientBilling);
        }
        
        public void deleteClientBilling(int _id) {
            base.Channel.deleteClientBilling(_id);
        }
        
        public System.Threading.Tasks.Task deleteClientBillingAsync(int _id) {
            return base.Channel.deleteClientBillingAsync(_id);
        }
        
        public MMC.MMCService.ClientService.ClientBilling getClientBillingByID(int _id) {
            return base.Channel.getClientBillingByID(_id);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBilling> getClientBillingByIDAsync(int _id) {
            return base.Channel.getClientBillingByIDAsync(_id);
        }
        
        public MMC.MMCService.ClientService.ClientBilling getClientBillingDetailByClientID(int _clientID) {
            return base.Channel.getClientBillingDetailByClientID(_clientID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBilling> getClientBillingDetailByClientIDAsync(int _clientID) {
            return base.Channel.getClientBillingDetailByClientIDAsync(_clientID);
        }
        
        public int addClientBillingRetailRate(MMC.MMCService.ClientService.ClientBillingRetailRate _clientBillingRetailRate) {
            return base.Channel.addClientBillingRetailRate(_clientBillingRetailRate);
        }
        
        public System.Threading.Tasks.Task<int> addClientBillingRetailRateAsync(MMC.MMCService.ClientService.ClientBillingRetailRate _clientBillingRetailRate) {
            return base.Channel.addClientBillingRetailRateAsync(_clientBillingRetailRate);
        }
        
        public int updateClientBillingRetailRate(MMC.MMCService.ClientService.ClientBillingRetailRate _clientBillingRetailRate) {
            return base.Channel.updateClientBillingRetailRate(_clientBillingRetailRate);
        }
        
        public System.Threading.Tasks.Task<int> updateClientBillingRetailRateAsync(MMC.MMCService.ClientService.ClientBillingRetailRate _clientBillingRetailRate) {
            return base.Channel.updateClientBillingRetailRateAsync(_clientBillingRetailRate);
        }
        
        public void deleteClientBillingRetailRate(int _id) {
            base.Channel.deleteClientBillingRetailRate(_id);
        }
        
        public System.Threading.Tasks.Task deleteClientBillingRetailRateAsync(int _id) {
            return base.Channel.deleteClientBillingRetailRateAsync(_id);
        }
        
        public MMC.MMCService.ClientService.ClientBillingRetailRate getClientBillingRetailRateByID(int _id) {
            return base.Channel.getClientBillingRetailRateByID(_id);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBillingRetailRate> getClientBillingRetailRateByIDAsync(int _id) {
            return base.Channel.getClientBillingRetailRateByIDAsync(_id);
        }
        
        public MMC.MMCService.ClientService.ClientBillingRetailRate getClientBillingRetailRateByClientBillingID(int _clientBillingID) {
            return base.Channel.getClientBillingRetailRateByClientBillingID(_clientBillingID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBillingRetailRate> getClientBillingRetailRateByClientBillingIDAsync(int _clientBillingID) {
            return base.Channel.getClientBillingRetailRateByClientBillingIDAsync(_clientBillingID);
        }
        
        public int addClientBillingWholesaleRate(MMC.MMCService.ClientService.ClientBillingWholesaleRate _clientBillingWholesaleRate) {
            return base.Channel.addClientBillingWholesaleRate(_clientBillingWholesaleRate);
        }
        
        public System.Threading.Tasks.Task<int> addClientBillingWholesaleRateAsync(MMC.MMCService.ClientService.ClientBillingWholesaleRate _clientBillingWholesaleRate) {
            return base.Channel.addClientBillingWholesaleRateAsync(_clientBillingWholesaleRate);
        }
        
        public int updateClientBillingWholesaleRate(MMC.MMCService.ClientService.ClientBillingWholesaleRate _clientBillingWholesaleRate) {
            return base.Channel.updateClientBillingWholesaleRate(_clientBillingWholesaleRate);
        }
        
        public System.Threading.Tasks.Task<int> updateClientBillingWholesaleRateAsync(MMC.MMCService.ClientService.ClientBillingWholesaleRate _clientBillingWholesaleRate) {
            return base.Channel.updateClientBillingWholesaleRateAsync(_clientBillingWholesaleRate);
        }
        
        public void deleteClientBillingWholesaleRate(int _id) {
            base.Channel.deleteClientBillingWholesaleRate(_id);
        }
        
        public System.Threading.Tasks.Task deleteClientBillingWholesaleRateAsync(int _id) {
            return base.Channel.deleteClientBillingWholesaleRateAsync(_id);
        }
        
        public MMC.MMCService.ClientService.ClientBillingWholesaleRate getClientBillingWholesaleRateByID(int _id) {
            return base.Channel.getClientBillingWholesaleRateByID(_id);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBillingWholesaleRate> getClientBillingWholesaleRateByIDAsync(int _id) {
            return base.Channel.getClientBillingWholesaleRateByIDAsync(_id);
        }
        
        public MMC.MMCService.ClientService.ClientBillingWholesaleRate getClientBillingWholesaleRateByClientBillingID(int _clientBillingID) {
            return base.Channel.getClientBillingWholesaleRateByClientBillingID(_clientBillingID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientBillingWholesaleRate> getClientBillingWholesaleRateByClientBillingIDAsync(int _clientBillingID) {
            return base.Channel.getClientBillingWholesaleRateByClientBillingIDAsync(_clientBillingID);
        }
        
        public int addClientPrivateLabel(MMC.MMCService.ClientService.ClientPrivateLabel _clientPrivateLabel) {
            return base.Channel.addClientPrivateLabel(_clientPrivateLabel);
        }
        
        public System.Threading.Tasks.Task<int> addClientPrivateLabelAsync(MMC.MMCService.ClientService.ClientPrivateLabel _clientPrivateLabel) {
            return base.Channel.addClientPrivateLabelAsync(_clientPrivateLabel);
        }
        
        public int updateClientPrivateLabel(MMC.MMCService.ClientService.ClientPrivateLabel _clientPrivateLabel) {
            return base.Channel.updateClientPrivateLabel(_clientPrivateLabel);
        }
        
        public System.Threading.Tasks.Task<int> updateClientPrivateLabelAsync(MMC.MMCService.ClientService.ClientPrivateLabel _clientPrivateLabel) {
            return base.Channel.updateClientPrivateLabelAsync(_clientPrivateLabel);
        }
        
        public void deleteClientPrivateLabel(int _id) {
            base.Channel.deleteClientPrivateLabel(_id);
        }
        
        public System.Threading.Tasks.Task deleteClientPrivateLabelAsync(int _id) {
            return base.Channel.deleteClientPrivateLabelAsync(_id);
        }
        
        public void deleteClientPrivateLabelByClientID(int _clientID) {
            base.Channel.deleteClientPrivateLabelByClientID(_clientID);
        }
        
        public System.Threading.Tasks.Task deleteClientPrivateLabelByClientIDAsync(int _clientID) {
            return base.Channel.deleteClientPrivateLabelByClientIDAsync(_clientID);
        }
        
        public MMC.MMCService.ClientService.ClientPrivateLabel getClientPrivateLabelByID(int _id) {
            return base.Channel.getClientPrivateLabelByID(_id);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientPrivateLabel> getClientPrivateLabelByIDAsync(int _id) {
            return base.Channel.getClientPrivateLabelByIDAsync(_id);
        }
        
        public MMC.MMCService.ClientService.ClientPrivateLabel getClientPrivateLabelDetailByClientID(int _clientID) {
            return base.Channel.getClientPrivateLabelDetailByClientID(_clientID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.ClientService.ClientPrivateLabel> getClientPrivateLabelDetailByClientIDAsync(int _clientID) {
            return base.Channel.getClientPrivateLabelDetailByClientIDAsync(_clientID);
        }
    }
}
