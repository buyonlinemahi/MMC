//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMC.MMCService.CurrentWorkloadService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrentWorkloadReportParameter", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class CurrentWorkloadReportParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentWorkloadReportIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentWorkloadReportParameterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentWorkloadReportID {
            get {
                return this.CurrentWorkloadReportIDField;
            }
            set {
                if ((this.CurrentWorkloadReportIDField.Equals(value) != true)) {
                    this.CurrentWorkloadReportIDField = value;
                    this.RaisePropertyChanged("CurrentWorkloadReportID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentWorkloadReportParameterID {
            get {
                return this.CurrentWorkloadReportParameterIDField;
            }
            set {
                if ((this.CurrentWorkloadReportParameterIDField.Equals(value) != true)) {
                    this.CurrentWorkloadReportParameterIDField = value;
                    this.RaisePropertyChanged("CurrentWorkloadReportParameterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrentWorkloadReport", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class CurrentWorkloadReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentWorkloadReportIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentWorkloadReportNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentWorkloadReportID {
            get {
                return this.CurrentWorkloadReportIDField;
            }
            set {
                if ((this.CurrentWorkloadReportIDField.Equals(value) != true)) {
                    this.CurrentWorkloadReportIDField = value;
                    this.RaisePropertyChanged("CurrentWorkloadReportID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentWorkloadReportName {
            get {
                return this.CurrentWorkloadReportNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentWorkloadReportNameField, value) != true)) {
                    this.CurrentWorkloadReportNameField = value;
                    this.RaisePropertyChanged("CurrentWorkloadReportName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MMCService.CurrentWorkloadService.ICurrentWorkloadService")]
    public interface ICurrentWorkloadService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrentWorkloadService/AddRptCurrentWorkloadReportParameters", ReplyAction="http://tempuri.org/ICurrentWorkloadService/AddRptCurrentWorkloadReportParametersR" +
            "esponse")]
        void AddRptCurrentWorkloadReportParameters(System.Collections.Generic.List<MMC.MMCService.CurrentWorkloadService.CurrentWorkloadReportParameter> _rptCurrentWorkloadReportParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrentWorkloadService/AddRptCurrentWorkloadReportParameters", ReplyAction="http://tempuri.org/ICurrentWorkloadService/AddRptCurrentWorkloadReportParametersR" +
            "esponse")]
        System.Threading.Tasks.Task AddRptCurrentWorkloadReportParametersAsync(System.Collections.Generic.List<MMC.MMCService.CurrentWorkloadService.CurrentWorkloadReportParameter> _rptCurrentWorkloadReportParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrentWorkloadService/AddCurrentWorkloadReport", ReplyAction="http://tempuri.org/ICurrentWorkloadService/AddCurrentWorkloadReportResponse")]
        int AddCurrentWorkloadReport(MMC.MMCService.CurrentWorkloadService.CurrentWorkloadReport _currentworkloadReport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrentWorkloadService/AddCurrentWorkloadReport", ReplyAction="http://tempuri.org/ICurrentWorkloadService/AddCurrentWorkloadReportResponse")]
        System.Threading.Tasks.Task<int> AddCurrentWorkloadReportAsync(MMC.MMCService.CurrentWorkloadService.CurrentWorkloadReport _currentworkloadReport);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICurrentWorkloadServiceChannel : MMC.MMCService.CurrentWorkloadService.ICurrentWorkloadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrentWorkloadServiceClient : System.ServiceModel.ClientBase<MMC.MMCService.CurrentWorkloadService.ICurrentWorkloadService>, MMC.MMCService.CurrentWorkloadService.ICurrentWorkloadService {
        
        public CurrentWorkloadServiceClient() {
        }
        
        public CurrentWorkloadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CurrentWorkloadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrentWorkloadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrentWorkloadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddRptCurrentWorkloadReportParameters(System.Collections.Generic.List<MMC.MMCService.CurrentWorkloadService.CurrentWorkloadReportParameter> _rptCurrentWorkloadReportParameters) {
            base.Channel.AddRptCurrentWorkloadReportParameters(_rptCurrentWorkloadReportParameters);
        }
        
        public System.Threading.Tasks.Task AddRptCurrentWorkloadReportParametersAsync(System.Collections.Generic.List<MMC.MMCService.CurrentWorkloadService.CurrentWorkloadReportParameter> _rptCurrentWorkloadReportParameters) {
            return base.Channel.AddRptCurrentWorkloadReportParametersAsync(_rptCurrentWorkloadReportParameters);
        }
        
        public int AddCurrentWorkloadReport(MMC.MMCService.CurrentWorkloadService.CurrentWorkloadReport _currentworkloadReport) {
            return base.Channel.AddCurrentWorkloadReport(_currentworkloadReport);
        }
        
        public System.Threading.Tasks.Task<int> AddCurrentWorkloadReportAsync(MMC.MMCService.CurrentWorkloadService.CurrentWorkloadReport _currentworkloadReport) {
            return base.Channel.AddCurrentWorkloadReportAsync(_currentworkloadReport);
        }
    }
}
