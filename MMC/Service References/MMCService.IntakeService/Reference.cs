//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMC.MMCService.IntakeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFAReferral", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFAReferral : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CredentialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvaluatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EvaluationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InternalAppealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PhysicianIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFACEDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFACETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFADiscrepanciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFAHCRGDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAIMRHistoryRationaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAIMRReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RFAReferralCreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFAReferralDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFASignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFASignatureDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RFASignedByPhysicianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RFATreatmentRequestClearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Credentials {
            get {
                return this.CredentialsField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialsField, value) != true)) {
                    this.CredentialsField = value;
                    this.RaisePropertyChanged("Credentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvaluatedBy {
            get {
                return this.EvaluatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.EvaluatedByField, value) != true)) {
                    this.EvaluatedByField = value;
                    this.RaisePropertyChanged("EvaluatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EvaluationDate {
            get {
                return this.EvaluationDateField;
            }
            set {
                if ((this.EvaluationDateField.Equals(value) != true)) {
                    this.EvaluationDateField = value;
                    this.RaisePropertyChanged("EvaluationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> InternalAppeal {
            get {
                return this.InternalAppealField;
            }
            set {
                if ((this.InternalAppealField.Equals(value) != true)) {
                    this.InternalAppealField = value;
                    this.RaisePropertyChanged("InternalAppeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PhysicianID {
            get {
                return this.PhysicianIDField;
            }
            set {
                if ((this.PhysicianIDField.Equals(value) != true)) {
                    this.PhysicianIDField = value;
                    this.RaisePropertyChanged("PhysicianID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFACEDate {
            get {
                return this.RFACEDateField;
            }
            set {
                if ((this.RFACEDateField.Equals(value) != true)) {
                    this.RFACEDateField = value;
                    this.RaisePropertyChanged("RFACEDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFACETime {
            get {
                return this.RFACETimeField;
            }
            set {
                if ((object.ReferenceEquals(this.RFACETimeField, value) != true)) {
                    this.RFACETimeField = value;
                    this.RaisePropertyChanged("RFACETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFADiscrepancies {
            get {
                return this.RFADiscrepanciesField;
            }
            set {
                if ((object.ReferenceEquals(this.RFADiscrepanciesField, value) != true)) {
                    this.RFADiscrepanciesField = value;
                    this.RaisePropertyChanged("RFADiscrepancies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFAHCRGDate {
            get {
                return this.RFAHCRGDateField;
            }
            set {
                if ((this.RFAHCRGDateField.Equals(value) != true)) {
                    this.RFAHCRGDateField = value;
                    this.RaisePropertyChanged("RFAHCRGDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAIMRHistoryRationale {
            get {
                return this.RFAIMRHistoryRationaleField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAIMRHistoryRationaleField, value) != true)) {
                    this.RFAIMRHistoryRationaleField = value;
                    this.RaisePropertyChanged("RFAIMRHistoryRationale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAIMRReferenceNumber {
            get {
                return this.RFAIMRReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAIMRReferenceNumberField, value) != true)) {
                    this.RFAIMRReferenceNumberField = value;
                    this.RaisePropertyChanged("RFAIMRReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RFAReferralCreatedDate {
            get {
                return this.RFAReferralCreatedDateField;
            }
            set {
                if ((this.RFAReferralCreatedDateField.Equals(value) != true)) {
                    this.RFAReferralCreatedDateField = value;
                    this.RaisePropertyChanged("RFAReferralCreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFAReferralDate {
            get {
                return this.RFAReferralDateField;
            }
            set {
                if ((this.RFAReferralDateField.Equals(value) != true)) {
                    this.RFAReferralDateField = value;
                    this.RaisePropertyChanged("RFAReferralDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFASignature {
            get {
                return this.RFASignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.RFASignatureField, value) != true)) {
                    this.RFASignatureField = value;
                    this.RaisePropertyChanged("RFASignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFASignatureDescription {
            get {
                return this.RFASignatureDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RFASignatureDescriptionField, value) != true)) {
                    this.RFASignatureDescriptionField = value;
                    this.RaisePropertyChanged("RFASignatureDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RFASignedByPhysician {
            get {
                return this.RFASignedByPhysicianField;
            }
            set {
                if ((this.RFASignedByPhysicianField.Equals(value) != true)) {
                    this.RFASignedByPhysicianField = value;
                    this.RaisePropertyChanged("RFASignedByPhysician");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RFATreatmentRequestClear {
            get {
                return this.RFATreatmentRequestClearField;
            }
            set {
                if ((this.RFATreatmentRequestClearField.Equals(value) != true)) {
                    this.RFATreatmentRequestClearField = value;
                    this.RaisePropertyChanged("RFATreatmentRequestClear");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedIncompleteReferrals", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedIncompleteReferrals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.IntakeService.IncompleteReferrals[] IncompleteReferralsDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.IntakeService.IncompleteReferrals[] IncompleteReferralsDetails {
            get {
                return this.IncompleteReferralsDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.IncompleteReferralsDetailsField, value) != true)) {
                    this.IncompleteReferralsDetailsField = value;
                    this.RaisePropertyChanged("IncompleteReferralsDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncompleteReferrals", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class IncompleteReferrals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatClaimNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatClaimNumber {
            get {
                return this.PatClaimNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PatClaimNumberField, value) != true)) {
                    this.PatClaimNumberField = value;
                    this.RaisePropertyChanged("PatClaimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatFirstName {
            get {
                return this.PatFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatFirstNameField, value) != true)) {
                    this.PatFirstNameField = value;
                    this.RaisePropertyChanged("PatFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatLastName {
            get {
                return this.PatLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatLastNameField, value) != true)) {
                    this.PatLastNameField = value;
                    this.RaisePropertyChanged("PatLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFASplittedReferralHistory", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFASplittedReferralHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFANewReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAOldReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RFASplittedReferralDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFASplittedReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFANewReferralID {
            get {
                return this.RFANewReferralIDField;
            }
            set {
                if ((this.RFANewReferralIDField.Equals(value) != true)) {
                    this.RFANewReferralIDField = value;
                    this.RaisePropertyChanged("RFANewReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAOldReferralID {
            get {
                return this.RFAOldReferralIDField;
            }
            set {
                if ((this.RFAOldReferralIDField.Equals(value) != true)) {
                    this.RFAOldReferralIDField = value;
                    this.RaisePropertyChanged("RFAOldReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RFASplittedReferralDate {
            get {
                return this.RFASplittedReferralDateField;
            }
            set {
                if ((this.RFASplittedReferralDateField.Equals(value) != true)) {
                    this.RFASplittedReferralDateField = value;
                    this.RaisePropertyChanged("RFASplittedReferralDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFASplittedReferralID {
            get {
                return this.RFASplittedReferralIDField;
            }
            set {
                if ((this.RFASplittedReferralIDField.Equals(value) != true)) {
                    this.RFASplittedReferralIDField = value;
                    this.RaisePropertyChanged("RFASplittedReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFAMergedReferralHistory", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFAMergedReferralHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RFAMergedReferralDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAMergedReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFANewReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAOldReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RFAMergedReferralDate {
            get {
                return this.RFAMergedReferralDateField;
            }
            set {
                if ((this.RFAMergedReferralDateField.Equals(value) != true)) {
                    this.RFAMergedReferralDateField = value;
                    this.RaisePropertyChanged("RFAMergedReferralDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAMergedReferralID {
            get {
                return this.RFAMergedReferralIDField;
            }
            set {
                if ((this.RFAMergedReferralIDField.Equals(value) != true)) {
                    this.RFAMergedReferralIDField = value;
                    this.RaisePropertyChanged("RFAMergedReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFANewReferralID {
            get {
                return this.RFANewReferralIDField;
            }
            set {
                if ((this.RFANewReferralIDField.Equals(value) != true)) {
                    this.RFANewReferralIDField = value;
                    this.RaisePropertyChanged("RFANewReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAOldReferralID {
            get {
                return this.RFAOldReferralIDField;
            }
            set {
                if ((this.RFAOldReferralIDField.Equals(value) != true)) {
                    this.RFAOldReferralIDField = value;
                    this.RaisePropertyChanged("RFAOldReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFAReferralFile", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFAReferralFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFAFileCreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAFileTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAFileUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralFileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAReferralFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFATypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileTypeName {
            get {
                return this.FileTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeNameField, value) != true)) {
                    this.FileTypeNameField = value;
                    this.RaisePropertyChanged("FileTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFAFileCreationDate {
            get {
                return this.RFAFileCreationDateField;
            }
            set {
                if ((this.RFAFileCreationDateField.Equals(value) != true)) {
                    this.RFAFileCreationDateField = value;
                    this.RaisePropertyChanged("RFAFileCreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAFileTypeID {
            get {
                return this.RFAFileTypeIDField;
            }
            set {
                if ((this.RFAFileTypeIDField.Equals(value) != true)) {
                    this.RFAFileTypeIDField = value;
                    this.RaisePropertyChanged("RFAFileTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAFileUserID {
            get {
                return this.RFAFileUserIDField;
            }
            set {
                if ((this.RFAFileUserIDField.Equals(value) != true)) {
                    this.RFAFileUserIDField = value;
                    this.RaisePropertyChanged("RFAFileUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralFileID {
            get {
                return this.RFAReferralFileIDField;
            }
            set {
                if ((this.RFAReferralFileIDField.Equals(value) != true)) {
                    this.RFAReferralFileIDField = value;
                    this.RaisePropertyChanged("RFAReferralFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAReferralFileName {
            get {
                return this.RFAReferralFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAReferralFileNameField, value) != true)) {
                    this.RFAReferralFileNameField = value;
                    this.RaisePropertyChanged("RFAReferralFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAType {
            get {
                return this.RFATypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RFATypeField, value) != true)) {
                    this.RFATypeField = value;
                    this.RaisePropertyChanged("RFAType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PreviousReferralFromCurrentReferral", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class PreviousReferralFromCurrentReferral : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DecisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DecisionID {
            get {
                return this.DecisionIDField;
            }
            set {
                if ((this.DecisionIDField.Equals(value) != true)) {
                    this.DecisionIDField = value;
                    this.RaisePropertyChanged("DecisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFARequest", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFARequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DecisionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DecisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFACPT_NDCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAClinicalReasonforDecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFADurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFADurationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RFAExpediteReferralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAGuidelinesUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFALatestDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFANotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARelevantPortionUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAReqCertificationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFARequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARequestedTreatmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAStrenghtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RequestTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TreatmentTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DecisionDate {
            get {
                return this.DecisionDateField;
            }
            set {
                if ((this.DecisionDateField.Equals(value) != true)) {
                    this.DecisionDateField = value;
                    this.RaisePropertyChanged("DecisionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DecisionID {
            get {
                return this.DecisionIDField;
            }
            set {
                if ((this.DecisionIDField.Equals(value) != true)) {
                    this.DecisionIDField = value;
                    this.RaisePropertyChanged("DecisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFACPT_NDC {
            get {
                return this.RFACPT_NDCField;
            }
            set {
                if ((object.ReferenceEquals(this.RFACPT_NDCField, value) != true)) {
                    this.RFACPT_NDCField = value;
                    this.RaisePropertyChanged("RFACPT_NDC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAClinicalReasonforDecision {
            get {
                return this.RFAClinicalReasonforDecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAClinicalReasonforDecisionField, value) != true)) {
                    this.RFAClinicalReasonforDecisionField = value;
                    this.RaisePropertyChanged("RFAClinicalReasonforDecision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFADuration {
            get {
                return this.RFADurationField;
            }
            set {
                if ((this.RFADurationField.Equals(value) != true)) {
                    this.RFADurationField = value;
                    this.RaisePropertyChanged("RFADuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFADurationTypeID {
            get {
                return this.RFADurationTypeIDField;
            }
            set {
                if ((this.RFADurationTypeIDField.Equals(value) != true)) {
                    this.RFADurationTypeIDField = value;
                    this.RaisePropertyChanged("RFADurationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RFAExpediteReferral {
            get {
                return this.RFAExpediteReferralField;
            }
            set {
                if ((this.RFAExpediteReferralField.Equals(value) != true)) {
                    this.RFAExpediteReferralField = value;
                    this.RaisePropertyChanged("RFAExpediteReferral");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAFrequency {
            get {
                return this.RFAFrequencyField;
            }
            set {
                if ((this.RFAFrequencyField.Equals(value) != true)) {
                    this.RFAFrequencyField = value;
                    this.RaisePropertyChanged("RFAFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAGuidelinesUtilized {
            get {
                return this.RFAGuidelinesUtilizedField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAGuidelinesUtilizedField, value) != true)) {
                    this.RFAGuidelinesUtilizedField = value;
                    this.RaisePropertyChanged("RFAGuidelinesUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFALatestDueDate {
            get {
                return this.RFALatestDueDateField;
            }
            set {
                if ((this.RFALatestDueDateField.Equals(value) != true)) {
                    this.RFALatestDueDateField = value;
                    this.RaisePropertyChanged("RFALatestDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFANotes {
            get {
                return this.RFANotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RFANotesField, value) != true)) {
                    this.RFANotesField = value;
                    this.RaisePropertyChanged("RFANotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAQuantity {
            get {
                return this.RFAQuantityField;
            }
            set {
                if ((this.RFAQuantityField.Equals(value) != true)) {
                    this.RFAQuantityField = value;
                    this.RaisePropertyChanged("RFAQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARelevantPortionUtilized {
            get {
                return this.RFARelevantPortionUtilizedField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARelevantPortionUtilizedField, value) != true)) {
                    this.RFARelevantPortionUtilizedField = value;
                    this.RaisePropertyChanged("RFARelevantPortionUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAReqCertificationNumber {
            get {
                return this.RFAReqCertificationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAReqCertificationNumberField, value) != true)) {
                    this.RFAReqCertificationNumberField = value;
                    this.RaisePropertyChanged("RFAReqCertificationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFARequestDate {
            get {
                return this.RFARequestDateField;
            }
            set {
                if ((this.RFARequestDateField.Equals(value) != true)) {
                    this.RFARequestDateField = value;
                    this.RaisePropertyChanged("RFARequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARequestedTreatment {
            get {
                return this.RFARequestedTreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARequestedTreatmentField, value) != true)) {
                    this.RFARequestedTreatmentField = value;
                    this.RaisePropertyChanged("RFARequestedTreatment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAStatus {
            get {
                return this.RFAStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAStatusField, value) != true)) {
                    this.RFAStatusField = value;
                    this.RaisePropertyChanged("RFAStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAStrenght {
            get {
                return this.RFAStrenghtField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAStrenghtField, value) != true)) {
                    this.RFAStrenghtField = value;
                    this.RaisePropertyChanged("RFAStrenght");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RequestTypeID {
            get {
                return this.RequestTypeIDField;
            }
            set {
                if ((this.RequestTypeIDField.Equals(value) != true)) {
                    this.RequestTypeIDField = value;
                    this.RaisePropertyChanged("RequestTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TreatmentTypeID {
            get {
                return this.TreatmentTypeIDField;
            }
            set {
                if ((this.TreatmentTypeIDField.Equals(value) != true)) {
                    this.TreatmentTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFARequestAdditionalInfo", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFARequestAdditionalInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OriginalRFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestAdditionalInfoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> URDeclineInternalAppealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> URIncompleteRFAFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> URNoRFAFormField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OriginalRFARequestID {
            get {
                return this.OriginalRFARequestIDField;
            }
            set {
                if ((this.OriginalRFARequestIDField.Equals(value) != true)) {
                    this.OriginalRFARequestIDField = value;
                    this.RaisePropertyChanged("OriginalRFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestAdditionalInfoID {
            get {
                return this.RFARequestAdditionalInfoIDField;
            }
            set {
                if ((this.RFARequestAdditionalInfoIDField.Equals(value) != true)) {
                    this.RFARequestAdditionalInfoIDField = value;
                    this.RaisePropertyChanged("RFARequestAdditionalInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> URDeclineInternalAppeal {
            get {
                return this.URDeclineInternalAppealField;
            }
            set {
                if ((this.URDeclineInternalAppealField.Equals(value) != true)) {
                    this.URDeclineInternalAppealField = value;
                    this.RaisePropertyChanged("URDeclineInternalAppeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> URIncompleteRFAForm {
            get {
                return this.URIncompleteRFAFormField;
            }
            set {
                if ((this.URIncompleteRFAFormField.Equals(value) != true)) {
                    this.URIncompleteRFAFormField = value;
                    this.RaisePropertyChanged("URIncompleteRFAForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> URNoRFAForm {
            get {
                return this.URNoRFAFormField;
            }
            set {
                if ((this.URNoRFAFormField.Equals(value) != true)) {
                    this.URNoRFAFormField = value;
                    this.RaisePropertyChanged("URNoRFAForm");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFAReferralAdditionalInfo", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFAReferralAdditionalInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OriginalRFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralAdditionalInfoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OriginalRFAReferralID {
            get {
                return this.OriginalRFAReferralIDField;
            }
            set {
                if ((this.OriginalRFAReferralIDField.Equals(value) != true)) {
                    this.OriginalRFAReferralIDField = value;
                    this.RaisePropertyChanged("OriginalRFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralAdditionalInfoID {
            get {
                return this.RFAReferralAdditionalInfoIDField;
            }
            set {
                if ((this.RFAReferralAdditionalInfoIDField.Equals(value) != true)) {
                    this.RFAReferralAdditionalInfoIDField = value;
                    this.RaisePropertyChanged("RFAReferralAdditionalInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFARequestAdditionalInfoDetail", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFARequestAdditionalInfoDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DecisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OriginalRFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestAdditionalInfoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> URDeclineInternalAppealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> URIncompleteRFAFormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> URNoRFAFormField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DecisionID {
            get {
                return this.DecisionIDField;
            }
            set {
                if ((this.DecisionIDField.Equals(value) != true)) {
                    this.DecisionIDField = value;
                    this.RaisePropertyChanged("DecisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OriginalRFARequestID {
            get {
                return this.OriginalRFARequestIDField;
            }
            set {
                if ((this.OriginalRFARequestIDField.Equals(value) != true)) {
                    this.OriginalRFARequestIDField = value;
                    this.RaisePropertyChanged("OriginalRFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestAdditionalInfoID {
            get {
                return this.RFARequestAdditionalInfoIDField;
            }
            set {
                if ((this.RFARequestAdditionalInfoIDField.Equals(value) != true)) {
                    this.RFARequestAdditionalInfoIDField = value;
                    this.RaisePropertyChanged("RFARequestAdditionalInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> URDeclineInternalAppeal {
            get {
                return this.URDeclineInternalAppealField;
            }
            set {
                if ((this.URDeclineInternalAppealField.Equals(value) != true)) {
                    this.URDeclineInternalAppealField = value;
                    this.RaisePropertyChanged("URDeclineInternalAppeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> URIncompleteRFAForm {
            get {
                return this.URIncompleteRFAFormField;
            }
            set {
                if ((this.URIncompleteRFAFormField.Equals(value) != true)) {
                    this.URIncompleteRFAFormField = value;
                    this.RaisePropertyChanged("URIncompleteRFAForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> URNoRFAForm {
            get {
                return this.URNoRFAFormField;
            }
            set {
                if ((this.URNoRFAFormField.Equals(value) != true)) {
                    this.URNoRFAFormField = value;
                    this.RaisePropertyChanged("URNoRFAForm");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFARequestCPTCode", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFARequestCPTCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPT_NDCCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFACPTCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPT_NDCCode {
            get {
                return this.CPT_NDCCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CPT_NDCCodeField, value) != true)) {
                    this.CPT_NDCCodeField = value;
                    this.RaisePropertyChanged("CPT_NDCCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFACPTCodeID {
            get {
                return this.RFACPTCodeIDField;
            }
            set {
                if ((this.RFACPTCodeIDField.Equals(value) != true)) {
                    this.RFACPTCodeIDField = value;
                    this.RaisePropertyChanged("RFACPTCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFARecordSplitting", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFARecordSplitting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RFARecDocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARecDocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARecPageEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARecPageStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARecSpltIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARecSpltSummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFAUploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentCategoryID {
            get {
                return this.DocumentCategoryIDField;
            }
            set {
                if ((this.DocumentCategoryIDField.Equals(value) != true)) {
                    this.DocumentCategoryIDField = value;
                    this.RaisePropertyChanged("DocumentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAFileName {
            get {
                return this.RFAFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAFileNameField, value) != true)) {
                    this.RFAFileNameField = value;
                    this.RaisePropertyChanged("RFAFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RFARecDocumentDate {
            get {
                return this.RFARecDocumentDateField;
            }
            set {
                if ((this.RFARecDocumentDateField.Equals(value) != true)) {
                    this.RFARecDocumentDateField = value;
                    this.RaisePropertyChanged("RFARecDocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARecDocumentName {
            get {
                return this.RFARecDocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARecDocumentNameField, value) != true)) {
                    this.RFARecDocumentNameField = value;
                    this.RaisePropertyChanged("RFARecDocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARecPageEnd {
            get {
                return this.RFARecPageEndField;
            }
            set {
                if ((this.RFARecPageEndField.Equals(value) != true)) {
                    this.RFARecPageEndField = value;
                    this.RaisePropertyChanged("RFARecPageEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARecPageStart {
            get {
                return this.RFARecPageStartField;
            }
            set {
                if ((this.RFARecPageStartField.Equals(value) != true)) {
                    this.RFARecPageStartField = value;
                    this.RaisePropertyChanged("RFARecPageStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARecSpltID {
            get {
                return this.RFARecSpltIDField;
            }
            set {
                if ((this.RFARecSpltIDField.Equals(value) != true)) {
                    this.RFARecSpltIDField = value;
                    this.RaisePropertyChanged("RFARecSpltID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARecSpltSummary {
            get {
                return this.RFARecSpltSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARecSpltSummaryField, value) != true)) {
                    this.RFARecSpltSummaryField = value;
                    this.RaisePropertyChanged("RFARecSpltSummary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFAUploadDate {
            get {
                return this.RFAUploadDateField;
            }
            set {
                if ((this.RFAUploadDateField.Equals(value) != true)) {
                    this.RFAUploadDateField = value;
                    this.RaisePropertyChanged("RFAUploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientDetailsByReferralID", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientDetailsByReferralID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatClaimNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PatDOIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatClaimNumber {
            get {
                return this.PatClaimNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PatClaimNumberField, value) != true)) {
                    this.PatClaimNumberField = value;
                    this.RaisePropertyChanged("PatClaimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PatDOI {
            get {
                return this.PatDOIField;
            }
            set {
                if ((this.PatDOIField.Equals(value) != true)) {
                    this.PatDOIField = value;
                    this.RaisePropertyChanged("PatDOI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedRFADiagnosis", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedRFADiagnosis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.IntakeService.RFADiagnosis[] RFADiagnosisDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.IntakeService.RFADiagnosis[] RFADiagnosisDetails {
            get {
                return this.RFADiagnosisDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RFADiagnosisDetailsField, value) != true)) {
                    this.RFADiagnosisDetailsField = value;
                    this.RaisePropertyChanged("RFADiagnosisDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFADiagnosis", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFADiagnosis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientClaimDiagnosisIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string icdICDNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICDDescription {
            get {
                return this.ICDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ICDDescriptionField, value) != true)) {
                    this.ICDDescriptionField = value;
                    this.RaisePropertyChanged("ICDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientClaimDiagnosisID {
            get {
                return this.PatientClaimDiagnosisIDField;
            }
            set {
                if ((this.PatientClaimDiagnosisIDField.Equals(value) != true)) {
                    this.PatientClaimDiagnosisIDField = value;
                    this.RaisePropertyChanged("PatientClaimDiagnosisID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icdICDNumber {
            get {
                return this.icdICDNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.icdICDNumberField, value) != true)) {
                    this.icdICDNumberField = value;
                    this.RaisePropertyChanged("icdICDNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFAPatMedicalRecordReview", Namespace="http://schemas.datacontract.org/2004/07/MMC.Core.Data.Model")]
    [System.SerializableAttribute()]
    public partial class RFAPatMedicalRecordReview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAPatMedicalRecordReviewedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARecSpltIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAPatMedicalRecordReviewedID {
            get {
                return this.RFAPatMedicalRecordReviewedIDField;
            }
            set {
                if ((this.RFAPatMedicalRecordReviewedIDField.Equals(value) != true)) {
                    this.RFAPatMedicalRecordReviewedIDField = value;
                    this.RaisePropertyChanged("RFAPatMedicalRecordReviewedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARecSpltID {
            get {
                return this.RFARecSpltIDField;
            }
            set {
                if ((this.RFARecSpltIDField.Equals(value) != true)) {
                    this.RFARecSpltIDField = value;
                    this.RaisePropertyChanged("RFARecSpltID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedRFAPatMedicalRecordReview", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedRFAPatMedicalRecordReview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.IntakeService.RFAPatMedicalRecordReviewDetail[] RFAPatMedicalRecordReviewDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.IntakeService.RFAPatMedicalRecordReviewDetail[] RFAPatMedicalRecordReviewDetails {
            get {
                return this.RFAPatMedicalRecordReviewDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAPatMedicalRecordReviewDetailsField, value) != true)) {
                    this.RFAPatMedicalRecordReviewDetailsField = value;
                    this.RaisePropertyChanged("RFAPatMedicalRecordReviewDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFAPatMedicalRecordReviewDetail", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFAPatMedicalRecordReviewDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PatMRDocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatMRDocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicianNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PatMRDocumentDate {
            get {
                return this.PatMRDocumentDateField;
            }
            set {
                if ((this.PatMRDocumentDateField.Equals(value) != true)) {
                    this.PatMRDocumentDateField = value;
                    this.RaisePropertyChanged("PatMRDocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatMRDocumentName {
            get {
                return this.PatMRDocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatMRDocumentNameField, value) != true)) {
                    this.PatMRDocumentNameField = value;
                    this.RaisePropertyChanged("PatMRDocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicianName {
            get {
                return this.PhysicianNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicianNameField, value) != true)) {
                    this.PhysicianNameField = value;
                    this.RaisePropertyChanged("PhysicianName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedPatientHistory", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedPatientHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.IntakeService.PatientHistory[] PatientHistoryDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.IntakeService.PatientHistory[] PatientHistoryDetails {
            get {
                return this.PatientHistoryDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientHistoryDetailsField, value) != true)) {
                    this.PatientHistoryDetailsField = value;
                    this.RaisePropertyChanged("PatientHistoryDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientHistory", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DecisionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PhysicianIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFARequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARequestedTreatmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DecisionDate {
            get {
                return this.DecisionDateField;
            }
            set {
                if ((this.DecisionDateField.Equals(value) != true)) {
                    this.DecisionDateField = value;
                    this.RaisePropertyChanged("DecisionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Physician {
            get {
                return this.PhysicianField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicianField, value) != true)) {
                    this.PhysicianField = value;
                    this.RaisePropertyChanged("Physician");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PhysicianId {
            get {
                return this.PhysicianIdField;
            }
            set {
                if ((this.PhysicianIdField.Equals(value) != true)) {
                    this.PhysicianIdField = value;
                    this.RaisePropertyChanged("PhysicianId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFARequestDate {
            get {
                return this.RFARequestDateField;
            }
            set {
                if ((this.RFARequestDateField.Equals(value) != true)) {
                    this.RFARequestDateField = value;
                    this.RaisePropertyChanged("RFARequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARequestedTreatment {
            get {
                return this.RFARequestedTreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARequestedTreatmentField, value) != true)) {
                    this.RFARequestedTreatmentField = value;
                    this.RaisePropertyChanged("RFARequestedTreatment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedRequestHistory", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedRequestHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.IntakeService.RequestHistory[] RequestHistoryDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.IntakeService.RequestHistory[] RequestHistoryDetails {
            get {
                return this.RequestHistoryDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestHistoryDetailsField, value) != true)) {
                    this.RequestHistoryDetailsField = value;
                    this.RaisePropertyChanged("RequestHistoryDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestHistory", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RequestHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string filenameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileTypeId {
            get {
                return this.FileTypeIdField;
            }
            set {
                if ((this.FileTypeIdField.Equals(value) != true)) {
                    this.FileTypeIdField = value;
                    this.RaisePropertyChanged("FileTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                if ((object.ReferenceEquals(this.filenameField, value) != true)) {
                    this.filenameField = value;
                    this.RaisePropertyChanged("filename");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFARequestModify", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFARequestModify : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFADurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFADurationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestModifyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARequestedTreatmentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFADuration {
            get {
                return this.RFADurationField;
            }
            set {
                if ((this.RFADurationField.Equals(value) != true)) {
                    this.RFADurationField = value;
                    this.RaisePropertyChanged("RFADuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFADurationTypeID {
            get {
                return this.RFADurationTypeIDField;
            }
            set {
                if ((this.RFADurationTypeIDField.Equals(value) != true)) {
                    this.RFADurationTypeIDField = value;
                    this.RaisePropertyChanged("RFADurationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAFrequency {
            get {
                return this.RFAFrequencyField;
            }
            set {
                if ((this.RFAFrequencyField.Equals(value) != true)) {
                    this.RFAFrequencyField = value;
                    this.RaisePropertyChanged("RFAFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestModifyID {
            get {
                return this.RFARequestModifyIDField;
            }
            set {
                if ((this.RFARequestModifyIDField.Equals(value) != true)) {
                    this.RFARequestModifyIDField = value;
                    this.RaisePropertyChanged("RFARequestModifyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARequestedTreatment {
            get {
                return this.RFARequestedTreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARequestedTreatmentField, value) != true)) {
                    this.RFARequestedTreatmentField = value;
                    this.RaisePropertyChanged("RFARequestedTreatment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedRequestByReferralID", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedRequestByReferralID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.IntakeService.RequestByReferralID[] RequestDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.IntakeService.RequestByReferralID[] RequestDetails {
            get {
                return this.RequestDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestDetailsField, value) != true)) {
                    this.RequestDetailsField = value;
                    this.RaisePropertyChanged("RequestDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestByReferralID", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RequestByReferralID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DecisionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DecisionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DecisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAClinicalReasonforDecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFADurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFADurationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAGuidelinesUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RFAHCRGDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFALatestDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFANotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARelevantPortionUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFARequestModifyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARequestedTreatmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Decision {
            get {
                return this.DecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.DecisionField, value) != true)) {
                    this.DecisionField = value;
                    this.RaisePropertyChanged("Decision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DecisionDate {
            get {
                return this.DecisionDateField;
            }
            set {
                if ((this.DecisionDateField.Equals(value) != true)) {
                    this.DecisionDateField = value;
                    this.RaisePropertyChanged("DecisionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DecisionDesc {
            get {
                return this.DecisionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DecisionDescField, value) != true)) {
                    this.DecisionDescField = value;
                    this.RaisePropertyChanged("DecisionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DecisionID {
            get {
                return this.DecisionIDField;
            }
            set {
                if ((this.DecisionIDField.Equals(value) != true)) {
                    this.DecisionIDField = value;
                    this.RaisePropertyChanged("DecisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAClinicalReasonforDecision {
            get {
                return this.RFAClinicalReasonforDecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAClinicalReasonforDecisionField, value) != true)) {
                    this.RFAClinicalReasonforDecisionField = value;
                    this.RaisePropertyChanged("RFAClinicalReasonforDecision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFADuration {
            get {
                return this.RFADurationField;
            }
            set {
                if ((this.RFADurationField.Equals(value) != true)) {
                    this.RFADurationField = value;
                    this.RaisePropertyChanged("RFADuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFADurationTypeID {
            get {
                return this.RFADurationTypeIDField;
            }
            set {
                if ((this.RFADurationTypeIDField.Equals(value) != true)) {
                    this.RFADurationTypeIDField = value;
                    this.RaisePropertyChanged("RFADurationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAFrequency {
            get {
                return this.RFAFrequencyField;
            }
            set {
                if ((this.RFAFrequencyField.Equals(value) != true)) {
                    this.RFAFrequencyField = value;
                    this.RaisePropertyChanged("RFAFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAGuidelinesUtilized {
            get {
                return this.RFAGuidelinesUtilizedField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAGuidelinesUtilizedField, value) != true)) {
                    this.RFAGuidelinesUtilizedField = value;
                    this.RaisePropertyChanged("RFAGuidelinesUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RFAHCRGDate {
            get {
                return this.RFAHCRGDateField;
            }
            set {
                if ((this.RFAHCRGDateField.Equals(value) != true)) {
                    this.RFAHCRGDateField = value;
                    this.RaisePropertyChanged("RFAHCRGDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFALatestDueDate {
            get {
                return this.RFALatestDueDateField;
            }
            set {
                if ((this.RFALatestDueDateField.Equals(value) != true)) {
                    this.RFALatestDueDateField = value;
                    this.RaisePropertyChanged("RFALatestDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFANotes {
            get {
                return this.RFANotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RFANotesField, value) != true)) {
                    this.RFANotesField = value;
                    this.RaisePropertyChanged("RFANotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARelevantPortionUtilized {
            get {
                return this.RFARelevantPortionUtilizedField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARelevantPortionUtilizedField, value) != true)) {
                    this.RFARelevantPortionUtilizedField = value;
                    this.RaisePropertyChanged("RFARelevantPortionUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFARequestModifyID {
            get {
                return this.RFARequestModifyIDField;
            }
            set {
                if ((this.RFARequestModifyIDField.Equals(value) != true)) {
                    this.RFARequestModifyIDField = value;
                    this.RaisePropertyChanged("RFARequestModifyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARequestedTreatment {
            get {
                return this.RFARequestedTreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARequestedTreatmentField, value) != true)) {
                    this.RFARequestedTreatmentField = value;
                    this.RaisePropertyChanged("RFARequestedTreatment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAStatus {
            get {
                return this.RFAStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAStatusField, value) != true)) {
                    this.RFAStatusField = value;
                    this.RaisePropertyChanged("RFAStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Note", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Note : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoteID {
            get {
                return this.NoteIDField;
            }
            set {
                if ((this.NoteIDField.Equals(value) != true)) {
                    this.NoteIDField = value;
                    this.RaisePropertyChanged("NoteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFARequestBilling", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFARequestBilling : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RFARequestBillingAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RFARequestBillingDeferralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestBillingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RFARequestBillingMDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RFARequestBillingRNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RFARequestBillingSpecialityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RFARequestBillingAdmin {
            get {
                return this.RFARequestBillingAdminField;
            }
            set {
                if ((this.RFARequestBillingAdminField.Equals(value) != true)) {
                    this.RFARequestBillingAdminField = value;
                    this.RaisePropertyChanged("RFARequestBillingAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RFARequestBillingDeferral {
            get {
                return this.RFARequestBillingDeferralField;
            }
            set {
                if ((this.RFARequestBillingDeferralField.Equals(value) != true)) {
                    this.RFARequestBillingDeferralField = value;
                    this.RaisePropertyChanged("RFARequestBillingDeferral");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestBillingID {
            get {
                return this.RFARequestBillingIDField;
            }
            set {
                if ((this.RFARequestBillingIDField.Equals(value) != true)) {
                    this.RFARequestBillingIDField = value;
                    this.RaisePropertyChanged("RFARequestBillingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RFARequestBillingMD {
            get {
                return this.RFARequestBillingMDField;
            }
            set {
                if ((this.RFARequestBillingMDField.Equals(value) != true)) {
                    this.RFARequestBillingMDField = value;
                    this.RaisePropertyChanged("RFARequestBillingMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RFARequestBillingRN {
            get {
                return this.RFARequestBillingRNField;
            }
            set {
                if ((this.RFARequestBillingRNField.Equals(value) != true)) {
                    this.RFARequestBillingRNField = value;
                    this.RaisePropertyChanged("RFARequestBillingRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RFARequestBillingSpeciality {
            get {
                return this.RFARequestBillingSpecialityField;
            }
            set {
                if ((this.RFARequestBillingSpecialityField.Equals(value) != true)) {
                    this.RFARequestBillingSpecialityField = value;
                    this.RaisePropertyChanged("RFARequestBillingSpeciality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFARequestTimeExtension", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFARequestTimeExtension : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalExaminationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARecSpltIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestTimeExtensionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFIRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyConsultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalExamination {
            get {
                return this.AdditionalExaminationField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalExaminationField, value) != true)) {
                    this.AdditionalExaminationField = value;
                    this.RaisePropertyChanged("AdditionalExamination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARecSpltID {
            get {
                return this.RFARecSpltIDField;
            }
            set {
                if ((this.RFARecSpltIDField.Equals(value) != true)) {
                    this.RFARecSpltIDField = value;
                    this.RaisePropertyChanged("RFARecSpltID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestTimeExtensionID {
            get {
                return this.RFARequestTimeExtensionIDField;
            }
            set {
                if ((this.RFARequestTimeExtensionIDField.Equals(value) != true)) {
                    this.RFARequestTimeExtensionIDField = value;
                    this.RaisePropertyChanged("RFARequestTimeExtensionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFIRecords {
            get {
                return this.RFIRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.RFIRecordsField, value) != true)) {
                    this.RFIRecordsField = value;
                    this.RaisePropertyChanged("RFIRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialtyConsult {
            get {
                return this.SpecialtyConsultField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyConsultField, value) != true)) {
                    this.SpecialtyConsultField = value;
                    this.RaisePropertyChanged("SpecialtyConsult");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFAReferralAdditionalLink", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFAReferralAdditionalLink : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClientStatementIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralAdditionalLinkIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAReferralInvoiceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClientStatementID {
            get {
                return this.ClientStatementIDField;
            }
            set {
                if ((this.ClientStatementIDField.Equals(value) != true)) {
                    this.ClientStatementIDField = value;
                    this.RaisePropertyChanged("ClientStatementID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralAdditionalLinkID {
            get {
                return this.RFAReferralAdditionalLinkIDField;
            }
            set {
                if ((this.RFAReferralAdditionalLinkIDField.Equals(value) != true)) {
                    this.RFAReferralAdditionalLinkIDField = value;
                    this.RaisePropertyChanged("RFAReferralAdditionalLinkID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAReferralInvoiceID {
            get {
                return this.RFAReferralInvoiceIDField;
            }
            set {
                if ((this.RFAReferralInvoiceIDField.Equals(value) != true)) {
                    this.RFAReferralInvoiceIDField = value;
                    this.RaisePropertyChanged("RFAReferralInvoiceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFARequestBodyPart", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFARequestBodyPart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyPartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaimBodyPartIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestBodyPartIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BodyPartType {
            get {
                return this.BodyPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyPartTypeField, value) != true)) {
                    this.BodyPartTypeField = value;
                    this.RaisePropertyChanged("BodyPartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimBodyPartID {
            get {
                return this.ClaimBodyPartIDField;
            }
            set {
                if ((this.ClaimBodyPartIDField.Equals(value) != true)) {
                    this.ClaimBodyPartIDField = value;
                    this.RaisePropertyChanged("ClaimBodyPartID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestBodyPartID {
            get {
                return this.RFARequestBodyPartIDField;
            }
            set {
                if ((this.RFARequestBodyPartIDField.Equals(value) != true)) {
                    this.RFARequestBodyPartIDField = value;
                    this.RaisePropertyChanged("RFARequestBodyPartID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MMCService.IntakeService.IIntakeService")]
    public interface IIntakeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFAReferral", ReplyAction="http://tempuri.org/IIntakeService/addRFAReferralResponse")]
        int addRFAReferral(MMC.MMCService.IntakeService.RFAReferral _rfaReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFAReferral", ReplyAction="http://tempuri.org/IIntakeService/addRFAReferralResponse")]
        System.Threading.Tasks.Task<int> addRFAReferralAsync(MMC.MMCService.IntakeService.RFAReferral _rfaReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateClaimInReferral", ReplyAction="http://tempuri.org/IIntakeService/updateClaimInReferralResponse")]
        int updateClaimInReferral(int _claimID, int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateClaimInReferral", ReplyAction="http://tempuri.org/IIntakeService/updateClaimInReferralResponse")]
        System.Threading.Tasks.Task<int> updateClaimInReferralAsync(int _claimID, int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFAInReferral", ReplyAction="http://tempuri.org/IIntakeService/updateRFAInReferralResponse")]
        int updateRFAInReferral(MMC.MMCService.IntakeService.RFAReferral _rfaReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFAInReferral", ReplyAction="http://tempuri.org/IIntakeService/updateRFAInReferralResponse")]
        System.Threading.Tasks.Task<int> updateRFAInReferralAsync(MMC.MMCService.IntakeService.RFAReferral _rfaReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updatePhysicianInReferral", ReplyAction="http://tempuri.org/IIntakeService/updatePhysicianInReferralResponse")]
        int updatePhysicianInReferral(int _physicianID, int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updatePhysicianInReferral", ReplyAction="http://tempuri.org/IIntakeService/updatePhysicianInReferralResponse")]
        System.Threading.Tasks.Task<int> updatePhysicianInReferralAsync(int _physicianID, int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralByID", ReplyAction="http://tempuri.org/IIntakeService/getReferralByIDResponse")]
        MMC.MMCService.IntakeService.RFAReferral getReferralByID(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralByID", ReplyAction="http://tempuri.org/IIntakeService/getReferralByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferral> getReferralByIDAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getAllIncompleteReferrals", ReplyAction="http://tempuri.org/IIntakeService/getAllIncompleteReferralsResponse")]
        MMC.MMCService.IntakeService.PagedIncompleteReferrals getAllIncompleteReferrals(int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getAllIncompleteReferrals", ReplyAction="http://tempuri.org/IIntakeService/getAllIncompleteReferralsResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedIncompleteReferrals> getAllIncompleteReferralsAsync(int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFASplittedReferralHistory", ReplyAction="http://tempuri.org/IIntakeService/addRFASplittedReferralHistoryResponse")]
        int addRFASplittedReferralHistory(MMC.MMCService.IntakeService.RFASplittedReferralHistory _rfaSplittedReferralHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFASplittedReferralHistory", ReplyAction="http://tempuri.org/IIntakeService/addRFASplittedReferralHistoryResponse")]
        System.Threading.Tasks.Task<int> addRFASplittedReferralHistoryAsync(MMC.MMCService.IntakeService.RFASplittedReferralHistory _rfaSplittedReferralHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFAMergedReferralHistory", ReplyAction="http://tempuri.org/IIntakeService/addRFAMergedReferralHistoryResponse")]
        int addRFAMergedReferralHistory(MMC.MMCService.IntakeService.RFAMergedReferralHistory _rfaMergedReferralHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFAMergedReferralHistory", ReplyAction="http://tempuri.org/IIntakeService/addRFAMergedReferralHistoryResponse")]
        System.Threading.Tasks.Task<int> addRFAMergedReferralHistoryAsync(MMC.MMCService.IntakeService.RFAMergedReferralHistory _rfaMergedReferralHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/UploadSignature", ReplyAction="http://tempuri.org/IIntakeService/UploadSignatureResponse")]
        int UploadSignature(MMC.MMCService.IntakeService.RFAReferral _rfaReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/UploadSignature", ReplyAction="http://tempuri.org/IIntakeService/UploadSignatureResponse")]
        System.Threading.Tasks.Task<int> UploadSignatureAsync(MMC.MMCService.IntakeService.RFAReferral _rfaReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/SaveSignatureDescription", ReplyAction="http://tempuri.org/IIntakeService/SaveSignatureDescriptionResponse")]
        int SaveSignatureDescription(MMC.MMCService.IntakeService.RFAReferral _rfaReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/SaveSignatureDescription", ReplyAction="http://tempuri.org/IIntakeService/SaveSignatureDescriptionResponse")]
        System.Threading.Tasks.Task<int> SaveSignatureDescriptionAsync(MMC.MMCService.IntakeService.RFAReferral _rfaReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addReferralFileIntake", ReplyAction="http://tempuri.org/IIntakeService/addReferralFileIntakeResponse")]
        MMC.MMCService.IntakeService.RFAReferralFile addReferralFileIntake(string filename, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addReferralFileIntake", ReplyAction="http://tempuri.org/IIntakeService/addReferralFileIntakeResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile> addReferralFileIntakeAsync(string filename, int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addReferralFile", ReplyAction="http://tempuri.org/IIntakeService/addReferralFileResponse")]
        int addReferralFile(MMC.MMCService.IntakeService.RFAReferralFile _rfaReferralFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addReferralFile", ReplyAction="http://tempuri.org/IIntakeService/addReferralFileResponse")]
        System.Threading.Tasks.Task<int> addReferralFileAsync(MMC.MMCService.IntakeService.RFAReferralFile _rfaReferralFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateReferralFile", ReplyAction="http://tempuri.org/IIntakeService/updateReferralFileResponse")]
        int updateReferralFile(MMC.MMCService.IntakeService.RFAReferralFile _rfaReferralFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateReferralFile", ReplyAction="http://tempuri.org/IIntakeService/updateReferralFileResponse")]
        System.Threading.Tasks.Task<int> updateReferralFileAsync(MMC.MMCService.IntakeService.RFAReferralFile _rfaReferralFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralFileByID", ReplyAction="http://tempuri.org/IIntakeService/getReferralFileByIDResponse")]
        MMC.MMCService.IntakeService.RFAReferralFile getReferralFileByID(int _rfaReferralFileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralFileByID", ReplyAction="http://tempuri.org/IIntakeService/getReferralFileByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile> getReferralFileByIDAsync(int _rfaReferralFileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralFileByIntake", ReplyAction="http://tempuri.org/IIntakeService/getReferralFileByIntakeResponse")]
        MMC.MMCService.IntakeService.RFAReferralFile getReferralFileByIntake(int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralFileByIntake", ReplyAction="http://tempuri.org/IIntakeService/getReferralFileByIntakeResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile> getReferralFileByIntakeAsync(int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralID", ReplyAction="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralIDResponse")]
        MMC.MMCService.IntakeService.RFAReferralFile[] getReferralFileByRFAReferralID(int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralID", ReplyAction="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile[]> getReferralFileByRFAReferralIDAsync(int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralIDandFileType", ReplyAction="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralIDandFileTypeRespon" +
            "se")]
        MMC.MMCService.IntakeService.RFAReferralFile[] getReferralFileByRFAReferralIDandFileType(int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralIDandFileType", ReplyAction="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralIDandFileTypeRespon" +
            "se")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile[]> getReferralFileByRFAReferralIDandFileTypeAsync(int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralIDAndFileTypeID", ReplyAction="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralIDAndFileTypeIDResp" +
            "onse")]
        MMC.MMCService.IntakeService.RFAReferralFile[] getReferralFileByRFAReferralIDAndFileTypeID(int _rfaReferralID, int _fileTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralIDAndFileTypeID", ReplyAction="http://tempuri.org/IIntakeService/getReferralFileByRFAReferralIDAndFileTypeIDResp" +
            "onse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile[]> getReferralFileByRFAReferralIDAndFileTypeIDAsync(int _rfaReferralID, int _fileTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/GetSignaturePathAndDescriptionByReferralID", ReplyAction="http://tempuri.org/IIntakeService/GetSignaturePathAndDescriptionByReferralIDRespo" +
            "nse")]
        string GetSignaturePathAndDescriptionByReferralID(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/GetSignaturePathAndDescriptionByReferralID", ReplyAction="http://tempuri.org/IIntakeService/GetSignaturePathAndDescriptionByReferralIDRespo" +
            "nse")]
        System.Threading.Tasks.Task<string> GetSignaturePathAndDescriptionByReferralIDAsync(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/AddRFIReportAdditionalRecordByRFAReferralFileID" +
            "", ReplyAction="http://tempuri.org/IIntakeService/AddRFIReportAdditionalRecordByRFAReferralFileID" +
            "Response")]
        void AddRFIReportAdditionalRecordByRFAReferralFileID(int _rFAReferralFileID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/AddRFIReportAdditionalRecordByRFAReferralFileID" +
            "", ReplyAction="http://tempuri.org/IIntakeService/AddRFIReportAdditionalRecordByRFAReferralFileID" +
            "Response")]
        System.Threading.Tasks.Task AddRFIReportAdditionalRecordByRFAReferralFileIDAsync(int _rFAReferralFileID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/AddRFIReportAdditionalRecordByRFARequestID", ReplyAction="http://tempuri.org/IIntakeService/AddRFIReportAdditionalRecordByRFARequestIDRespo" +
            "nse")]
        void AddRFIReportAdditionalRecordByRFARequestID(int _rFAReferralFileID, int _rFARequestID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/AddRFIReportAdditionalRecordByRFARequestID", ReplyAction="http://tempuri.org/IIntakeService/AddRFIReportAdditionalRecordByRFARequestIDRespo" +
            "nse")]
        System.Threading.Tasks.Task AddRFIReportAdditionalRecordByRFARequestIDAsync(int _rFAReferralFileID, int _rFARequestID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getPreviousReferralIDFromCurrentReferralInDupli" +
            "cate", ReplyAction="http://tempuri.org/IIntakeService/getPreviousReferralIDFromCurrentReferralInDupli" +
            "cateResponse")]
        MMC.MMCService.IntakeService.PreviousReferralFromCurrentReferral[] getPreviousReferralIDFromCurrentReferralInDuplicate(int referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getPreviousReferralIDFromCurrentReferralInDupli" +
            "cate", ReplyAction="http://tempuri.org/IIntakeService/getPreviousReferralIDFromCurrentReferralInDupli" +
            "cateResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PreviousReferralFromCurrentReferral[]> getPreviousReferralIDFromCurrentReferralInDuplicateAsync(int referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFAReferralFilesAccToReferralIDInPreparation" +
            "Case", ReplyAction="http://tempuri.org/IIntakeService/getRFAReferralFilesAccToReferralIDInPreparation" +
            "CaseResponse")]
        MMC.MMCService.IntakeService.RFAReferralFile[] getRFAReferralFilesAccToReferralIDInPreparationCase(int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFAReferralFilesAccToReferralIDInPreparation" +
            "Case", ReplyAction="http://tempuri.org/IIntakeService/getRFAReferralFilesAccToReferralIDInPreparation" +
            "CaseResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile[]> getRFAReferralFilesAccToReferralIDInPreparationCaseAsync(int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARequest", ReplyAction="http://tempuri.org/IIntakeService/addRFARequestResponse")]
        int addRFARequest(MMC.MMCService.IntakeService.RFARequest _rfaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARequest", ReplyAction="http://tempuri.org/IIntakeService/addRFARequestResponse")]
        System.Threading.Tasks.Task<int> addRFARequestAsync(MMC.MMCService.IntakeService.RFARequest _rfaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/AssignNewReferralToRequest", ReplyAction="http://tempuri.org/IIntakeService/AssignNewReferralToRequestResponse")]
        int AssignNewReferralToRequest(MMC.MMCService.IntakeService.RFARequest _rfaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/AssignNewReferralToRequest", ReplyAction="http://tempuri.org/IIntakeService/AssignNewReferralToRequestResponse")]
        System.Threading.Tasks.Task<int> AssignNewReferralToRequestAsync(MMC.MMCService.IntakeService.RFARequest _rfaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFARequestAndDecision", ReplyAction="http://tempuri.org/IIntakeService/updateRFARequestAndDecisionResponse")]
        int updateRFARequestAndDecision(MMC.MMCService.IntakeService.RFARequest _rfaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFARequestAndDecision", ReplyAction="http://tempuri.org/IIntakeService/updateRFARequestAndDecisionResponse")]
        System.Threading.Tasks.Task<int> updateRFARequestAndDecisionAsync(MMC.MMCService.IntakeService.RFARequest _rfaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFARequest", ReplyAction="http://tempuri.org/IIntakeService/updateRFARequestResponse")]
        int updateRFARequest(MMC.MMCService.IntakeService.RFARequest _rfaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFARequest", ReplyAction="http://tempuri.org/IIntakeService/updateRFARequestResponse")]
        System.Threading.Tasks.Task<int> updateRFARequestAsync(MMC.MMCService.IntakeService.RFARequest _rfaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/deleteRFARequest", ReplyAction="http://tempuri.org/IIntakeService/deleteRFARequestResponse")]
        void deleteRFARequest(int _rfaRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/deleteRFARequest", ReplyAction="http://tempuri.org/IIntakeService/deleteRFARequestResponse")]
        System.Threading.Tasks.Task deleteRFARequestAsync(int _rfaRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/deleteRFADelatedRequest", ReplyAction="http://tempuri.org/IIntakeService/deleteRFADelatedRequestResponse")]
        void deleteRFADelatedRequest(int _rfaRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/deleteRFADelatedRequest", ReplyAction="http://tempuri.org/IIntakeService/deleteRFADelatedRequestResponse")]
        System.Threading.Tasks.Task deleteRFADelatedRequestAsync(int _rfaRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARequestByID", ReplyAction="http://tempuri.org/IIntakeService/getRFARequestByIDResponse")]
        MMC.MMCService.IntakeService.RFARequest getRFARequestByID(int _rfaRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARequestByID", ReplyAction="http://tempuri.org/IIntakeService/getRFARequestByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequest> getRFARequestByIDAsync(int _rfaRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARequestByReferralID", ReplyAction="http://tempuri.org/IIntakeService/getRFARequestByReferralIDResponse")]
        MMC.MMCService.IntakeService.RFARequest[] getRFARequestByReferralID(int _rfaReferralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARequestByReferralID", ReplyAction="http://tempuri.org/IIntakeService/getRFARequestByReferralIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequest[]> getRFARequestByReferralIDAsync(int _rfaReferralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARequestAdditionalInfo", ReplyAction="http://tempuri.org/IIntakeService/addRFARequestAdditionalInfoResponse")]
        int addRFARequestAdditionalInfo(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARequestAdditionalInfo", ReplyAction="http://tempuri.org/IIntakeService/addRFARequestAdditionalInfoResponse")]
        System.Threading.Tasks.Task<int> addRFARequestAdditionalInfoAsync(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFARequestAdditionalInfo", ReplyAction="http://tempuri.org/IIntakeService/updateRFARequestAdditionalInfoResponse")]
        int updateRFARequestAdditionalInfo(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFARequestAdditionalInfo", ReplyAction="http://tempuri.org/IIntakeService/updateRFARequestAdditionalInfoResponse")]
        System.Threading.Tasks.Task<int> updateRFARequestAdditionalInfoAsync(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFAReferralAdditionalInfo", ReplyAction="http://tempuri.org/IIntakeService/addRFAReferralAdditionalInfoResponse")]
        void addRFAReferralAdditionalInfo(MMC.MMCService.IntakeService.RFAReferralAdditionalInfo _rfaReferralAdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFAReferralAdditionalInfo", ReplyAction="http://tempuri.org/IIntakeService/addRFAReferralAdditionalInfoResponse")]
        System.Threading.Tasks.Task addRFAReferralAdditionalInfoAsync(MMC.MMCService.IntakeService.RFAReferralAdditionalInfo _rfaReferralAdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/GetRFARequestAdditionalInfo", ReplyAction="http://tempuri.org/IIntakeService/GetRFARequestAdditionalInfoResponse")]
        MMC.MMCService.IntakeService.RFARequestAdditionalInfoDetail GetRFARequestAdditionalInfo(int _rfaRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/GetRFARequestAdditionalInfo", ReplyAction="http://tempuri.org/IIntakeService/GetRFARequestAdditionalInfoResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequestAdditionalInfoDetail> GetRFARequestAdditionalInfoAsync(int _rfaRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/SaveRFARequestAdditionalInfo", ReplyAction="http://tempuri.org/IIntakeService/SaveRFARequestAdditionalInfoResponse")]
        int SaveRFARequestAdditionalInfo(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/SaveRFARequestAdditionalInfo", ReplyAction="http://tempuri.org/IIntakeService/SaveRFARequestAdditionalInfoResponse")]
        System.Threading.Tasks.Task<int> SaveRFARequestAdditionalInfoAsync(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/UpdateRFAReqCertificationNumberByID", ReplyAction="http://tempuri.org/IIntakeService/UpdateRFAReqCertificationNumberByIDResponse")]
        void UpdateRFAReqCertificationNumberByID(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/UpdateRFAReqCertificationNumberByID", ReplyAction="http://tempuri.org/IIntakeService/UpdateRFAReqCertificationNumberByIDResponse")]
        System.Threading.Tasks.Task UpdateRFAReqCertificationNumberByIDAsync(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/UpdateRFAReferralRequestDecisionByID", ReplyAction="http://tempuri.org/IIntakeService/UpdateRFAReferralRequestDecisionByIDResponse")]
        void UpdateRFAReferralRequestDecisionByID(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/UpdateRFAReferralRequestDecisionByID", ReplyAction="http://tempuri.org/IIntakeService/UpdateRFAReferralRequestDecisionByIDResponse")]
        System.Threading.Tasks.Task UpdateRFAReferralRequestDecisionByIDAsync(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/UpdateRFARequestDecisionAndRFAStatusByReferralI" +
            "D", ReplyAction="http://tempuri.org/IIntakeService/UpdateRFARequestDecisionAndRFAStatusByReferralI" +
            "DResponse")]
        void UpdateRFARequestDecisionAndRFAStatusByReferralID(int RFAReferralID, string DecisionID, string RFAStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/UpdateRFARequestDecisionAndRFAStatusByReferralI" +
            "D", ReplyAction="http://tempuri.org/IIntakeService/UpdateRFARequestDecisionAndRFAStatusByReferralI" +
            "DResponse")]
        System.Threading.Tasks.Task UpdateRFARequestDecisionAndRFAStatusByReferralIDAsync(int RFAReferralID, string DecisionID, string RFAStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/UpdateRFARequestLatestDueDateByRefferalID", ReplyAction="http://tempuri.org/IIntakeService/UpdateRFARequestLatestDueDateByRefferalIDRespon" +
            "se")]
        System.DateTime UpdateRFARequestLatestDueDateByRefferalID(int _RFAReferralID, int _AddDays, int _UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/UpdateRFARequestLatestDueDateByRefferalID", ReplyAction="http://tempuri.org/IIntakeService/UpdateRFARequestLatestDueDateByRefferalIDRespon" +
            "se")]
        System.Threading.Tasks.Task<System.DateTime> UpdateRFARequestLatestDueDateByRefferalIDAsync(int _RFAReferralID, int _AddDays, int _UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFAReferralCPTCodes", ReplyAction="http://tempuri.org/IIntakeService/addRFAReferralCPTCodesResponse")]
        int addRFAReferralCPTCodes(MMC.MMCService.IntakeService.RFARequestCPTCode _rfaReferralCPTCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFAReferralCPTCodes", ReplyAction="http://tempuri.org/IIntakeService/addRFAReferralCPTCodesResponse")]
        System.Threading.Tasks.Task<int> addRFAReferralCPTCodesAsync(MMC.MMCService.IntakeService.RFARequestCPTCode _rfaReferralCPTCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFAReferralCPTCodes", ReplyAction="http://tempuri.org/IIntakeService/updateRFAReferralCPTCodesResponse")]
        int updateRFAReferralCPTCodes(MMC.MMCService.IntakeService.RFARequestCPTCode _rfaReferralCPTCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFAReferralCPTCodes", ReplyAction="http://tempuri.org/IIntakeService/updateRFAReferralCPTCodesResponse")]
        System.Threading.Tasks.Task<int> updateRFAReferralCPTCodesAsync(MMC.MMCService.IntakeService.RFARequestCPTCode _rfaReferralCPTCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/deleteRFAReferralCPTCodes", ReplyAction="http://tempuri.org/IIntakeService/deleteRFAReferralCPTCodesResponse")]
        void deleteRFAReferralCPTCodes(int _rfaCPTCodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/deleteRFAReferralCPTCodes", ReplyAction="http://tempuri.org/IIntakeService/deleteRFAReferralCPTCodesResponse")]
        System.Threading.Tasks.Task deleteRFAReferralCPTCodesAsync(int _rfaCPTCodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFAReferralCPTCodesByID", ReplyAction="http://tempuri.org/IIntakeService/getRFAReferralCPTCodesByIDResponse")]
        MMC.MMCService.IntakeService.RFARequestCPTCode getRFAReferralCPTCodesByID(int _rfaCPTCodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFAReferralCPTCodesByID", ReplyAction="http://tempuri.org/IIntakeService/getRFAReferralCPTCodesByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequestCPTCode> getRFAReferralCPTCodesByIDAsync(int _rfaCPTCodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARecordSplitting", ReplyAction="http://tempuri.org/IIntakeService/addRFARecordSplittingResponse")]
        int addRFARecordSplitting(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARecordSplitting", ReplyAction="http://tempuri.org/IIntakeService/addRFARecordSplittingResponse")]
        System.Threading.Tasks.Task<int> addRFARecordSplittingAsync(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/udateRFARecordSplitting", ReplyAction="http://tempuri.org/IIntakeService/udateRFARecordSplittingResponse")]
        int udateRFARecordSplitting(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/udateRFARecordSplitting", ReplyAction="http://tempuri.org/IIntakeService/udateRFARecordSplittingResponse")]
        System.Threading.Tasks.Task<int> udateRFARecordSplittingAsync(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/udateRFARecordSplittingClaimIDByReferralID", ReplyAction="http://tempuri.org/IIntakeService/udateRFARecordSplittingClaimIDByReferralIDRespo" +
            "nse")]
        int udateRFARecordSplittingClaimIDByReferralID(int rfaReferralID, int claimID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/udateRFARecordSplittingClaimIDByReferralID", ReplyAction="http://tempuri.org/IIntakeService/udateRFARecordSplittingClaimIDByReferralIDRespo" +
            "nse")]
        System.Threading.Tasks.Task<int> udateRFARecordSplittingClaimIDByReferralIDAsync(int rfaReferralID, int claimID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/udateRFARecordSplittingRecordForMedicalRec", ReplyAction="http://tempuri.org/IIntakeService/udateRFARecordSplittingRecordForMedicalRecRespo" +
            "nse")]
        int udateRFARecordSplittingRecordForMedicalRec(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/udateRFARecordSplittingRecordForMedicalRec", ReplyAction="http://tempuri.org/IIntakeService/udateRFARecordSplittingRecordForMedicalRecRespo" +
            "nse")]
        System.Threading.Tasks.Task<int> udateRFARecordSplittingRecordForMedicalRecAsync(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/deleteRFARecordSplitting", ReplyAction="http://tempuri.org/IIntakeService/deleteRFARecordSplittingResponse")]
        void deleteRFARecordSplitting(int rfaRecSpltID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/deleteRFARecordSplitting", ReplyAction="http://tempuri.org/IIntakeService/deleteRFARecordSplittingResponse")]
        System.Threading.Tasks.Task deleteRFARecordSplittingAsync(int rfaRecSpltID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARecordSplittingByID", ReplyAction="http://tempuri.org/IIntakeService/getRFARecordSplittingByIDResponse")]
        MMC.MMCService.IntakeService.RFARecordSplitting getRFARecordSplittingByID(int rfaRecSpltID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARecordSplittingByID", ReplyAction="http://tempuri.org/IIntakeService/getRFARecordSplittingByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARecordSplitting> getRFARecordSplittingByIDAsync(int rfaRecSpltID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARecordSplittingByReferralID", ReplyAction="http://tempuri.org/IIntakeService/getRFARecordSplittingByReferralIDResponse")]
        MMC.MMCService.IntakeService.RFARecordSplitting[] getRFARecordSplittingByReferralID(int _rfaReferralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARecordSplittingByReferralID", ReplyAction="http://tempuri.org/IIntakeService/getRFARecordSplittingByReferralIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARecordSplitting[]> getRFARecordSplittingByReferralIDAsync(int _rfaReferralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/udateReferralIntakePatientClaimByID", ReplyAction="http://tempuri.org/IIntakeService/udateReferralIntakePatientClaimByIDResponse")]
        int udateReferralIntakePatientClaimByID(int _patientClaimID, int _rfaReferralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/udateReferralIntakePatientClaimByID", ReplyAction="http://tempuri.org/IIntakeService/udateReferralIntakePatientClaimByIDResponse")]
        System.Threading.Tasks.Task<int> udateReferralIntakePatientClaimByIDAsync(int _patientClaimID, int _rfaReferralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getPatientDetailsByReferralID", ReplyAction="http://tempuri.org/IIntakeService/getPatientDetailsByReferralIDResponse")]
        MMC.MMCService.IntakeService.PatientDetailsByReferralID getPatientDetailsByReferralID(int _rfaReferralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getPatientDetailsByReferralID", ReplyAction="http://tempuri.org/IIntakeService/getPatientDetailsByReferralIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PatientDetailsByReferralID> getPatientDetailsByReferralIDAsync(int _rfaReferralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFADiagnosisByReferralID", ReplyAction="http://tempuri.org/IIntakeService/getRFADiagnosisByReferralIDResponse")]
        MMC.MMCService.IntakeService.PagedRFADiagnosis getRFADiagnosisByReferralID(int _rfaReferralId, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFADiagnosisByReferralID", ReplyAction="http://tempuri.org/IIntakeService/getRFADiagnosisByReferralIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedRFADiagnosis> getRFADiagnosisByReferralIDAsync(int _rfaReferralId, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFAPatMedicalRecordReview", ReplyAction="http://tempuri.org/IIntakeService/addRFAPatMedicalRecordReviewResponse")]
        int addRFAPatMedicalRecordReview(MMC.MMCService.IntakeService.RFAPatMedicalRecordReview _rfaPatMedicalRecordReview);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFAPatMedicalRecordReview", ReplyAction="http://tempuri.org/IIntakeService/addRFAPatMedicalRecordReviewResponse")]
        System.Threading.Tasks.Task<int> addRFAPatMedicalRecordReviewAsync(MMC.MMCService.IntakeService.RFAPatMedicalRecordReview _rfaPatMedicalRecordReview);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFAPatMedicalRecordReviewByPatientID", ReplyAction="http://tempuri.org/IIntakeService/getRFAPatMedicalRecordReviewByPatientIDResponse" +
            "")]
        MMC.MMCService.IntakeService.PagedRFAPatMedicalRecordReview getRFAPatMedicalRecordReviewByPatientID(int _PatientID, int _ReferralId, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFAPatMedicalRecordReviewByPatientID", ReplyAction="http://tempuri.org/IIntakeService/getRFAPatMedicalRecordReviewByPatientIDResponse" +
            "")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedRFAPatMedicalRecordReview> getRFAPatMedicalRecordReviewByPatientIDAsync(int _PatientID, int _ReferralId, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getPatientHistoryByPatientID", ReplyAction="http://tempuri.org/IIntakeService/getPatientHistoryByPatientIDResponse")]
        MMC.MMCService.IntakeService.PagedPatientHistory getPatientHistoryByPatientID(int _patientID, int _skip, int _take, string sortBy, string order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getPatientHistoryByPatientID", ReplyAction="http://tempuri.org/IIntakeService/getPatientHistoryByPatientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedPatientHistory> getPatientHistoryByPatientIDAsync(int _patientID, int _skip, int _take, string sortBy, string order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRequestHistoryByRFARequestID", ReplyAction="http://tempuri.org/IIntakeService/getRequestHistoryByRFARequestIDResponse")]
        MMC.MMCService.IntakeService.PagedRequestHistory getRequestHistoryByRFARequestID(int _requestID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRequestHistoryByRFARequestID", ReplyAction="http://tempuri.org/IIntakeService/getRequestHistoryByRFARequestIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedRequestHistory> getRequestHistoryByRFARequestIDAsync(int _requestID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/saveRFARequestModify", ReplyAction="http://tempuri.org/IIntakeService/saveRFARequestModifyResponse")]
        int saveRFARequestModify(MMC.MMCService.IntakeService.RFARequestModify _rfaRequestModify);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/saveRFARequestModify", ReplyAction="http://tempuri.org/IIntakeService/saveRFARequestModifyResponse")]
        System.Threading.Tasks.Task<int> saveRFARequestModifyAsync(MMC.MMCService.IntakeService.RFARequestModify _rfaRequestModify);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARequestModify", ReplyAction="http://tempuri.org/IIntakeService/getRFARequestModifyResponse")]
        MMC.MMCService.IntakeService.RFARequestModify getRFARequestModify(int _rfaRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARequestModify", ReplyAction="http://tempuri.org/IIntakeService/getRFARequestModifyResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequestModify> getRFARequestModifyAsync(int _rfaRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/GetRequestForDuplicateDecision", ReplyAction="http://tempuri.org/IIntakeService/GetRequestForDuplicateDecisionResponse")]
        MMC.MMCService.IntakeService.PagedRequestByReferralID GetRequestForDuplicateDecision(int _PatientClaimID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/GetRequestForDuplicateDecision", ReplyAction="http://tempuri.org/IIntakeService/GetRequestForDuplicateDecisionResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedRequestByReferralID> GetRequestForDuplicateDecisionAsync(int _PatientClaimID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addNotes", ReplyAction="http://tempuri.org/IIntakeService/addNotesResponse")]
        int addNotes(MMC.MMCService.IntakeService.Note _note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addNotes", ReplyAction="http://tempuri.org/IIntakeService/addNotesResponse")]
        System.Threading.Tasks.Task<int> addNotesAsync(MMC.MMCService.IntakeService.Note _note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateNotes", ReplyAction="http://tempuri.org/IIntakeService/updateNotesResponse")]
        int updateNotes(MMC.MMCService.IntakeService.Note _note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateNotes", ReplyAction="http://tempuri.org/IIntakeService/updateNotesResponse")]
        System.Threading.Tasks.Task<int> updateNotesAsync(MMC.MMCService.IntakeService.Note _note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARequestBilling", ReplyAction="http://tempuri.org/IIntakeService/addRFARequestBillingResponse")]
        int addRFARequestBilling(MMC.MMCService.IntakeService.RFARequestBilling[] _rfaRequestBilling);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARequestBilling", ReplyAction="http://tempuri.org/IIntakeService/addRFARequestBillingResponse")]
        System.Threading.Tasks.Task<int> addRFARequestBillingAsync(MMC.MMCService.IntakeService.RFARequestBilling[] _rfaRequestBilling);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getDeterminationLetterDecisionDesc", ReplyAction="http://tempuri.org/IIntakeService/getDeterminationLetterDecisionDescResponse")]
        string getDeterminationLetterDecisionDesc(int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getDeterminationLetterDecisionDesc", ReplyAction="http://tempuri.org/IIntakeService/getDeterminationLetterDecisionDescResponse")]
        System.Threading.Tasks.Task<string> getDeterminationLetterDecisionDescAsync(int _rfaReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARequestTimeExtensionInfo", ReplyAction="http://tempuri.org/IIntakeService/addRFARequestTimeExtensionInfoResponse")]
        int addRFARequestTimeExtensionInfo(MMC.MMCService.IntakeService.RFARequestTimeExtension _RFARequestTimeExtension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARequestTimeExtensionInfo", ReplyAction="http://tempuri.org/IIntakeService/addRFARequestTimeExtensionInfoResponse")]
        System.Threading.Tasks.Task<int> addRFARequestTimeExtensionInfoAsync(MMC.MMCService.IntakeService.RFARequestTimeExtension _RFARequestTimeExtension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/DeleteRFARequestTimeExtensionInfo", ReplyAction="http://tempuri.org/IIntakeService/DeleteRFARequestTimeExtensionInfoResponse")]
        void DeleteRFARequestTimeExtensionInfo(int _rfarefferalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/DeleteRFARequestTimeExtensionInfo", ReplyAction="http://tempuri.org/IIntakeService/DeleteRFARequestTimeExtensionInfoResponse")]
        System.Threading.Tasks.Task DeleteRFARequestTimeExtensionInfoAsync(int _rfarefferalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/AddUpdateRFAReferralAdditionalLinkStatementIDby" +
            "RefID", ReplyAction="http://tempuri.org/IIntakeService/AddUpdateRFAReferralAdditionalLinkStatementIDby" +
            "RefIDResponse")]
        void AddUpdateRFAReferralAdditionalLinkStatementIDbyRefID(MMC.MMCService.IntakeService.RFAReferralAdditionalLink _rfaReferralAdditionalLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/AddUpdateRFAReferralAdditionalLinkStatementIDby" +
            "RefID", ReplyAction="http://tempuri.org/IIntakeService/AddUpdateRFAReferralAdditionalLinkStatementIDby" +
            "RefIDResponse")]
        System.Threading.Tasks.Task AddUpdateRFAReferralAdditionalLinkStatementIDbyRefIDAsync(MMC.MMCService.IntakeService.RFAReferralAdditionalLink _rfaReferralAdditionalLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/AddUpdateRFAReferralAdditionalLinkInvoiceIDbyRe" +
            "fID", ReplyAction="http://tempuri.org/IIntakeService/AddUpdateRFAReferralAdditionalLinkInvoiceIDbyRe" +
            "fIDResponse")]
        void AddUpdateRFAReferralAdditionalLinkInvoiceIDbyRefID(MMC.MMCService.IntakeService.RFAReferralAdditionalLink _rfaReferralAdditionalLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/AddUpdateRFAReferralAdditionalLinkInvoiceIDbyRe" +
            "fID", ReplyAction="http://tempuri.org/IIntakeService/AddUpdateRFAReferralAdditionalLinkInvoiceIDbyRe" +
            "fIDResponse")]
        System.Threading.Tasks.Task AddUpdateRFAReferralAdditionalLinkInvoiceIDbyRefIDAsync(MMC.MMCService.IntakeService.RFAReferralAdditionalLink _rfaReferralAdditionalLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARequestBodyPart", ReplyAction="http://tempuri.org/IIntakeService/addRFARequestBodyPartResponse")]
        int addRFARequestBodyPart(MMC.MMCService.IntakeService.RFARequestBodyPart _rFARequestBodyPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/addRFARequestBodyPart", ReplyAction="http://tempuri.org/IIntakeService/addRFARequestBodyPartResponse")]
        System.Threading.Tasks.Task<int> addRFARequestBodyPartAsync(MMC.MMCService.IntakeService.RFARequestBodyPart _rFARequestBodyPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFARequestBodyPart", ReplyAction="http://tempuri.org/IIntakeService/updateRFARequestBodyPartResponse")]
        int updateRFARequestBodyPart(MMC.MMCService.IntakeService.RFARequestBodyPart _rFARequestBodyPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/updateRFARequestBodyPart", ReplyAction="http://tempuri.org/IIntakeService/updateRFARequestBodyPartResponse")]
        System.Threading.Tasks.Task<int> updateRFARequestBodyPartAsync(MMC.MMCService.IntakeService.RFARequestBodyPart _rFARequestBodyPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARequestBodyPartByRequestID", ReplyAction="http://tempuri.org/IIntakeService/getRFARequestBodyPartByRequestIDResponse")]
        MMC.MMCService.IntakeService.RFARequestBodyPart[] getRFARequestBodyPartByRequestID(int _requestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/getRFARequestBodyPartByRequestID", ReplyAction="http://tempuri.org/IIntakeService/getRFARequestBodyPartByRequestIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequestBodyPart[]> getRFARequestBodyPartByRequestIDAsync(int _requestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/deleteRFARequestBodyPartByReqID", ReplyAction="http://tempuri.org/IIntakeService/deleteRFARequestBodyPartByReqIDResponse")]
        void deleteRFARequestBodyPartByReqID(int _rfaRequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIntakeService/deleteRFARequestBodyPartByReqID", ReplyAction="http://tempuri.org/IIntakeService/deleteRFARequestBodyPartByReqIDResponse")]
        System.Threading.Tasks.Task deleteRFARequestBodyPartByReqIDAsync(int _rfaRequestID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIntakeServiceChannel : MMC.MMCService.IntakeService.IIntakeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IntakeServiceClient : System.ServiceModel.ClientBase<MMC.MMCService.IntakeService.IIntakeService>, MMC.MMCService.IntakeService.IIntakeService {
        
        public IntakeServiceClient() {
        }
        
        public IntakeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IntakeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IntakeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IntakeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int addRFAReferral(MMC.MMCService.IntakeService.RFAReferral _rfaReferral) {
            return base.Channel.addRFAReferral(_rfaReferral);
        }
        
        public System.Threading.Tasks.Task<int> addRFAReferralAsync(MMC.MMCService.IntakeService.RFAReferral _rfaReferral) {
            return base.Channel.addRFAReferralAsync(_rfaReferral);
        }
        
        public int updateClaimInReferral(int _claimID, int _rfaReferralID) {
            return base.Channel.updateClaimInReferral(_claimID, _rfaReferralID);
        }
        
        public System.Threading.Tasks.Task<int> updateClaimInReferralAsync(int _claimID, int _rfaReferralID) {
            return base.Channel.updateClaimInReferralAsync(_claimID, _rfaReferralID);
        }
        
        public int updateRFAInReferral(MMC.MMCService.IntakeService.RFAReferral _rfaReferral) {
            return base.Channel.updateRFAInReferral(_rfaReferral);
        }
        
        public System.Threading.Tasks.Task<int> updateRFAInReferralAsync(MMC.MMCService.IntakeService.RFAReferral _rfaReferral) {
            return base.Channel.updateRFAInReferralAsync(_rfaReferral);
        }
        
        public int updatePhysicianInReferral(int _physicianID, int _rfaReferralID) {
            return base.Channel.updatePhysicianInReferral(_physicianID, _rfaReferralID);
        }
        
        public System.Threading.Tasks.Task<int> updatePhysicianInReferralAsync(int _physicianID, int _rfaReferralID) {
            return base.Channel.updatePhysicianInReferralAsync(_physicianID, _rfaReferralID);
        }
        
        public MMC.MMCService.IntakeService.RFAReferral getReferralByID(int Id) {
            return base.Channel.getReferralByID(Id);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferral> getReferralByIDAsync(int Id) {
            return base.Channel.getReferralByIDAsync(Id);
        }
        
        public MMC.MMCService.IntakeService.PagedIncompleteReferrals getAllIncompleteReferrals(int _skip, int _take) {
            return base.Channel.getAllIncompleteReferrals(_skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedIncompleteReferrals> getAllIncompleteReferralsAsync(int _skip, int _take) {
            return base.Channel.getAllIncompleteReferralsAsync(_skip, _take);
        }
        
        public int addRFASplittedReferralHistory(MMC.MMCService.IntakeService.RFASplittedReferralHistory _rfaSplittedReferralHistory) {
            return base.Channel.addRFASplittedReferralHistory(_rfaSplittedReferralHistory);
        }
        
        public System.Threading.Tasks.Task<int> addRFASplittedReferralHistoryAsync(MMC.MMCService.IntakeService.RFASplittedReferralHistory _rfaSplittedReferralHistory) {
            return base.Channel.addRFASplittedReferralHistoryAsync(_rfaSplittedReferralHistory);
        }
        
        public int addRFAMergedReferralHistory(MMC.MMCService.IntakeService.RFAMergedReferralHistory _rfaMergedReferralHistory) {
            return base.Channel.addRFAMergedReferralHistory(_rfaMergedReferralHistory);
        }
        
        public System.Threading.Tasks.Task<int> addRFAMergedReferralHistoryAsync(MMC.MMCService.IntakeService.RFAMergedReferralHistory _rfaMergedReferralHistory) {
            return base.Channel.addRFAMergedReferralHistoryAsync(_rfaMergedReferralHistory);
        }
        
        public int UploadSignature(MMC.MMCService.IntakeService.RFAReferral _rfaReferral) {
            return base.Channel.UploadSignature(_rfaReferral);
        }
        
        public System.Threading.Tasks.Task<int> UploadSignatureAsync(MMC.MMCService.IntakeService.RFAReferral _rfaReferral) {
            return base.Channel.UploadSignatureAsync(_rfaReferral);
        }
        
        public int SaveSignatureDescription(MMC.MMCService.IntakeService.RFAReferral _rfaReferral) {
            return base.Channel.SaveSignatureDescription(_rfaReferral);
        }
        
        public System.Threading.Tasks.Task<int> SaveSignatureDescriptionAsync(MMC.MMCService.IntakeService.RFAReferral _rfaReferral) {
            return base.Channel.SaveSignatureDescriptionAsync(_rfaReferral);
        }
        
        public MMC.MMCService.IntakeService.RFAReferralFile addReferralFileIntake(string filename, int userid) {
            return base.Channel.addReferralFileIntake(filename, userid);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile> addReferralFileIntakeAsync(string filename, int userid) {
            return base.Channel.addReferralFileIntakeAsync(filename, userid);
        }
        
        public int addReferralFile(MMC.MMCService.IntakeService.RFAReferralFile _rfaReferralFile) {
            return base.Channel.addReferralFile(_rfaReferralFile);
        }
        
        public System.Threading.Tasks.Task<int> addReferralFileAsync(MMC.MMCService.IntakeService.RFAReferralFile _rfaReferralFile) {
            return base.Channel.addReferralFileAsync(_rfaReferralFile);
        }
        
        public int updateReferralFile(MMC.MMCService.IntakeService.RFAReferralFile _rfaReferralFile) {
            return base.Channel.updateReferralFile(_rfaReferralFile);
        }
        
        public System.Threading.Tasks.Task<int> updateReferralFileAsync(MMC.MMCService.IntakeService.RFAReferralFile _rfaReferralFile) {
            return base.Channel.updateReferralFileAsync(_rfaReferralFile);
        }
        
        public MMC.MMCService.IntakeService.RFAReferralFile getReferralFileByID(int _rfaReferralFileID) {
            return base.Channel.getReferralFileByID(_rfaReferralFileID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile> getReferralFileByIDAsync(int _rfaReferralFileID) {
            return base.Channel.getReferralFileByIDAsync(_rfaReferralFileID);
        }
        
        public MMC.MMCService.IntakeService.RFAReferralFile getReferralFileByIntake(int _rfaReferralID) {
            return base.Channel.getReferralFileByIntake(_rfaReferralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile> getReferralFileByIntakeAsync(int _rfaReferralID) {
            return base.Channel.getReferralFileByIntakeAsync(_rfaReferralID);
        }
        
        public MMC.MMCService.IntakeService.RFAReferralFile[] getReferralFileByRFAReferralID(int _rfaReferralID) {
            return base.Channel.getReferralFileByRFAReferralID(_rfaReferralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile[]> getReferralFileByRFAReferralIDAsync(int _rfaReferralID) {
            return base.Channel.getReferralFileByRFAReferralIDAsync(_rfaReferralID);
        }
        
        public MMC.MMCService.IntakeService.RFAReferralFile[] getReferralFileByRFAReferralIDandFileType(int _rfaReferralID) {
            return base.Channel.getReferralFileByRFAReferralIDandFileType(_rfaReferralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile[]> getReferralFileByRFAReferralIDandFileTypeAsync(int _rfaReferralID) {
            return base.Channel.getReferralFileByRFAReferralIDandFileTypeAsync(_rfaReferralID);
        }
        
        public MMC.MMCService.IntakeService.RFAReferralFile[] getReferralFileByRFAReferralIDAndFileTypeID(int _rfaReferralID, int _fileTypeID) {
            return base.Channel.getReferralFileByRFAReferralIDAndFileTypeID(_rfaReferralID, _fileTypeID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile[]> getReferralFileByRFAReferralIDAndFileTypeIDAsync(int _rfaReferralID, int _fileTypeID) {
            return base.Channel.getReferralFileByRFAReferralIDAndFileTypeIDAsync(_rfaReferralID, _fileTypeID);
        }
        
        public string GetSignaturePathAndDescriptionByReferralID(int RFAReferralID) {
            return base.Channel.GetSignaturePathAndDescriptionByReferralID(RFAReferralID);
        }
        
        public System.Threading.Tasks.Task<string> GetSignaturePathAndDescriptionByReferralIDAsync(int RFAReferralID) {
            return base.Channel.GetSignaturePathAndDescriptionByReferralIDAsync(RFAReferralID);
        }
        
        public void AddRFIReportAdditionalRecordByRFAReferralFileID(int _rFAReferralFileID, int UserID) {
            base.Channel.AddRFIReportAdditionalRecordByRFAReferralFileID(_rFAReferralFileID, UserID);
        }
        
        public System.Threading.Tasks.Task AddRFIReportAdditionalRecordByRFAReferralFileIDAsync(int _rFAReferralFileID, int UserID) {
            return base.Channel.AddRFIReportAdditionalRecordByRFAReferralFileIDAsync(_rFAReferralFileID, UserID);
        }
        
        public void AddRFIReportAdditionalRecordByRFARequestID(int _rFAReferralFileID, int _rFARequestID, int UserID) {
            base.Channel.AddRFIReportAdditionalRecordByRFARequestID(_rFAReferralFileID, _rFARequestID, UserID);
        }
        
        public System.Threading.Tasks.Task AddRFIReportAdditionalRecordByRFARequestIDAsync(int _rFAReferralFileID, int _rFARequestID, int UserID) {
            return base.Channel.AddRFIReportAdditionalRecordByRFARequestIDAsync(_rFAReferralFileID, _rFARequestID, UserID);
        }
        
        public MMC.MMCService.IntakeService.PreviousReferralFromCurrentReferral[] getPreviousReferralIDFromCurrentReferralInDuplicate(int referralID) {
            return base.Channel.getPreviousReferralIDFromCurrentReferralInDuplicate(referralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PreviousReferralFromCurrentReferral[]> getPreviousReferralIDFromCurrentReferralInDuplicateAsync(int referralID) {
            return base.Channel.getPreviousReferralIDFromCurrentReferralInDuplicateAsync(referralID);
        }
        
        public MMC.MMCService.IntakeService.RFAReferralFile[] getRFAReferralFilesAccToReferralIDInPreparationCase(int _rfaReferralID) {
            return base.Channel.getRFAReferralFilesAccToReferralIDInPreparationCase(_rfaReferralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFAReferralFile[]> getRFAReferralFilesAccToReferralIDInPreparationCaseAsync(int _rfaReferralID) {
            return base.Channel.getRFAReferralFilesAccToReferralIDInPreparationCaseAsync(_rfaReferralID);
        }
        
        public int addRFARequest(MMC.MMCService.IntakeService.RFARequest _rfaRequest) {
            return base.Channel.addRFARequest(_rfaRequest);
        }
        
        public System.Threading.Tasks.Task<int> addRFARequestAsync(MMC.MMCService.IntakeService.RFARequest _rfaRequest) {
            return base.Channel.addRFARequestAsync(_rfaRequest);
        }
        
        public int AssignNewReferralToRequest(MMC.MMCService.IntakeService.RFARequest _rfaRequest) {
            return base.Channel.AssignNewReferralToRequest(_rfaRequest);
        }
        
        public System.Threading.Tasks.Task<int> AssignNewReferralToRequestAsync(MMC.MMCService.IntakeService.RFARequest _rfaRequest) {
            return base.Channel.AssignNewReferralToRequestAsync(_rfaRequest);
        }
        
        public int updateRFARequestAndDecision(MMC.MMCService.IntakeService.RFARequest _rfaRequest) {
            return base.Channel.updateRFARequestAndDecision(_rfaRequest);
        }
        
        public System.Threading.Tasks.Task<int> updateRFARequestAndDecisionAsync(MMC.MMCService.IntakeService.RFARequest _rfaRequest) {
            return base.Channel.updateRFARequestAndDecisionAsync(_rfaRequest);
        }
        
        public int updateRFARequest(MMC.MMCService.IntakeService.RFARequest _rfaRequest) {
            return base.Channel.updateRFARequest(_rfaRequest);
        }
        
        public System.Threading.Tasks.Task<int> updateRFARequestAsync(MMC.MMCService.IntakeService.RFARequest _rfaRequest) {
            return base.Channel.updateRFARequestAsync(_rfaRequest);
        }
        
        public void deleteRFARequest(int _rfaRequestID) {
            base.Channel.deleteRFARequest(_rfaRequestID);
        }
        
        public System.Threading.Tasks.Task deleteRFARequestAsync(int _rfaRequestID) {
            return base.Channel.deleteRFARequestAsync(_rfaRequestID);
        }
        
        public void deleteRFADelatedRequest(int _rfaRequestID) {
            base.Channel.deleteRFADelatedRequest(_rfaRequestID);
        }
        
        public System.Threading.Tasks.Task deleteRFADelatedRequestAsync(int _rfaRequestID) {
            return base.Channel.deleteRFADelatedRequestAsync(_rfaRequestID);
        }
        
        public MMC.MMCService.IntakeService.RFARequest getRFARequestByID(int _rfaRequestID) {
            return base.Channel.getRFARequestByID(_rfaRequestID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequest> getRFARequestByIDAsync(int _rfaRequestID) {
            return base.Channel.getRFARequestByIDAsync(_rfaRequestID);
        }
        
        public MMC.MMCService.IntakeService.RFARequest[] getRFARequestByReferralID(int _rfaReferralId) {
            return base.Channel.getRFARequestByReferralID(_rfaReferralId);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequest[]> getRFARequestByReferralIDAsync(int _rfaReferralId) {
            return base.Channel.getRFARequestByReferralIDAsync(_rfaReferralId);
        }
        
        public int addRFARequestAdditionalInfo(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo) {
            return base.Channel.addRFARequestAdditionalInfo(_rfaRequestAdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<int> addRFARequestAdditionalInfoAsync(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo) {
            return base.Channel.addRFARequestAdditionalInfoAsync(_rfaRequestAdditionalInfo);
        }
        
        public int updateRFARequestAdditionalInfo(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo) {
            return base.Channel.updateRFARequestAdditionalInfo(_rfaRequestAdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<int> updateRFARequestAdditionalInfoAsync(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo) {
            return base.Channel.updateRFARequestAdditionalInfoAsync(_rfaRequestAdditionalInfo);
        }
        
        public void addRFAReferralAdditionalInfo(MMC.MMCService.IntakeService.RFAReferralAdditionalInfo _rfaReferralAdditionalInfo) {
            base.Channel.addRFAReferralAdditionalInfo(_rfaReferralAdditionalInfo);
        }
        
        public System.Threading.Tasks.Task addRFAReferralAdditionalInfoAsync(MMC.MMCService.IntakeService.RFAReferralAdditionalInfo _rfaReferralAdditionalInfo) {
            return base.Channel.addRFAReferralAdditionalInfoAsync(_rfaReferralAdditionalInfo);
        }
        
        public MMC.MMCService.IntakeService.RFARequestAdditionalInfoDetail GetRFARequestAdditionalInfo(int _rfaRequestID) {
            return base.Channel.GetRFARequestAdditionalInfo(_rfaRequestID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequestAdditionalInfoDetail> GetRFARequestAdditionalInfoAsync(int _rfaRequestID) {
            return base.Channel.GetRFARequestAdditionalInfoAsync(_rfaRequestID);
        }
        
        public int SaveRFARequestAdditionalInfo(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo) {
            return base.Channel.SaveRFARequestAdditionalInfo(_rfaRequestAdditionalInfo);
        }
        
        public System.Threading.Tasks.Task<int> SaveRFARequestAdditionalInfoAsync(MMC.MMCService.IntakeService.RFARequestAdditionalInfo _rfaRequestAdditionalInfo) {
            return base.Channel.SaveRFARequestAdditionalInfoAsync(_rfaRequestAdditionalInfo);
        }
        
        public void UpdateRFAReqCertificationNumberByID(int RFAReferralID) {
            base.Channel.UpdateRFAReqCertificationNumberByID(RFAReferralID);
        }
        
        public System.Threading.Tasks.Task UpdateRFAReqCertificationNumberByIDAsync(int RFAReferralID) {
            return base.Channel.UpdateRFAReqCertificationNumberByIDAsync(RFAReferralID);
        }
        
        public void UpdateRFAReferralRequestDecisionByID(int RFAReferralID) {
            base.Channel.UpdateRFAReferralRequestDecisionByID(RFAReferralID);
        }
        
        public System.Threading.Tasks.Task UpdateRFAReferralRequestDecisionByIDAsync(int RFAReferralID) {
            return base.Channel.UpdateRFAReferralRequestDecisionByIDAsync(RFAReferralID);
        }
        
        public void UpdateRFARequestDecisionAndRFAStatusByReferralID(int RFAReferralID, string DecisionID, string RFAStatus) {
            base.Channel.UpdateRFARequestDecisionAndRFAStatusByReferralID(RFAReferralID, DecisionID, RFAStatus);
        }
        
        public System.Threading.Tasks.Task UpdateRFARequestDecisionAndRFAStatusByReferralIDAsync(int RFAReferralID, string DecisionID, string RFAStatus) {
            return base.Channel.UpdateRFARequestDecisionAndRFAStatusByReferralIDAsync(RFAReferralID, DecisionID, RFAStatus);
        }
        
        public System.DateTime UpdateRFARequestLatestDueDateByRefferalID(int _RFAReferralID, int _AddDays, int _UserID) {
            return base.Channel.UpdateRFARequestLatestDueDateByRefferalID(_RFAReferralID, _AddDays, _UserID);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> UpdateRFARequestLatestDueDateByRefferalIDAsync(int _RFAReferralID, int _AddDays, int _UserID) {
            return base.Channel.UpdateRFARequestLatestDueDateByRefferalIDAsync(_RFAReferralID, _AddDays, _UserID);
        }
        
        public int addRFAReferralCPTCodes(MMC.MMCService.IntakeService.RFARequestCPTCode _rfaReferralCPTCode) {
            return base.Channel.addRFAReferralCPTCodes(_rfaReferralCPTCode);
        }
        
        public System.Threading.Tasks.Task<int> addRFAReferralCPTCodesAsync(MMC.MMCService.IntakeService.RFARequestCPTCode _rfaReferralCPTCode) {
            return base.Channel.addRFAReferralCPTCodesAsync(_rfaReferralCPTCode);
        }
        
        public int updateRFAReferralCPTCodes(MMC.MMCService.IntakeService.RFARequestCPTCode _rfaReferralCPTCode) {
            return base.Channel.updateRFAReferralCPTCodes(_rfaReferralCPTCode);
        }
        
        public System.Threading.Tasks.Task<int> updateRFAReferralCPTCodesAsync(MMC.MMCService.IntakeService.RFARequestCPTCode _rfaReferralCPTCode) {
            return base.Channel.updateRFAReferralCPTCodesAsync(_rfaReferralCPTCode);
        }
        
        public void deleteRFAReferralCPTCodes(int _rfaCPTCodeID) {
            base.Channel.deleteRFAReferralCPTCodes(_rfaCPTCodeID);
        }
        
        public System.Threading.Tasks.Task deleteRFAReferralCPTCodesAsync(int _rfaCPTCodeID) {
            return base.Channel.deleteRFAReferralCPTCodesAsync(_rfaCPTCodeID);
        }
        
        public MMC.MMCService.IntakeService.RFARequestCPTCode getRFAReferralCPTCodesByID(int _rfaCPTCodeID) {
            return base.Channel.getRFAReferralCPTCodesByID(_rfaCPTCodeID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequestCPTCode> getRFAReferralCPTCodesByIDAsync(int _rfaCPTCodeID) {
            return base.Channel.getRFAReferralCPTCodesByIDAsync(_rfaCPTCodeID);
        }
        
        public int addRFARecordSplitting(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting) {
            return base.Channel.addRFARecordSplitting(_rfaRecordSplitting);
        }
        
        public System.Threading.Tasks.Task<int> addRFARecordSplittingAsync(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting) {
            return base.Channel.addRFARecordSplittingAsync(_rfaRecordSplitting);
        }
        
        public int udateRFARecordSplitting(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting) {
            return base.Channel.udateRFARecordSplitting(_rfaRecordSplitting);
        }
        
        public System.Threading.Tasks.Task<int> udateRFARecordSplittingAsync(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting) {
            return base.Channel.udateRFARecordSplittingAsync(_rfaRecordSplitting);
        }
        
        public int udateRFARecordSplittingClaimIDByReferralID(int rfaReferralID, int claimID) {
            return base.Channel.udateRFARecordSplittingClaimIDByReferralID(rfaReferralID, claimID);
        }
        
        public System.Threading.Tasks.Task<int> udateRFARecordSplittingClaimIDByReferralIDAsync(int rfaReferralID, int claimID) {
            return base.Channel.udateRFARecordSplittingClaimIDByReferralIDAsync(rfaReferralID, claimID);
        }
        
        public int udateRFARecordSplittingRecordForMedicalRec(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting) {
            return base.Channel.udateRFARecordSplittingRecordForMedicalRec(_rfaRecordSplitting);
        }
        
        public System.Threading.Tasks.Task<int> udateRFARecordSplittingRecordForMedicalRecAsync(MMC.MMCService.IntakeService.RFARecordSplitting _rfaRecordSplitting) {
            return base.Channel.udateRFARecordSplittingRecordForMedicalRecAsync(_rfaRecordSplitting);
        }
        
        public void deleteRFARecordSplitting(int rfaRecSpltID) {
            base.Channel.deleteRFARecordSplitting(rfaRecSpltID);
        }
        
        public System.Threading.Tasks.Task deleteRFARecordSplittingAsync(int rfaRecSpltID) {
            return base.Channel.deleteRFARecordSplittingAsync(rfaRecSpltID);
        }
        
        public MMC.MMCService.IntakeService.RFARecordSplitting getRFARecordSplittingByID(int rfaRecSpltID) {
            return base.Channel.getRFARecordSplittingByID(rfaRecSpltID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARecordSplitting> getRFARecordSplittingByIDAsync(int rfaRecSpltID) {
            return base.Channel.getRFARecordSplittingByIDAsync(rfaRecSpltID);
        }
        
        public MMC.MMCService.IntakeService.RFARecordSplitting[] getRFARecordSplittingByReferralID(int _rfaReferralId) {
            return base.Channel.getRFARecordSplittingByReferralID(_rfaReferralId);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARecordSplitting[]> getRFARecordSplittingByReferralIDAsync(int _rfaReferralId) {
            return base.Channel.getRFARecordSplittingByReferralIDAsync(_rfaReferralId);
        }
        
        public int udateReferralIntakePatientClaimByID(int _patientClaimID, int _rfaReferralId) {
            return base.Channel.udateReferralIntakePatientClaimByID(_patientClaimID, _rfaReferralId);
        }
        
        public System.Threading.Tasks.Task<int> udateReferralIntakePatientClaimByIDAsync(int _patientClaimID, int _rfaReferralId) {
            return base.Channel.udateReferralIntakePatientClaimByIDAsync(_patientClaimID, _rfaReferralId);
        }
        
        public MMC.MMCService.IntakeService.PatientDetailsByReferralID getPatientDetailsByReferralID(int _rfaReferralId) {
            return base.Channel.getPatientDetailsByReferralID(_rfaReferralId);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PatientDetailsByReferralID> getPatientDetailsByReferralIDAsync(int _rfaReferralId) {
            return base.Channel.getPatientDetailsByReferralIDAsync(_rfaReferralId);
        }
        
        public MMC.MMCService.IntakeService.PagedRFADiagnosis getRFADiagnosisByReferralID(int _rfaReferralId, int skip, int take) {
            return base.Channel.getRFADiagnosisByReferralID(_rfaReferralId, skip, take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedRFADiagnosis> getRFADiagnosisByReferralIDAsync(int _rfaReferralId, int skip, int take) {
            return base.Channel.getRFADiagnosisByReferralIDAsync(_rfaReferralId, skip, take);
        }
        
        public int addRFAPatMedicalRecordReview(MMC.MMCService.IntakeService.RFAPatMedicalRecordReview _rfaPatMedicalRecordReview) {
            return base.Channel.addRFAPatMedicalRecordReview(_rfaPatMedicalRecordReview);
        }
        
        public System.Threading.Tasks.Task<int> addRFAPatMedicalRecordReviewAsync(MMC.MMCService.IntakeService.RFAPatMedicalRecordReview _rfaPatMedicalRecordReview) {
            return base.Channel.addRFAPatMedicalRecordReviewAsync(_rfaPatMedicalRecordReview);
        }
        
        public MMC.MMCService.IntakeService.PagedRFAPatMedicalRecordReview getRFAPatMedicalRecordReviewByPatientID(int _PatientID, int _ReferralId, int _skip, int _take) {
            return base.Channel.getRFAPatMedicalRecordReviewByPatientID(_PatientID, _ReferralId, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedRFAPatMedicalRecordReview> getRFAPatMedicalRecordReviewByPatientIDAsync(int _PatientID, int _ReferralId, int _skip, int _take) {
            return base.Channel.getRFAPatMedicalRecordReviewByPatientIDAsync(_PatientID, _ReferralId, _skip, _take);
        }
        
        public MMC.MMCService.IntakeService.PagedPatientHistory getPatientHistoryByPatientID(int _patientID, int _skip, int _take, string sortBy, string order) {
            return base.Channel.getPatientHistoryByPatientID(_patientID, _skip, _take, sortBy, order);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedPatientHistory> getPatientHistoryByPatientIDAsync(int _patientID, int _skip, int _take, string sortBy, string order) {
            return base.Channel.getPatientHistoryByPatientIDAsync(_patientID, _skip, _take, sortBy, order);
        }
        
        public MMC.MMCService.IntakeService.PagedRequestHistory getRequestHistoryByRFARequestID(int _requestID, int _skip, int _take) {
            return base.Channel.getRequestHistoryByRFARequestID(_requestID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedRequestHistory> getRequestHistoryByRFARequestIDAsync(int _requestID, int _skip, int _take) {
            return base.Channel.getRequestHistoryByRFARequestIDAsync(_requestID, _skip, _take);
        }
        
        public int saveRFARequestModify(MMC.MMCService.IntakeService.RFARequestModify _rfaRequestModify) {
            return base.Channel.saveRFARequestModify(_rfaRequestModify);
        }
        
        public System.Threading.Tasks.Task<int> saveRFARequestModifyAsync(MMC.MMCService.IntakeService.RFARequestModify _rfaRequestModify) {
            return base.Channel.saveRFARequestModifyAsync(_rfaRequestModify);
        }
        
        public MMC.MMCService.IntakeService.RFARequestModify getRFARequestModify(int _rfaRequestID) {
            return base.Channel.getRFARequestModify(_rfaRequestID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequestModify> getRFARequestModifyAsync(int _rfaRequestID) {
            return base.Channel.getRFARequestModifyAsync(_rfaRequestID);
        }
        
        public MMC.MMCService.IntakeService.PagedRequestByReferralID GetRequestForDuplicateDecision(int _PatientClaimID, int _skip, int _take) {
            return base.Channel.GetRequestForDuplicateDecision(_PatientClaimID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.PagedRequestByReferralID> GetRequestForDuplicateDecisionAsync(int _PatientClaimID, int _skip, int _take) {
            return base.Channel.GetRequestForDuplicateDecisionAsync(_PatientClaimID, _skip, _take);
        }
        
        public int addNotes(MMC.MMCService.IntakeService.Note _note) {
            return base.Channel.addNotes(_note);
        }
        
        public System.Threading.Tasks.Task<int> addNotesAsync(MMC.MMCService.IntakeService.Note _note) {
            return base.Channel.addNotesAsync(_note);
        }
        
        public int updateNotes(MMC.MMCService.IntakeService.Note _note) {
            return base.Channel.updateNotes(_note);
        }
        
        public System.Threading.Tasks.Task<int> updateNotesAsync(MMC.MMCService.IntakeService.Note _note) {
            return base.Channel.updateNotesAsync(_note);
        }
        
        public int addRFARequestBilling(MMC.MMCService.IntakeService.RFARequestBilling[] _rfaRequestBilling) {
            return base.Channel.addRFARequestBilling(_rfaRequestBilling);
        }
        
        public System.Threading.Tasks.Task<int> addRFARequestBillingAsync(MMC.MMCService.IntakeService.RFARequestBilling[] _rfaRequestBilling) {
            return base.Channel.addRFARequestBillingAsync(_rfaRequestBilling);
        }
        
        public string getDeterminationLetterDecisionDesc(int _rfaReferralID) {
            return base.Channel.getDeterminationLetterDecisionDesc(_rfaReferralID);
        }
        
        public System.Threading.Tasks.Task<string> getDeterminationLetterDecisionDescAsync(int _rfaReferralID) {
            return base.Channel.getDeterminationLetterDecisionDescAsync(_rfaReferralID);
        }
        
        public int addRFARequestTimeExtensionInfo(MMC.MMCService.IntakeService.RFARequestTimeExtension _RFARequestTimeExtension) {
            return base.Channel.addRFARequestTimeExtensionInfo(_RFARequestTimeExtension);
        }
        
        public System.Threading.Tasks.Task<int> addRFARequestTimeExtensionInfoAsync(MMC.MMCService.IntakeService.RFARequestTimeExtension _RFARequestTimeExtension) {
            return base.Channel.addRFARequestTimeExtensionInfoAsync(_RFARequestTimeExtension);
        }
        
        public void DeleteRFARequestTimeExtensionInfo(int _rfarefferalId) {
            base.Channel.DeleteRFARequestTimeExtensionInfo(_rfarefferalId);
        }
        
        public System.Threading.Tasks.Task DeleteRFARequestTimeExtensionInfoAsync(int _rfarefferalId) {
            return base.Channel.DeleteRFARequestTimeExtensionInfoAsync(_rfarefferalId);
        }
        
        public void AddUpdateRFAReferralAdditionalLinkStatementIDbyRefID(MMC.MMCService.IntakeService.RFAReferralAdditionalLink _rfaReferralAdditionalLink) {
            base.Channel.AddUpdateRFAReferralAdditionalLinkStatementIDbyRefID(_rfaReferralAdditionalLink);
        }
        
        public System.Threading.Tasks.Task AddUpdateRFAReferralAdditionalLinkStatementIDbyRefIDAsync(MMC.MMCService.IntakeService.RFAReferralAdditionalLink _rfaReferralAdditionalLink) {
            return base.Channel.AddUpdateRFAReferralAdditionalLinkStatementIDbyRefIDAsync(_rfaReferralAdditionalLink);
        }
        
        public void AddUpdateRFAReferralAdditionalLinkInvoiceIDbyRefID(MMC.MMCService.IntakeService.RFAReferralAdditionalLink _rfaReferralAdditionalLink) {
            base.Channel.AddUpdateRFAReferralAdditionalLinkInvoiceIDbyRefID(_rfaReferralAdditionalLink);
        }
        
        public System.Threading.Tasks.Task AddUpdateRFAReferralAdditionalLinkInvoiceIDbyRefIDAsync(MMC.MMCService.IntakeService.RFAReferralAdditionalLink _rfaReferralAdditionalLink) {
            return base.Channel.AddUpdateRFAReferralAdditionalLinkInvoiceIDbyRefIDAsync(_rfaReferralAdditionalLink);
        }
        
        public int addRFARequestBodyPart(MMC.MMCService.IntakeService.RFARequestBodyPart _rFARequestBodyPart) {
            return base.Channel.addRFARequestBodyPart(_rFARequestBodyPart);
        }
        
        public System.Threading.Tasks.Task<int> addRFARequestBodyPartAsync(MMC.MMCService.IntakeService.RFARequestBodyPart _rFARequestBodyPart) {
            return base.Channel.addRFARequestBodyPartAsync(_rFARequestBodyPart);
        }
        
        public int updateRFARequestBodyPart(MMC.MMCService.IntakeService.RFARequestBodyPart _rFARequestBodyPart) {
            return base.Channel.updateRFARequestBodyPart(_rFARequestBodyPart);
        }
        
        public System.Threading.Tasks.Task<int> updateRFARequestBodyPartAsync(MMC.MMCService.IntakeService.RFARequestBodyPart _rFARequestBodyPart) {
            return base.Channel.updateRFARequestBodyPartAsync(_rFARequestBodyPart);
        }
        
        public MMC.MMCService.IntakeService.RFARequestBodyPart[] getRFARequestBodyPartByRequestID(int _requestID) {
            return base.Channel.getRFARequestBodyPartByRequestID(_requestID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IntakeService.RFARequestBodyPart[]> getRFARequestBodyPartByRequestIDAsync(int _requestID) {
            return base.Channel.getRFARequestBodyPartByRequestIDAsync(_requestID);
        }
        
        public void deleteRFARequestBodyPartByReqID(int _rfaRequestID) {
            base.Channel.deleteRFARequestBodyPartByReqID(_rfaRequestID);
        }
        
        public System.Threading.Tasks.Task deleteRFARequestBodyPartByReqIDAsync(int _rfaRequestID) {
            return base.Channel.deleteRFARequestBodyPartByReqIDAsync(_rfaRequestID);
        }
    }
}
