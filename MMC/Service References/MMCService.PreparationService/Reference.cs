//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMC.MMCService.PreparationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedClinicalTriage", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedClinicalTriage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PreparationService.ClinicalTriage[] ClinicalTriagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PreparationService.ClinicalTriage[] ClinicalTriages {
            get {
                return this.ClinicalTriagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicalTriagesField, value) != true)) {
                    this.ClinicalTriagesField = value;
                    this.RaisePropertyChanged("ClinicalTriages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClinicalTriage", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClinicalTriage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DecisionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DecisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatClaimNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFALatestDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARequestedTreatmentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DecisionDesc {
            get {
                return this.DecisionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DecisionDescField, value) != true)) {
                    this.DecisionDescField = value;
                    this.RaisePropertyChanged("DecisionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DecisionID {
            get {
                return this.DecisionIDField;
            }
            set {
                if ((this.DecisionIDField.Equals(value) != true)) {
                    this.DecisionIDField = value;
                    this.RaisePropertyChanged("DecisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatClaimNumber {
            get {
                return this.PatClaimNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PatClaimNumberField, value) != true)) {
                    this.PatClaimNumberField = value;
                    this.RaisePropertyChanged("PatClaimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatFirstName {
            get {
                return this.PatFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatFirstNameField, value) != true)) {
                    this.PatFirstNameField = value;
                    this.RaisePropertyChanged("PatFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatLastName {
            get {
                return this.PatLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatLastNameField, value) != true)) {
                    this.PatLastNameField = value;
                    this.RaisePropertyChanged("PatLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysFirstName {
            get {
                return this.PhysFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysFirstNameField, value) != true)) {
                    this.PhysFirstNameField = value;
                    this.RaisePropertyChanged("PhysFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysLastName {
            get {
                return this.PhysLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysLastNameField, value) != true)) {
                    this.PhysLastNameField = value;
                    this.RaisePropertyChanged("PhysLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFALatestDueDate {
            get {
                return this.RFALatestDueDateField;
            }
            set {
                if ((this.RFALatestDueDateField.Equals(value) != true)) {
                    this.RFALatestDueDateField = value;
                    this.RaisePropertyChanged("RFALatestDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARequestedTreatment {
            get {
                return this.RFARequestedTreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARequestedTreatmentField, value) != true)) {
                    this.RFARequestedTreatmentField = value;
                    this.RaisePropertyChanged("RFARequestedTreatment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientAndRequestModel", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientAndRequestModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PreparationService.PatientByReferralID PatientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemainingDecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PreparationService.RequestByReferralID[] RequestDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeExtensionPNCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PreparationService.PatientByReferralID Patients {
            get {
                return this.PatientsField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientsField, value) != true)) {
                    this.PatientsField = value;
                    this.RaisePropertyChanged("Patients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemainingDecision {
            get {
                return this.RemainingDecisionField;
            }
            set {
                if ((this.RemainingDecisionField.Equals(value) != true)) {
                    this.RemainingDecisionField = value;
                    this.RaisePropertyChanged("RemainingDecision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestCount {
            get {
                return this.RequestCountField;
            }
            set {
                if ((this.RequestCountField.Equals(value) != true)) {
                    this.RequestCountField = value;
                    this.RaisePropertyChanged("RequestCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PreparationService.RequestByReferralID[] RequestDetail {
            get {
                return this.RequestDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestDetailField, value) != true)) {
                    this.RequestDetailField = value;
                    this.RaisePropertyChanged("RequestDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeExtensionPNCount {
            get {
                return this.TimeExtensionPNCountField;
            }
            set {
                if ((this.TimeExtensionPNCountField.Equals(value) != true)) {
                    this.TimeExtensionPNCountField = value;
                    this.RaisePropertyChanged("TimeExtensionPNCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientByReferralID", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientByReferralID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientBillingRateTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatClaimNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PatDOIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientBillingRateTypeID {
            get {
                return this.ClientBillingRateTypeIDField;
            }
            set {
                if ((this.ClientBillingRateTypeIDField.Equals(value) != true)) {
                    this.ClientBillingRateTypeIDField = value;
                    this.RaisePropertyChanged("ClientBillingRateTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatClaimNumber {
            get {
                return this.PatClaimNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PatClaimNumberField, value) != true)) {
                    this.PatClaimNumberField = value;
                    this.RaisePropertyChanged("PatClaimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PatDOI {
            get {
                return this.PatDOIField;
            }
            set {
                if ((this.PatDOIField.Equals(value) != true)) {
                    this.PatDOIField = value;
                    this.RaisePropertyChanged("PatDOI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatFirstName {
            get {
                return this.PatFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatFirstNameField, value) != true)) {
                    this.PatFirstNameField = value;
                    this.RaisePropertyChanged("PatFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatLastName {
            get {
                return this.PatLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatLastNameField, value) != true)) {
                    this.PatLastNameField = value;
                    this.RaisePropertyChanged("PatLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestByReferralID", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RequestByReferralID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DecisionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DecisionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DecisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAClinicalReasonforDecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFADurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFADurationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAGuidelinesUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RFAHCRGDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFALatestDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFANotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARelevantPortionUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFARequestModifyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARequestedTreatmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Decision {
            get {
                return this.DecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.DecisionField, value) != true)) {
                    this.DecisionField = value;
                    this.RaisePropertyChanged("Decision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DecisionDate {
            get {
                return this.DecisionDateField;
            }
            set {
                if ((this.DecisionDateField.Equals(value) != true)) {
                    this.DecisionDateField = value;
                    this.RaisePropertyChanged("DecisionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DecisionDesc {
            get {
                return this.DecisionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DecisionDescField, value) != true)) {
                    this.DecisionDescField = value;
                    this.RaisePropertyChanged("DecisionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DecisionID {
            get {
                return this.DecisionIDField;
            }
            set {
                if ((this.DecisionIDField.Equals(value) != true)) {
                    this.DecisionIDField = value;
                    this.RaisePropertyChanged("DecisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAClinicalReasonforDecision {
            get {
                return this.RFAClinicalReasonforDecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAClinicalReasonforDecisionField, value) != true)) {
                    this.RFAClinicalReasonforDecisionField = value;
                    this.RaisePropertyChanged("RFAClinicalReasonforDecision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFADuration {
            get {
                return this.RFADurationField;
            }
            set {
                if ((this.RFADurationField.Equals(value) != true)) {
                    this.RFADurationField = value;
                    this.RaisePropertyChanged("RFADuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFADurationTypeID {
            get {
                return this.RFADurationTypeIDField;
            }
            set {
                if ((this.RFADurationTypeIDField.Equals(value) != true)) {
                    this.RFADurationTypeIDField = value;
                    this.RaisePropertyChanged("RFADurationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAFrequency {
            get {
                return this.RFAFrequencyField;
            }
            set {
                if ((this.RFAFrequencyField.Equals(value) != true)) {
                    this.RFAFrequencyField = value;
                    this.RaisePropertyChanged("RFAFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAGuidelinesUtilized {
            get {
                return this.RFAGuidelinesUtilizedField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAGuidelinesUtilizedField, value) != true)) {
                    this.RFAGuidelinesUtilizedField = value;
                    this.RaisePropertyChanged("RFAGuidelinesUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RFAHCRGDate {
            get {
                return this.RFAHCRGDateField;
            }
            set {
                if ((this.RFAHCRGDateField.Equals(value) != true)) {
                    this.RFAHCRGDateField = value;
                    this.RaisePropertyChanged("RFAHCRGDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFALatestDueDate {
            get {
                return this.RFALatestDueDateField;
            }
            set {
                if ((this.RFALatestDueDateField.Equals(value) != true)) {
                    this.RFALatestDueDateField = value;
                    this.RaisePropertyChanged("RFALatestDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFANotes {
            get {
                return this.RFANotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RFANotesField, value) != true)) {
                    this.RFANotesField = value;
                    this.RaisePropertyChanged("RFANotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARelevantPortionUtilized {
            get {
                return this.RFARelevantPortionUtilizedField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARelevantPortionUtilizedField, value) != true)) {
                    this.RFARelevantPortionUtilizedField = value;
                    this.RaisePropertyChanged("RFARelevantPortionUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFARequestModifyID {
            get {
                return this.RFARequestModifyIDField;
            }
            set {
                if ((this.RFARequestModifyIDField.Equals(value) != true)) {
                    this.RFARequestModifyIDField = value;
                    this.RaisePropertyChanged("RFARequestModifyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARequestedTreatment {
            get {
                return this.RFARequestedTreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARequestedTreatmentField, value) != true)) {
                    this.RFARequestedTreatmentField = value;
                    this.RaisePropertyChanged("RFARequestedTreatment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAStatus {
            get {
                return this.RFAStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAStatusField, value) != true)) {
                    this.RFAStatusField = value;
                    this.RaisePropertyChanged("RFAStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFAAdditionalInfo", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFAAdditionalInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAAdditionalInfoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAAdditionalInfoRecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFAAdditionalInfoRecordDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAAdditionalInfoID {
            get {
                return this.RFAAdditionalInfoIDField;
            }
            set {
                if ((this.RFAAdditionalInfoIDField.Equals(value) != true)) {
                    this.RFAAdditionalInfoIDField = value;
                    this.RaisePropertyChanged("RFAAdditionalInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAAdditionalInfoRecord {
            get {
                return this.RFAAdditionalInfoRecordField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAAdditionalInfoRecordField, value) != true)) {
                    this.RFAAdditionalInfoRecordField = value;
                    this.RaisePropertyChanged("RFAAdditionalInfoRecord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFAAdditionalInfoRecordDate {
            get {
                return this.RFAAdditionalInfoRecordDateField;
            }
            set {
                if ((this.RFAAdditionalInfoRecordDateField.Equals(value) != true)) {
                    this.RFAAdditionalInfoRecordDateField = value;
                    this.RaisePropertyChanged("RFAAdditionalInfoRecordDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedRFAAdditionalInfo", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedRFAAdditionalInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PreparationService.RFAAdditionalInfo[] RFAAdditionalInfoDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PreparationService.RFAAdditionalInfo[] RFAAdditionalInfoDetails {
            get {
                return this.RFAAdditionalInfoDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAAdditionalInfoDetailsField, value) != true)) {
                    this.RFAAdditionalInfoDetailsField = value;
                    this.RaisePropertyChanged("RFAAdditionalInfoDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFARequest", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFARequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DecisionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DecisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFACPT_NDCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAClinicalReasonforDecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFADurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFADurationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> RFAExpediteReferralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAGuidelinesUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFALatestDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFANotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARelevantPortionUtilizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAReqCertificationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFARequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARequestedTreatmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAStrenghtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RequestTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TreatmentTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DecisionDate {
            get {
                return this.DecisionDateField;
            }
            set {
                if ((this.DecisionDateField.Equals(value) != true)) {
                    this.DecisionDateField = value;
                    this.RaisePropertyChanged("DecisionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DecisionID {
            get {
                return this.DecisionIDField;
            }
            set {
                if ((this.DecisionIDField.Equals(value) != true)) {
                    this.DecisionIDField = value;
                    this.RaisePropertyChanged("DecisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFACPT_NDC {
            get {
                return this.RFACPT_NDCField;
            }
            set {
                if ((object.ReferenceEquals(this.RFACPT_NDCField, value) != true)) {
                    this.RFACPT_NDCField = value;
                    this.RaisePropertyChanged("RFACPT_NDC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAClinicalReasonforDecision {
            get {
                return this.RFAClinicalReasonforDecisionField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAClinicalReasonforDecisionField, value) != true)) {
                    this.RFAClinicalReasonforDecisionField = value;
                    this.RaisePropertyChanged("RFAClinicalReasonforDecision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFADuration {
            get {
                return this.RFADurationField;
            }
            set {
                if ((this.RFADurationField.Equals(value) != true)) {
                    this.RFADurationField = value;
                    this.RaisePropertyChanged("RFADuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFADurationTypeID {
            get {
                return this.RFADurationTypeIDField;
            }
            set {
                if ((this.RFADurationTypeIDField.Equals(value) != true)) {
                    this.RFADurationTypeIDField = value;
                    this.RaisePropertyChanged("RFADurationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> RFAExpediteReferral {
            get {
                return this.RFAExpediteReferralField;
            }
            set {
                if ((this.RFAExpediteReferralField.Equals(value) != true)) {
                    this.RFAExpediteReferralField = value;
                    this.RaisePropertyChanged("RFAExpediteReferral");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAFrequency {
            get {
                return this.RFAFrequencyField;
            }
            set {
                if ((this.RFAFrequencyField.Equals(value) != true)) {
                    this.RFAFrequencyField = value;
                    this.RaisePropertyChanged("RFAFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAGuidelinesUtilized {
            get {
                return this.RFAGuidelinesUtilizedField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAGuidelinesUtilizedField, value) != true)) {
                    this.RFAGuidelinesUtilizedField = value;
                    this.RaisePropertyChanged("RFAGuidelinesUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFALatestDueDate {
            get {
                return this.RFALatestDueDateField;
            }
            set {
                if ((this.RFALatestDueDateField.Equals(value) != true)) {
                    this.RFALatestDueDateField = value;
                    this.RaisePropertyChanged("RFALatestDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFANotes {
            get {
                return this.RFANotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RFANotesField, value) != true)) {
                    this.RFANotesField = value;
                    this.RaisePropertyChanged("RFANotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAQuantity {
            get {
                return this.RFAQuantityField;
            }
            set {
                if ((this.RFAQuantityField.Equals(value) != true)) {
                    this.RFAQuantityField = value;
                    this.RaisePropertyChanged("RFAQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARelevantPortionUtilized {
            get {
                return this.RFARelevantPortionUtilizedField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARelevantPortionUtilizedField, value) != true)) {
                    this.RFARelevantPortionUtilizedField = value;
                    this.RaisePropertyChanged("RFARelevantPortionUtilized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAReqCertificationNumber {
            get {
                return this.RFAReqCertificationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAReqCertificationNumberField, value) != true)) {
                    this.RFAReqCertificationNumberField = value;
                    this.RaisePropertyChanged("RFAReqCertificationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFARequestDate {
            get {
                return this.RFARequestDateField;
            }
            set {
                if ((this.RFARequestDateField.Equals(value) != true)) {
                    this.RFARequestDateField = value;
                    this.RaisePropertyChanged("RFARequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARequestedTreatment {
            get {
                return this.RFARequestedTreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARequestedTreatmentField, value) != true)) {
                    this.RFARequestedTreatmentField = value;
                    this.RaisePropertyChanged("RFARequestedTreatment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAStatus {
            get {
                return this.RFAStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAStatusField, value) != true)) {
                    this.RFAStatusField = value;
                    this.RaisePropertyChanged("RFAStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAStrenght {
            get {
                return this.RFAStrenghtField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAStrenghtField, value) != true)) {
                    this.RFAStrenghtField = value;
                    this.RaisePropertyChanged("RFAStrenght");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RequestTypeID {
            get {
                return this.RequestTypeIDField;
            }
            set {
                if ((this.RequestTypeIDField.Equals(value) != true)) {
                    this.RequestTypeIDField = value;
                    this.RaisePropertyChanged("RequestTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TreatmentTypeID {
            get {
                return this.TreatmentTypeIDField;
            }
            set {
                if ((this.TreatmentTypeIDField.Equals(value) != true)) {
                    this.TreatmentTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedPatientMedicalRecordByPatientID", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedPatientMedicalRecordByPatientID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.PreparationService.PatientMedicalRecordByPatientID[] PatientMedicalRecordByPatientIDDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.PreparationService.PatientMedicalRecordByPatientID[] PatientMedicalRecordByPatientIDDetails {
            get {
                return this.PatientMedicalRecordByPatientIDDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMedicalRecordByPatientIDDetailsField, value) != true)) {
                    this.PatientMedicalRecordByPatientIDDetailsField = value;
                    this.RaisePropertyChanged("PatientMedicalRecordByPatientIDDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientMedicalRecordByPatientID", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class PatientMedicalRecordByPatientID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatClaimNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PatMRDocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatMRDocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientMedicalRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysicianNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diagnosis {
            get {
                return this.DiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisField, value) != true)) {
                    this.DiagnosisField = value;
                    this.RaisePropertyChanged("Diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentCategoryName {
            get {
                return this.DocumentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentCategoryNameField, value) != true)) {
                    this.DocumentCategoryNameField = value;
                    this.RaisePropertyChanged("DocumentCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatClaimNumber {
            get {
                return this.PatClaimNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PatClaimNumberField, value) != true)) {
                    this.PatClaimNumberField = value;
                    this.RaisePropertyChanged("PatClaimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PatMRDocumentDate {
            get {
                return this.PatMRDocumentDateField;
            }
            set {
                if ((this.PatMRDocumentDateField.Equals(value) != true)) {
                    this.PatMRDocumentDateField = value;
                    this.RaisePropertyChanged("PatMRDocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatMRDocumentName {
            get {
                return this.PatMRDocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatMRDocumentNameField, value) != true)) {
                    this.PatMRDocumentNameField = value;
                    this.RaisePropertyChanged("PatMRDocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientMedicalRecordID {
            get {
                return this.PatientMedicalRecordIDField;
            }
            set {
                if ((this.PatientMedicalRecordIDField.Equals(value) != true)) {
                    this.PatientMedicalRecordIDField = value;
                    this.RaisePropertyChanged("PatientMedicalRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysicianName {
            get {
                return this.PhysicianNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysicianNameField, value) != true)) {
                    this.PhysicianNameField = value;
                    this.RaisePropertyChanged("PhysicianName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MMCService.PreparationService.IPreparationService")]
    public interface IPreparationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getReferralByProcessLevel", ReplyAction="http://tempuri.org/IPreparationService/getReferralByProcessLevelResponse")]
        MMC.MMCService.PreparationService.PagedClinicalTriage getReferralByProcessLevel(int skip, int take, int processLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getReferralByProcessLevel", ReplyAction="http://tempuri.org/IPreparationService/getReferralByProcessLevelResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PreparationService.PagedClinicalTriage> getReferralByProcessLevelAsync(int skip, int take, int processLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getPatientAndRequestByReferralId", ReplyAction="http://tempuri.org/IPreparationService/getPatientAndRequestByReferralIdResponse")]
        MMC.MMCService.PreparationService.PatientAndRequestModel getPatientAndRequestByReferralId(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getPatientAndRequestByReferralId", ReplyAction="http://tempuri.org/IPreparationService/getPatientAndRequestByReferralIdResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PreparationService.PatientAndRequestModel> getPatientAndRequestByReferralIdAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getAllRequestByReferralID", ReplyAction="http://tempuri.org/IPreparationService/getAllRequestByReferralIDResponse")]
        MMC.MMCService.PreparationService.RequestByReferralID[] getAllRequestByReferralID(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getAllRequestByReferralID", ReplyAction="http://tempuri.org/IPreparationService/getAllRequestByReferralIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PreparationService.RequestByReferralID[]> getAllRequestByReferralIDAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getPatientAndRequestForNotificationByRefer" +
            "ralId", ReplyAction="http://tempuri.org/IPreparationService/getPatientAndRequestForNotificationByRefer" +
            "ralIdResponse")]
        MMC.MMCService.PreparationService.PatientAndRequestModel getPatientAndRequestForNotificationByReferralId(int _referralID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getPatientAndRequestForNotificationByRefer" +
            "ralId", ReplyAction="http://tempuri.org/IPreparationService/getPatientAndRequestForNotificationByRefer" +
            "ralIdResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PreparationService.PatientAndRequestModel> getPatientAndRequestForNotificationByReferralIdAsync(int _referralID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/updateProcessLevel", ReplyAction="http://tempuri.org/IPreparationService/updateProcessLevelResponse")]
        int updateProcessLevel(int _referralID, int _processLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/updateProcessLevel", ReplyAction="http://tempuri.org/IPreparationService/updateProcessLevelResponse")]
        System.Threading.Tasks.Task<int> updateProcessLevelAsync(int _referralID, int _processLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getRFANewReferralIDFromRFAOldReferralID", ReplyAction="http://tempuri.org/IPreparationService/getRFANewReferralIDFromRFAOldReferralIDRes" +
            "ponse")]
        int getRFANewReferralIDFromRFAOldReferralID(int RFAReferralID, int DecisionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getRFANewReferralIDFromRFAOldReferralID", ReplyAction="http://tempuri.org/IPreparationService/getRFANewReferralIDFromRFAOldReferralIDRes" +
            "ponse")]
        System.Threading.Tasks.Task<int> getRFANewReferralIDFromRFAOldReferralIDAsync(int RFAReferralID, int DecisionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/DeleteRFAReferralIDFromReferralFiles", ReplyAction="http://tempuri.org/IPreparationService/DeleteRFAReferralIDFromReferralFilesRespon" +
            "se")]
        int DeleteRFAReferralIDFromReferralFiles(int ReferralID, int RFAFileTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/DeleteRFAReferralIDFromReferralFiles", ReplyAction="http://tempuri.org/IPreparationService/DeleteRFAReferralIDFromReferralFilesRespon" +
            "se")]
        System.Threading.Tasks.Task<int> DeleteRFAReferralIDFromReferralFilesAsync(int ReferralID, int RFAFileTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/addRFAAdditionalInfo", ReplyAction="http://tempuri.org/IPreparationService/addRFAAdditionalInfoResponse")]
        int addRFAAdditionalInfo(MMC.MMCService.PreparationService.RFAAdditionalInfo rfaAddiotionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/addRFAAdditionalInfo", ReplyAction="http://tempuri.org/IPreparationService/addRFAAdditionalInfoResponse")]
        System.Threading.Tasks.Task<int> addRFAAdditionalInfoAsync(MMC.MMCService.PreparationService.RFAAdditionalInfo rfaAddiotionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/updateRFAAdditionalInfo", ReplyAction="http://tempuri.org/IPreparationService/updateRFAAdditionalInfoResponse")]
        int updateRFAAdditionalInfo(MMC.MMCService.PreparationService.RFAAdditionalInfo rfaAddiotionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/updateRFAAdditionalInfo", ReplyAction="http://tempuri.org/IPreparationService/updateRFAAdditionalInfoResponse")]
        System.Threading.Tasks.Task<int> updateRFAAdditionalInfoAsync(MMC.MMCService.PreparationService.RFAAdditionalInfo rfaAddiotionalInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getAllRFAAdditionalInfo", ReplyAction="http://tempuri.org/IPreparationService/getAllRFAAdditionalInfoResponse")]
        MMC.MMCService.PreparationService.PagedRFAAdditionalInfo getAllRFAAdditionalInfo(int ReferralID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getAllRFAAdditionalInfo", ReplyAction="http://tempuri.org/IPreparationService/getAllRFAAdditionalInfoResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PreparationService.PagedRFAAdditionalInfo> getAllRFAAdditionalInfoAsync(int ReferralID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getRFAAdditionalInfoById", ReplyAction="http://tempuri.org/IPreparationService/getRFAAdditionalInfoByIdResponse")]
        MMC.MMCService.PreparationService.RFAAdditionalInfo getRFAAdditionalInfoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getRFAAdditionalInfoById", ReplyAction="http://tempuri.org/IPreparationService/getRFAAdditionalInfoByIdResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.PreparationService.RFAAdditionalInfo> getRFAAdditionalInfoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getRemainingRequest", ReplyAction="http://tempuri.org/IPreparationService/getRemainingRequestResponse")]
        int getRemainingRequest(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getRemainingRequest", ReplyAction="http://tempuri.org/IPreparationService/getRemainingRequestResponse")]
        System.Threading.Tasks.Task<int> getRemainingRequestAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/UpdateRFAAdditionalInfoDetailByRequestID", ReplyAction="http://tempuri.org/IPreparationService/UpdateRFAAdditionalInfoDetailByRequestIDRe" +
            "sponse")]
        void UpdateRFAAdditionalInfoDetailByRequestID(int oldRFAReferralID, int rFARequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/UpdateRFAAdditionalInfoDetailByRequestID", ReplyAction="http://tempuri.org/IPreparationService/UpdateRFAAdditionalInfoDetailByRequestIDRe" +
            "sponse")]
        System.Threading.Tasks.Task UpdateRFAAdditionalInfoDetailByRequestIDAsync(int oldRFAReferralID, int rFARequestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/updateDecisionByRequestID", ReplyAction="http://tempuri.org/IPreparationService/updateDecisionByRequestIDResponse")]
        int updateDecisionByRequestID(MMC.MMCService.PreparationService.RFARequest rfaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/updateDecisionByRequestID", ReplyAction="http://tempuri.org/IPreparationService/updateDecisionByRequestIDResponse")]
        System.Threading.Tasks.Task<int> updateDecisionByRequestIDAsync(MMC.MMCService.PreparationService.RFARequest rfaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/AddRFITemplateRecordByRFARequestID", ReplyAction="http://tempuri.org/IPreparationService/AddRFITemplateRecordByRFARequestIDResponse" +
            "")]
        void AddRFITemplateRecordByRFARequestID(int _rFAReferralFileID, int _userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/AddRFITemplateRecordByRFARequestID", ReplyAction="http://tempuri.org/IPreparationService/AddRFITemplateRecordByRFARequestIDResponse" +
            "")]
        System.Threading.Tasks.Task AddRFITemplateRecordByRFARequestIDAsync(int _rFAReferralFileID, int _userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/AddRFARequestTimeExtensionRecordByRFAReque" +
            "stID", ReplyAction="http://tempuri.org/IPreparationService/AddRFARequestTimeExtensionRecordByRFAReque" +
            "stIDResponse")]
        void AddRFARequestTimeExtensionRecordByRFARequestID(int _rFAReferralFileID, int _userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/AddRFARequestTimeExtensionRecordByRFAReque" +
            "stID", ReplyAction="http://tempuri.org/IPreparationService/AddRFARequestTimeExtensionRecordByRFAReque" +
            "stIDResponse")]
        System.Threading.Tasks.Task AddRFARequestTimeExtensionRecordByRFARequestIDAsync(int _rFAReferralFileID, int _userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getAcceptedBodyPartsByReferralID", ReplyAction="http://tempuri.org/IPreparationService/getAcceptedBodyPartsByReferralIDResponse")]
        string getAcceptedBodyPartsByReferralID(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getAcceptedBodyPartsByReferralID", ReplyAction="http://tempuri.org/IPreparationService/getAcceptedBodyPartsByReferralIDResponse")]
        System.Threading.Tasks.Task<string> getAcceptedBodyPartsByReferralIDAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getDeniedBodyPartsByReferralID", ReplyAction="http://tempuri.org/IPreparationService/getDeniedBodyPartsByReferralIDResponse")]
        string getDeniedBodyPartsByReferralID(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getDeniedBodyPartsByReferralID", ReplyAction="http://tempuri.org/IPreparationService/getDeniedBodyPartsByReferralIDResponse")]
        System.Threading.Tasks.Task<string> getDeniedBodyPartsByReferralIDAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getDignosisByReferralID", ReplyAction="http://tempuri.org/IPreparationService/getDignosisByReferralIDResponse")]
        string getDignosisByReferralID(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getDignosisByReferralID", ReplyAction="http://tempuri.org/IPreparationService/getDignosisByReferralIDResponse")]
        System.Threading.Tasks.Task<string> getDignosisByReferralIDAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getDelayedBodyPartByReferralID", ReplyAction="http://tempuri.org/IPreparationService/getDelayedBodyPartByReferralIDResponse")]
        string getDelayedBodyPartByReferralID(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getDelayedBodyPartByReferralID", ReplyAction="http://tempuri.org/IPreparationService/getDelayedBodyPartByReferralIDResponse")]
        System.Threading.Tasks.Task<string> getDelayedBodyPartByReferralIDAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getReferralMedicalRecordByPatientID", ReplyAction="http://tempuri.org/IPreparationService/getReferralMedicalRecordByPatientIDRespons" +
            "e")]
        MMC.MMCService.PreparationService.PagedPatientMedicalRecordByPatientID getReferralMedicalRecordByPatientID(int _patientID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPreparationService/getReferralMedicalRecordByPatientID", ReplyAction="http://tempuri.org/IPreparationService/getReferralMedicalRecordByPatientIDRespons" +
            "e")]
        System.Threading.Tasks.Task<MMC.MMCService.PreparationService.PagedPatientMedicalRecordByPatientID> getReferralMedicalRecordByPatientIDAsync(int _patientID, int _skip, int _take);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPreparationServiceChannel : MMC.MMCService.PreparationService.IPreparationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PreparationServiceClient : System.ServiceModel.ClientBase<MMC.MMCService.PreparationService.IPreparationService>, MMC.MMCService.PreparationService.IPreparationService {
        
        public PreparationServiceClient() {
        }
        
        public PreparationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PreparationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PreparationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PreparationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MMC.MMCService.PreparationService.PagedClinicalTriage getReferralByProcessLevel(int skip, int take, int processLevel) {
            return base.Channel.getReferralByProcessLevel(skip, take, processLevel);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PreparationService.PagedClinicalTriage> getReferralByProcessLevelAsync(int skip, int take, int processLevel) {
            return base.Channel.getReferralByProcessLevelAsync(skip, take, processLevel);
        }
        
        public MMC.MMCService.PreparationService.PatientAndRequestModel getPatientAndRequestByReferralId(int _referralID) {
            return base.Channel.getPatientAndRequestByReferralId(_referralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PreparationService.PatientAndRequestModel> getPatientAndRequestByReferralIdAsync(int _referralID) {
            return base.Channel.getPatientAndRequestByReferralIdAsync(_referralID);
        }
        
        public MMC.MMCService.PreparationService.RequestByReferralID[] getAllRequestByReferralID(int _referralID) {
            return base.Channel.getAllRequestByReferralID(_referralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PreparationService.RequestByReferralID[]> getAllRequestByReferralIDAsync(int _referralID) {
            return base.Channel.getAllRequestByReferralIDAsync(_referralID);
        }
        
        public MMC.MMCService.PreparationService.PatientAndRequestModel getPatientAndRequestForNotificationByReferralId(int _referralID, int _skip, int _take) {
            return base.Channel.getPatientAndRequestForNotificationByReferralId(_referralID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PreparationService.PatientAndRequestModel> getPatientAndRequestForNotificationByReferralIdAsync(int _referralID, int _skip, int _take) {
            return base.Channel.getPatientAndRequestForNotificationByReferralIdAsync(_referralID, _skip, _take);
        }
        
        public int updateProcessLevel(int _referralID, int _processLevel) {
            return base.Channel.updateProcessLevel(_referralID, _processLevel);
        }
        
        public System.Threading.Tasks.Task<int> updateProcessLevelAsync(int _referralID, int _processLevel) {
            return base.Channel.updateProcessLevelAsync(_referralID, _processLevel);
        }
        
        public int getRFANewReferralIDFromRFAOldReferralID(int RFAReferralID, int DecisionID) {
            return base.Channel.getRFANewReferralIDFromRFAOldReferralID(RFAReferralID, DecisionID);
        }
        
        public System.Threading.Tasks.Task<int> getRFANewReferralIDFromRFAOldReferralIDAsync(int RFAReferralID, int DecisionID) {
            return base.Channel.getRFANewReferralIDFromRFAOldReferralIDAsync(RFAReferralID, DecisionID);
        }
        
        public int DeleteRFAReferralIDFromReferralFiles(int ReferralID, int RFAFileTypeID) {
            return base.Channel.DeleteRFAReferralIDFromReferralFiles(ReferralID, RFAFileTypeID);
        }
        
        public System.Threading.Tasks.Task<int> DeleteRFAReferralIDFromReferralFilesAsync(int ReferralID, int RFAFileTypeID) {
            return base.Channel.DeleteRFAReferralIDFromReferralFilesAsync(ReferralID, RFAFileTypeID);
        }
        
        public int addRFAAdditionalInfo(MMC.MMCService.PreparationService.RFAAdditionalInfo rfaAddiotionalInfo) {
            return base.Channel.addRFAAdditionalInfo(rfaAddiotionalInfo);
        }
        
        public System.Threading.Tasks.Task<int> addRFAAdditionalInfoAsync(MMC.MMCService.PreparationService.RFAAdditionalInfo rfaAddiotionalInfo) {
            return base.Channel.addRFAAdditionalInfoAsync(rfaAddiotionalInfo);
        }
        
        public int updateRFAAdditionalInfo(MMC.MMCService.PreparationService.RFAAdditionalInfo rfaAddiotionalInfo) {
            return base.Channel.updateRFAAdditionalInfo(rfaAddiotionalInfo);
        }
        
        public System.Threading.Tasks.Task<int> updateRFAAdditionalInfoAsync(MMC.MMCService.PreparationService.RFAAdditionalInfo rfaAddiotionalInfo) {
            return base.Channel.updateRFAAdditionalInfoAsync(rfaAddiotionalInfo);
        }
        
        public MMC.MMCService.PreparationService.PagedRFAAdditionalInfo getAllRFAAdditionalInfo(int ReferralID, int skip, int take) {
            return base.Channel.getAllRFAAdditionalInfo(ReferralID, skip, take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PreparationService.PagedRFAAdditionalInfo> getAllRFAAdditionalInfoAsync(int ReferralID, int skip, int take) {
            return base.Channel.getAllRFAAdditionalInfoAsync(ReferralID, skip, take);
        }
        
        public MMC.MMCService.PreparationService.RFAAdditionalInfo getRFAAdditionalInfoById(int id) {
            return base.Channel.getRFAAdditionalInfoById(id);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PreparationService.RFAAdditionalInfo> getRFAAdditionalInfoByIdAsync(int id) {
            return base.Channel.getRFAAdditionalInfoByIdAsync(id);
        }
        
        public int getRemainingRequest(int _referralID) {
            return base.Channel.getRemainingRequest(_referralID);
        }
        
        public System.Threading.Tasks.Task<int> getRemainingRequestAsync(int _referralID) {
            return base.Channel.getRemainingRequestAsync(_referralID);
        }
        
        public void UpdateRFAAdditionalInfoDetailByRequestID(int oldRFAReferralID, int rFARequestID) {
            base.Channel.UpdateRFAAdditionalInfoDetailByRequestID(oldRFAReferralID, rFARequestID);
        }
        
        public System.Threading.Tasks.Task UpdateRFAAdditionalInfoDetailByRequestIDAsync(int oldRFAReferralID, int rFARequestID) {
            return base.Channel.UpdateRFAAdditionalInfoDetailByRequestIDAsync(oldRFAReferralID, rFARequestID);
        }
        
        public int updateDecisionByRequestID(MMC.MMCService.PreparationService.RFARequest rfaRequest) {
            return base.Channel.updateDecisionByRequestID(rfaRequest);
        }
        
        public System.Threading.Tasks.Task<int> updateDecisionByRequestIDAsync(MMC.MMCService.PreparationService.RFARequest rfaRequest) {
            return base.Channel.updateDecisionByRequestIDAsync(rfaRequest);
        }
        
        public void AddRFITemplateRecordByRFARequestID(int _rFAReferralFileID, int _userID) {
            base.Channel.AddRFITemplateRecordByRFARequestID(_rFAReferralFileID, _userID);
        }
        
        public System.Threading.Tasks.Task AddRFITemplateRecordByRFARequestIDAsync(int _rFAReferralFileID, int _userID) {
            return base.Channel.AddRFITemplateRecordByRFARequestIDAsync(_rFAReferralFileID, _userID);
        }
        
        public void AddRFARequestTimeExtensionRecordByRFARequestID(int _rFAReferralFileID, int _userID) {
            base.Channel.AddRFARequestTimeExtensionRecordByRFARequestID(_rFAReferralFileID, _userID);
        }
        
        public System.Threading.Tasks.Task AddRFARequestTimeExtensionRecordByRFARequestIDAsync(int _rFAReferralFileID, int _userID) {
            return base.Channel.AddRFARequestTimeExtensionRecordByRFARequestIDAsync(_rFAReferralFileID, _userID);
        }
        
        public string getAcceptedBodyPartsByReferralID(int _referralID) {
            return base.Channel.getAcceptedBodyPartsByReferralID(_referralID);
        }
        
        public System.Threading.Tasks.Task<string> getAcceptedBodyPartsByReferralIDAsync(int _referralID) {
            return base.Channel.getAcceptedBodyPartsByReferralIDAsync(_referralID);
        }
        
        public string getDeniedBodyPartsByReferralID(int _referralID) {
            return base.Channel.getDeniedBodyPartsByReferralID(_referralID);
        }
        
        public System.Threading.Tasks.Task<string> getDeniedBodyPartsByReferralIDAsync(int _referralID) {
            return base.Channel.getDeniedBodyPartsByReferralIDAsync(_referralID);
        }
        
        public string getDignosisByReferralID(int _referralID) {
            return base.Channel.getDignosisByReferralID(_referralID);
        }
        
        public System.Threading.Tasks.Task<string> getDignosisByReferralIDAsync(int _referralID) {
            return base.Channel.getDignosisByReferralIDAsync(_referralID);
        }
        
        public string getDelayedBodyPartByReferralID(int _referralID) {
            return base.Channel.getDelayedBodyPartByReferralID(_referralID);
        }
        
        public System.Threading.Tasks.Task<string> getDelayedBodyPartByReferralIDAsync(int _referralID) {
            return base.Channel.getDelayedBodyPartByReferralIDAsync(_referralID);
        }
        
        public MMC.MMCService.PreparationService.PagedPatientMedicalRecordByPatientID getReferralMedicalRecordByPatientID(int _patientID, int _skip, int _take) {
            return base.Channel.getReferralMedicalRecordByPatientID(_patientID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.PreparationService.PagedPatientMedicalRecordByPatientID> getReferralMedicalRecordByPatientIDAsync(int _patientID, int _skip, int _take) {
            return base.Channel.getReferralMedicalRecordByPatientIDAsync(_patientID, _skip, _take);
        }
    }
}
