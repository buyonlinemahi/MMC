//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMC.MMCService.IMRService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedRequestIMRRecord", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedRequestIMRRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.IMRService.RequestIMRRecord[] RequestIMRRecordDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.IMRService.RequestIMRRecord[] RequestIMRRecordDetails {
            get {
                return this.RequestIMRRecordDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestIMRRecordDetailsField, value) != true)) {
                    this.RequestIMRRecordDetailsField = value;
                    this.RaisePropertyChanged("RequestIMRRecordDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestIMRRecord", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RequestIMRRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DecisionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OriginalRFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARequestedTreatmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestIMRIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DecisionDesc {
            get {
                return this.DecisionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DecisionDescField, value) != true)) {
                    this.DecisionDescField = value;
                    this.RaisePropertyChanged("DecisionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OriginalRFAReferralID {
            get {
                return this.OriginalRFAReferralIDField;
            }
            set {
                if ((this.OriginalRFAReferralIDField.Equals(value) != true)) {
                    this.OriginalRFAReferralIDField = value;
                    this.RaisePropertyChanged("OriginalRFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatFirstName {
            get {
                return this.PatFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatFirstNameField, value) != true)) {
                    this.PatFirstNameField = value;
                    this.RaisePropertyChanged("PatFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatLastName {
            get {
                return this.PatLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatLastNameField, value) != true)) {
                    this.PatLastNameField = value;
                    this.RaisePropertyChanged("PatLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessLevel {
            get {
                return this.ProcessLevelField;
            }
            set {
                if ((this.ProcessLevelField.Equals(value) != true)) {
                    this.ProcessLevelField = value;
                    this.RaisePropertyChanged("ProcessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARequestedTreatment {
            get {
                return this.RFARequestedTreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARequestedTreatmentField, value) != true)) {
                    this.RFARequestedTreatmentField = value;
                    this.RaisePropertyChanged("RFARequestedTreatment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAStatus {
            get {
                return this.RFAStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAStatusField, value) != true)) {
                    this.RFAStatusField = value;
                    this.RaisePropertyChanged("RFAStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestIMRID {
            get {
                return this.RequestIMRIDField;
            }
            set {
                if ((this.RequestIMRIDField.Equals(value) != true)) {
                    this.RequestIMRIDField = value;
                    this.RaisePropertyChanged("RequestIMRID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFAReferralFile", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFAReferralFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFAFileCreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAFileTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAFileUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralFileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAReferralFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFATypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileTypeName {
            get {
                return this.FileTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeNameField, value) != true)) {
                    this.FileTypeNameField = value;
                    this.RaisePropertyChanged("FileTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModeField, value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFAFileCreationDate {
            get {
                return this.RFAFileCreationDateField;
            }
            set {
                if ((this.RFAFileCreationDateField.Equals(value) != true)) {
                    this.RFAFileCreationDateField = value;
                    this.RaisePropertyChanged("RFAFileCreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAFileTypeID {
            get {
                return this.RFAFileTypeIDField;
            }
            set {
                if ((this.RFAFileTypeIDField.Equals(value) != true)) {
                    this.RFAFileTypeIDField = value;
                    this.RaisePropertyChanged("RFAFileTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAFileUserID {
            get {
                return this.RFAFileUserIDField;
            }
            set {
                if ((this.RFAFileUserIDField.Equals(value) != true)) {
                    this.RFAFileUserIDField = value;
                    this.RaisePropertyChanged("RFAFileUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralFileID {
            get {
                return this.RFAReferralFileIDField;
            }
            set {
                if ((this.RFAReferralFileIDField.Equals(value) != true)) {
                    this.RFAReferralFileIDField = value;
                    this.RaisePropertyChanged("RFAReferralFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAReferralFileName {
            get {
                return this.RFAReferralFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAReferralFileNameField, value) != true)) {
                    this.RFAReferralFileNameField = value;
                    this.RaisePropertyChanged("RFAReferralFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAType {
            get {
                return this.RFATypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RFATypeField, value) != true)) {
                    this.RFATypeField = value;
                    this.RaisePropertyChanged("RFAType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFAReferral", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFAReferral : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CredentialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EvaluatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EvaluationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> InternalAppealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PhysicianIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFACEDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFACETimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFADiscrepanciesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFAHCRGDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAIMRHistoryRationaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAIMRReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RFAReferralCreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RFAReferralDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFASignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFASignatureDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RFASignedByPhysicianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RFATreatmentRequestClearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Credentials {
            get {
                return this.CredentialsField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialsField, value) != true)) {
                    this.CredentialsField = value;
                    this.RaisePropertyChanged("Credentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EvaluatedBy {
            get {
                return this.EvaluatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.EvaluatedByField, value) != true)) {
                    this.EvaluatedByField = value;
                    this.RaisePropertyChanged("EvaluatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EvaluationDate {
            get {
                return this.EvaluationDateField;
            }
            set {
                if ((this.EvaluationDateField.Equals(value) != true)) {
                    this.EvaluationDateField = value;
                    this.RaisePropertyChanged("EvaluationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> InternalAppeal {
            get {
                return this.InternalAppealField;
            }
            set {
                if ((this.InternalAppealField.Equals(value) != true)) {
                    this.InternalAppealField = value;
                    this.RaisePropertyChanged("InternalAppeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PhysicianID {
            get {
                return this.PhysicianIDField;
            }
            set {
                if ((this.PhysicianIDField.Equals(value) != true)) {
                    this.PhysicianIDField = value;
                    this.RaisePropertyChanged("PhysicianID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFACEDate {
            get {
                return this.RFACEDateField;
            }
            set {
                if ((this.RFACEDateField.Equals(value) != true)) {
                    this.RFACEDateField = value;
                    this.RaisePropertyChanged("RFACEDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFACETime {
            get {
                return this.RFACETimeField;
            }
            set {
                if ((object.ReferenceEquals(this.RFACETimeField, value) != true)) {
                    this.RFACETimeField = value;
                    this.RaisePropertyChanged("RFACETime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFADiscrepancies {
            get {
                return this.RFADiscrepanciesField;
            }
            set {
                if ((object.ReferenceEquals(this.RFADiscrepanciesField, value) != true)) {
                    this.RFADiscrepanciesField = value;
                    this.RaisePropertyChanged("RFADiscrepancies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFAHCRGDate {
            get {
                return this.RFAHCRGDateField;
            }
            set {
                if ((this.RFAHCRGDateField.Equals(value) != true)) {
                    this.RFAHCRGDateField = value;
                    this.RaisePropertyChanged("RFAHCRGDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAIMRHistoryRationale {
            get {
                return this.RFAIMRHistoryRationaleField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAIMRHistoryRationaleField, value) != true)) {
                    this.RFAIMRHistoryRationaleField = value;
                    this.RaisePropertyChanged("RFAIMRHistoryRationale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAIMRReferenceNumber {
            get {
                return this.RFAIMRReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAIMRReferenceNumberField, value) != true)) {
                    this.RFAIMRReferenceNumberField = value;
                    this.RaisePropertyChanged("RFAIMRReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RFAReferralCreatedDate {
            get {
                return this.RFAReferralCreatedDateField;
            }
            set {
                if ((this.RFAReferralCreatedDateField.Equals(value) != true)) {
                    this.RFAReferralCreatedDateField = value;
                    this.RaisePropertyChanged("RFAReferralCreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RFAReferralDate {
            get {
                return this.RFAReferralDateField;
            }
            set {
                if ((this.RFAReferralDateField.Equals(value) != true)) {
                    this.RFAReferralDateField = value;
                    this.RaisePropertyChanged("RFAReferralDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFASignature {
            get {
                return this.RFASignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.RFASignatureField, value) != true)) {
                    this.RFASignatureField = value;
                    this.RaisePropertyChanged("RFASignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFASignatureDescription {
            get {
                return this.RFASignatureDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RFASignatureDescriptionField, value) != true)) {
                    this.RFASignatureDescriptionField = value;
                    this.RaisePropertyChanged("RFASignatureDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RFASignedByPhysician {
            get {
                return this.RFASignedByPhysicianField;
            }
            set {
                if ((this.RFASignedByPhysicianField.Equals(value) != true)) {
                    this.RFASignedByPhysicianField = value;
                    this.RaisePropertyChanged("RFASignedByPhysician");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RFATreatmentRequestClear {
            get {
                return this.RFATreatmentRequestClearField;
            }
            set {
                if ((this.RFATreatmentRequestClearField.Equals(value) != true)) {
                    this.RFATreatmentRequestClearField = value;
                    this.RaisePropertyChanged("RFATreatmentRequestClear");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IMRRFAReferral", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class IMRRFAReferral : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IMRApplicationReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IMRCEReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IMRDecisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IMRDecisionReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IMRInternalReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IMRNoticeInformationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IMRPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IMRRFAClaimPhysicianIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IMRRFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IMRReceivedViaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IMRResponseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IMRResponseDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IMRResponseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IMRApplicationReceivedDate {
            get {
                return this.IMRApplicationReceivedDateField;
            }
            set {
                if ((this.IMRApplicationReceivedDateField.Equals(value) != true)) {
                    this.IMRApplicationReceivedDateField = value;
                    this.RaisePropertyChanged("IMRApplicationReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IMRCEReceivedDate {
            get {
                return this.IMRCEReceivedDateField;
            }
            set {
                if ((this.IMRCEReceivedDateField.Equals(value) != true)) {
                    this.IMRCEReceivedDateField = value;
                    this.RaisePropertyChanged("IMRCEReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IMRDecisionID {
            get {
                return this.IMRDecisionIDField;
            }
            set {
                if ((this.IMRDecisionIDField.Equals(value) != true)) {
                    this.IMRDecisionIDField = value;
                    this.RaisePropertyChanged("IMRDecisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IMRDecisionReceivedDate {
            get {
                return this.IMRDecisionReceivedDateField;
            }
            set {
                if ((this.IMRDecisionReceivedDateField.Equals(value) != true)) {
                    this.IMRDecisionReceivedDateField = value;
                    this.RaisePropertyChanged("IMRDecisionReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IMRInternalReceivedDate {
            get {
                return this.IMRInternalReceivedDateField;
            }
            set {
                if ((this.IMRInternalReceivedDateField.Equals(value) != true)) {
                    this.IMRInternalReceivedDateField = value;
                    this.RaisePropertyChanged("IMRInternalReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IMRNoticeInformationDate {
            get {
                return this.IMRNoticeInformationDateField;
            }
            set {
                if ((this.IMRNoticeInformationDateField.Equals(value) != true)) {
                    this.IMRNoticeInformationDateField = value;
                    this.RaisePropertyChanged("IMRNoticeInformationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IMRPriority {
            get {
                return this.IMRPriorityField;
            }
            set {
                if ((this.IMRPriorityField.Equals(value) != true)) {
                    this.IMRPriorityField = value;
                    this.RaisePropertyChanged("IMRPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IMRRFAClaimPhysicianID {
            get {
                return this.IMRRFAClaimPhysicianIDField;
            }
            set {
                if ((this.IMRRFAClaimPhysicianIDField.Equals(value) != true)) {
                    this.IMRRFAClaimPhysicianIDField = value;
                    this.RaisePropertyChanged("IMRRFAClaimPhysicianID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IMRRFAReferralID {
            get {
                return this.IMRRFAReferralIDField;
            }
            set {
                if ((this.IMRRFAReferralIDField.Equals(value) != true)) {
                    this.IMRRFAReferralIDField = value;
                    this.RaisePropertyChanged("IMRRFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IMRReceivedVia {
            get {
                return this.IMRReceivedViaField;
            }
            set {
                if ((this.IMRReceivedViaField.Equals(value) != true)) {
                    this.IMRReceivedViaField = value;
                    this.RaisePropertyChanged("IMRReceivedVia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IMRResponseDate {
            get {
                return this.IMRResponseDateField;
            }
            set {
                if ((this.IMRResponseDateField.Equals(value) != true)) {
                    this.IMRResponseDateField = value;
                    this.RaisePropertyChanged("IMRResponseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IMRResponseDueDate {
            get {
                return this.IMRResponseDueDateField;
            }
            set {
                if ((this.IMRResponseDueDateField.Equals(value) != true)) {
                    this.IMRResponseDueDateField = value;
                    this.RaisePropertyChanged("IMRResponseDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IMRResponseType {
            get {
                return this.IMRResponseTypeField;
            }
            set {
                if ((this.IMRResponseTypeField.Equals(value) != true)) {
                    this.IMRResponseTypeField = value;
                    this.RaisePropertyChanged("IMRResponseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Physician", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Physician : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysNPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysQualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhysSpecialtyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysSpecialtyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhysStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhysZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhysicianIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysAddress1 {
            get {
                return this.PhysAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PhysAddress1Field, value) != true)) {
                    this.PhysAddress1Field = value;
                    this.RaisePropertyChanged("PhysAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysAddress2 {
            get {
                return this.PhysAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PhysAddress2Field, value) != true)) {
                    this.PhysAddress2Field = value;
                    this.RaisePropertyChanged("PhysAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysCity {
            get {
                return this.PhysCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysCityField, value) != true)) {
                    this.PhysCityField = value;
                    this.RaisePropertyChanged("PhysCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysEMail {
            get {
                return this.PhysEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysEMailField, value) != true)) {
                    this.PhysEMailField = value;
                    this.RaisePropertyChanged("PhysEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysFax {
            get {
                return this.PhysFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysFaxField, value) != true)) {
                    this.PhysFaxField = value;
                    this.RaisePropertyChanged("PhysFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysFirstName {
            get {
                return this.PhysFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysFirstNameField, value) != true)) {
                    this.PhysFirstNameField = value;
                    this.RaisePropertyChanged("PhysFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysLastName {
            get {
                return this.PhysLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysLastNameField, value) != true)) {
                    this.PhysLastNameField = value;
                    this.RaisePropertyChanged("PhysLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysNPI {
            get {
                return this.PhysNPIField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysNPIField, value) != true)) {
                    this.PhysNPIField = value;
                    this.RaisePropertyChanged("PhysNPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysNotes {
            get {
                return this.PhysNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysNotesField, value) != true)) {
                    this.PhysNotesField = value;
                    this.RaisePropertyChanged("PhysNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysPhone {
            get {
                return this.PhysPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysPhoneField, value) != true)) {
                    this.PhysPhoneField = value;
                    this.RaisePropertyChanged("PhysPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysQualification {
            get {
                return this.PhysQualificationField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysQualificationField, value) != true)) {
                    this.PhysQualificationField = value;
                    this.RaisePropertyChanged("PhysQualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhysSpecialtyId {
            get {
                return this.PhysSpecialtyIdField;
            }
            set {
                if ((this.PhysSpecialtyIdField.Equals(value) != true)) {
                    this.PhysSpecialtyIdField = value;
                    this.RaisePropertyChanged("PhysSpecialtyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysSpecialtyName {
            get {
                return this.PhysSpecialtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysSpecialtyNameField, value) != true)) {
                    this.PhysSpecialtyNameField = value;
                    this.RaisePropertyChanged("PhysSpecialtyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhysStateId {
            get {
                return this.PhysStateIdField;
            }
            set {
                if ((this.PhysStateIdField.Equals(value) != true)) {
                    this.PhysStateIdField = value;
                    this.RaisePropertyChanged("PhysStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysStateName {
            get {
                return this.PhysStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysStateNameField, value) != true)) {
                    this.PhysStateNameField = value;
                    this.RaisePropertyChanged("PhysStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhysZip {
            get {
                return this.PhysZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PhysZipField, value) != true)) {
                    this.PhysZipField = value;
                    this.RaisePropertyChanged("PhysZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhysicianId {
            get {
                return this.PhysicianIdField;
            }
            set {
                if ((this.PhysicianIdField.Equals(value) != true)) {
                    this.PhysicianIdField = value;
                    this.RaisePropertyChanged("PhysicianId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IMRDecisionReferralDetails", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class IMRDecisionReferralDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IMRDecisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IMRDecisionReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IMRRFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatClaimNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IMRDecisionID {
            get {
                return this.IMRDecisionIDField;
            }
            set {
                if ((this.IMRDecisionIDField.Equals(value) != true)) {
                    this.IMRDecisionIDField = value;
                    this.RaisePropertyChanged("IMRDecisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IMRDecisionReceivedDate {
            get {
                return this.IMRDecisionReceivedDateField;
            }
            set {
                if ((this.IMRDecisionReceivedDateField.Equals(value) != true)) {
                    this.IMRDecisionReceivedDateField = value;
                    this.RaisePropertyChanged("IMRDecisionReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IMRRFAReferralID {
            get {
                return this.IMRRFAReferralIDField;
            }
            set {
                if ((this.IMRRFAReferralIDField.Equals(value) != true)) {
                    this.IMRRFAReferralIDField = value;
                    this.RaisePropertyChanged("IMRRFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatClaimNumber {
            get {
                return this.PatClaimNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PatClaimNumberField, value) != true)) {
                    this.PatClaimNumberField = value;
                    this.RaisePropertyChanged("PatClaimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatFirstName {
            get {
                return this.PatFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatFirstNameField, value) != true)) {
                    this.PatFirstNameField = value;
                    this.RaisePropertyChanged("PatFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatLastName {
            get {
                return this.PatLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatLastNameField, value) != true)) {
                    this.PatLastNameField = value;
                    this.RaisePropertyChanged("PatLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IMRDecisionRequestDetails", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class IMRDecisionRequestDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IMRApprovedUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IMRRFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> OverturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFARequestedTreatmentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IMRApprovedUnits {
            get {
                return this.IMRApprovedUnitsField;
            }
            set {
                if ((this.IMRApprovedUnitsField.Equals(value) != true)) {
                    this.IMRApprovedUnitsField = value;
                    this.RaisePropertyChanged("IMRApprovedUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IMRRFARequestID {
            get {
                return this.IMRRFARequestIDField;
            }
            set {
                if ((this.IMRRFARequestIDField.Equals(value) != true)) {
                    this.IMRRFARequestIDField = value;
                    this.RaisePropertyChanged("IMRRFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Overturn {
            get {
                return this.OverturnField;
            }
            set {
                if ((this.OverturnField.Equals(value) != true)) {
                    this.OverturnField = value;
                    this.RaisePropertyChanged("Overturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAQuantity {
            get {
                return this.RFAQuantityField;
            }
            set {
                if ((this.RFAQuantityField.Equals(value) != true)) {
                    this.RFAQuantityField = value;
                    this.RaisePropertyChanged("RFAQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFARequestedTreatment {
            get {
                return this.RFARequestedTreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.RFARequestedTreatmentField, value) != true)) {
                    this.RFARequestedTreatmentField = value;
                    this.RaisePropertyChanged("RFARequestedTreatment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IMRRFARequest", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class IMRRFARequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IMRApprovedUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IMRRFARequestIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> OverturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFARequestIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IMRApprovedUnits {
            get {
                return this.IMRApprovedUnitsField;
            }
            set {
                if ((this.IMRApprovedUnitsField.Equals(value) != true)) {
                    this.IMRApprovedUnitsField = value;
                    this.RaisePropertyChanged("IMRApprovedUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IMRRFARequestID {
            get {
                return this.IMRRFARequestIDField;
            }
            set {
                if ((this.IMRRFARequestIDField.Equals(value) != true)) {
                    this.IMRRFARequestIDField = value;
                    this.RaisePropertyChanged("IMRRFARequestID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Overturn {
            get {
                return this.OverturnField;
            }
            set {
                if ((this.OverturnField.Equals(value) != true)) {
                    this.OverturnField = value;
                    this.RaisePropertyChanged("Overturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFARequestID {
            get {
                return this.RFARequestIDField;
            }
            set {
                if ((this.RFARequestIDField.Equals(value) != true)) {
                    this.RFARequestIDField = value;
                    this.RaisePropertyChanged("RFARequestID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IMRDecision", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class IMRDecision : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IMRDecisionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IMRDecisionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IMRDecisionDesc {
            get {
                return this.IMRDecisionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.IMRDecisionDescField, value) != true)) {
                    this.IMRDecisionDescField = value;
                    this.RaisePropertyChanged("IMRDecisionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IMRDecisionID {
            get {
                return this.IMRDecisionIDField;
            }
            set {
                if ((this.IMRDecisionIDField.Equals(value) != true)) {
                    this.IMRDecisionIDField = value;
                    this.RaisePropertyChanged("IMRDecisionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MMCService.IMRService.IIMRService")]
    public interface IIMRService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getRequestIMRRecordAll", ReplyAction="http://tempuri.org/IIMRService/getRequestIMRRecordAllResponse")]
        MMC.MMCService.IMRService.PagedRequestIMRRecord getRequestIMRRecordAll(int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getRequestIMRRecordAll", ReplyAction="http://tempuri.org/IIMRService/getRequestIMRRecordAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IMRService.PagedRequestIMRRecord> getRequestIMRRecordAllAsync(int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getRequestIMRRecordByPatientClaim", ReplyAction="http://tempuri.org/IIMRService/getRequestIMRRecordByPatientClaimResponse")]
        MMC.MMCService.IMRService.PagedRequestIMRRecord getRequestIMRRecordByPatientClaim(string _searchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getRequestIMRRecordByPatientClaim", ReplyAction="http://tempuri.org/IIMRService/getRequestIMRRecordByPatientClaimResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IMRService.PagedRequestIMRRecord> getRequestIMRRecordByPatientClaimAsync(string _searchText, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/SaveRequestIMRRecord", ReplyAction="http://tempuri.org/IIMRService/SaveRequestIMRRecordResponse")]
        void SaveRequestIMRRecord(string[] _arrRequestID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/SaveRequestIMRRecord", ReplyAction="http://tempuri.org/IIMRService/SaveRequestIMRRecordResponse")]
        System.Threading.Tasks.Task SaveRequestIMRRecordAsync(string[] _arrRequestID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getMedicalAndLegalDocsByReferralID", ReplyAction="http://tempuri.org/IIMRService/getMedicalAndLegalDocsByReferralIDResponse")]
        MMC.MMCService.IMRService.RFAReferralFile[] getMedicalAndLegalDocsByReferralID(int ReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getMedicalAndLegalDocsByReferralID", ReplyAction="http://tempuri.org/IIMRService/getMedicalAndLegalDocsByReferralIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IMRService.RFAReferralFile[]> getMedicalAndLegalDocsByReferralIDAsync(int ReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/UpdateRFAIMRReferenceNumberByReferralID", ReplyAction="http://tempuri.org/IIMRService/UpdateRFAIMRReferenceNumberByReferralIDResponse")]
        int UpdateRFAIMRReferenceNumberByReferralID(MMC.MMCService.IMRService.RFAReferral _rFAReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/UpdateRFAIMRReferenceNumberByReferralID", ReplyAction="http://tempuri.org/IIMRService/UpdateRFAIMRReferenceNumberByReferralIDResponse")]
        System.Threading.Tasks.Task<int> UpdateRFAIMRReferenceNumberByReferralIDAsync(MMC.MMCService.IMRService.RFAReferral _rFAReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/UpdateRFAIMRHistoryRationaleByReferralID", ReplyAction="http://tempuri.org/IIMRService/UpdateRFAIMRHistoryRationaleByReferralIDResponse")]
        int UpdateRFAIMRHistoryRationaleByReferralID(MMC.MMCService.IMRService.RFAReferral _rFAReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/UpdateRFAIMRHistoryRationaleByReferralID", ReplyAction="http://tempuri.org/IIMRService/UpdateRFAIMRHistoryRationaleByReferralIDResponse")]
        System.Threading.Tasks.Task<int> UpdateRFAIMRHistoryRationaleByReferralIDAsync(MMC.MMCService.IMRService.RFAReferral _rFAReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/addIMRRFAReferral", ReplyAction="http://tempuri.org/IIMRService/addIMRRFAReferralResponse")]
        int addIMRRFAReferral(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/addIMRRFAReferral", ReplyAction="http://tempuri.org/IIMRService/addIMRRFAReferralResponse")]
        System.Threading.Tasks.Task<int> addIMRRFAReferralAsync(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/updateIMRRFAReferral", ReplyAction="http://tempuri.org/IIMRService/updateIMRRFAReferralResponse")]
        int updateIMRRFAReferral(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/updateIMRRFAReferral", ReplyAction="http://tempuri.org/IIMRService/updateIMRRFAReferralResponse")]
        System.Threading.Tasks.Task<int> updateIMRRFAReferralAsync(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/deleteIMRRFAReferral", ReplyAction="http://tempuri.org/IIMRService/deleteIMRRFAReferralResponse")]
        void deleteIMRRFAReferral(int _IMRRFAReferralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/deleteIMRRFAReferral", ReplyAction="http://tempuri.org/IIMRService/deleteIMRRFAReferralResponse")]
        System.Threading.Tasks.Task deleteIMRRFAReferralAsync(int _IMRRFAReferralId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getIMRRFAReferralByRefID", ReplyAction="http://tempuri.org/IIMRService/getIMRRFAReferralByRefIDResponse")]
        MMC.MMCService.IMRService.IMRRFAReferral getIMRRFAReferralByRefID(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getIMRRFAReferralByRefID", ReplyAction="http://tempuri.org/IIMRService/getIMRRFAReferralByRefIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IMRService.IMRRFAReferral> getIMRRFAReferralByRefIDAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getPhysicianByReferralID", ReplyAction="http://tempuri.org/IIMRService/getPhysicianByReferralIDResponse")]
        MMC.MMCService.IMRService.Physician[] getPhysicianByReferralID(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getPhysicianByReferralID", ReplyAction="http://tempuri.org/IIMRService/getPhysicianByReferralIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IMRService.Physician[]> getPhysicianByReferralIDAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/GetIMRLetters", ReplyAction="http://tempuri.org/IIMRService/GetIMRLettersResponse")]
        MMC.MMCService.IMRService.RFAReferralFile[] GetIMRLetters(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/GetIMRLetters", ReplyAction="http://tempuri.org/IIMRService/GetIMRLettersResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IMRService.RFAReferralFile[]> GetIMRLettersAsync(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getIMRDecisionPageDetailsByReferralID", ReplyAction="http://tempuri.org/IIMRService/getIMRDecisionPageDetailsByReferralIDResponse")]
        MMC.MMCService.IMRService.IMRDecisionReferralDetails getIMRDecisionPageDetailsByReferralID(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getIMRDecisionPageDetailsByReferralID", ReplyAction="http://tempuri.org/IIMRService/getIMRDecisionPageDetailsByReferralIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IMRService.IMRDecisionReferralDetails> getIMRDecisionPageDetailsByReferralIDAsync(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getIMRDecisionPageRequestDetailsByReferralID", ReplyAction="http://tempuri.org/IIMRService/getIMRDecisionPageRequestDetailsByReferralIDRespon" +
            "se")]
        MMC.MMCService.IMRService.IMRDecisionRequestDetails[] getIMRDecisionPageRequestDetailsByReferralID(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getIMRDecisionPageRequestDetailsByReferralID", ReplyAction="http://tempuri.org/IIMRService/getIMRDecisionPageRequestDetailsByReferralIDRespon" +
            "se")]
        System.Threading.Tasks.Task<MMC.MMCService.IMRService.IMRDecisionRequestDetails[]> getIMRDecisionPageRequestDetailsByReferralIDAsync(int RFAReferralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/updateIMRRFAReferralByValues", ReplyAction="http://tempuri.org/IIMRService/updateIMRRFAReferralByValuesResponse")]
        int updateIMRRFAReferralByValues(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/updateIMRRFAReferralByValues", ReplyAction="http://tempuri.org/IIMRService/updateIMRRFAReferralByValuesResponse")]
        System.Threading.Tasks.Task<int> updateIMRRFAReferralByValuesAsync(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/addIMRDecisionRequestDetail", ReplyAction="http://tempuri.org/IIMRService/addIMRDecisionRequestDetailResponse")]
        int addIMRDecisionRequestDetail(MMC.MMCService.IMRService.IMRRFARequest[] _IMRRFARequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/addIMRDecisionRequestDetail", ReplyAction="http://tempuri.org/IIMRService/addIMRDecisionRequestDetailResponse")]
        System.Threading.Tasks.Task<int> addIMRDecisionRequestDetailAsync(MMC.MMCService.IMRService.IMRRFARequest[] _IMRRFARequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/updateIMRDecisionRequestDetail", ReplyAction="http://tempuri.org/IIMRService/updateIMRDecisionRequestDetailResponse")]
        int updateIMRDecisionRequestDetail(MMC.MMCService.IMRService.IMRRFARequest _IMRRFARequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/updateIMRDecisionRequestDetail", ReplyAction="http://tempuri.org/IIMRService/updateIMRDecisionRequestDetailResponse")]
        System.Threading.Tasks.Task<int> updateIMRDecisionRequestDetailAsync(MMC.MMCService.IMRService.IMRRFARequest _IMRRFARequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getIMRDecisionList", ReplyAction="http://tempuri.org/IIMRService/getIMRDecisionListResponse")]
        MMC.MMCService.IMRService.IMRDecision[] getIMRDecisionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIMRService/getIMRDecisionList", ReplyAction="http://tempuri.org/IIMRService/getIMRDecisionListResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.IMRService.IMRDecision[]> getIMRDecisionListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIMRServiceChannel : MMC.MMCService.IMRService.IIMRService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IMRServiceClient : System.ServiceModel.ClientBase<MMC.MMCService.IMRService.IIMRService>, MMC.MMCService.IMRService.IIMRService {
        
        public IMRServiceClient() {
        }
        
        public IMRServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IMRServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IMRServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IMRServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MMC.MMCService.IMRService.PagedRequestIMRRecord getRequestIMRRecordAll(int _skip, int _take) {
            return base.Channel.getRequestIMRRecordAll(_skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IMRService.PagedRequestIMRRecord> getRequestIMRRecordAllAsync(int _skip, int _take) {
            return base.Channel.getRequestIMRRecordAllAsync(_skip, _take);
        }
        
        public MMC.MMCService.IMRService.PagedRequestIMRRecord getRequestIMRRecordByPatientClaim(string _searchText, int _skip, int _take) {
            return base.Channel.getRequestIMRRecordByPatientClaim(_searchText, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IMRService.PagedRequestIMRRecord> getRequestIMRRecordByPatientClaimAsync(string _searchText, int _skip, int _take) {
            return base.Channel.getRequestIMRRecordByPatientClaimAsync(_searchText, _skip, _take);
        }
        
        public void SaveRequestIMRRecord(string[] _arrRequestID, int UserID) {
            base.Channel.SaveRequestIMRRecord(_arrRequestID, UserID);
        }
        
        public System.Threading.Tasks.Task SaveRequestIMRRecordAsync(string[] _arrRequestID, int UserID) {
            return base.Channel.SaveRequestIMRRecordAsync(_arrRequestID, UserID);
        }
        
        public MMC.MMCService.IMRService.RFAReferralFile[] getMedicalAndLegalDocsByReferralID(int ReferralID) {
            return base.Channel.getMedicalAndLegalDocsByReferralID(ReferralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IMRService.RFAReferralFile[]> getMedicalAndLegalDocsByReferralIDAsync(int ReferralID) {
            return base.Channel.getMedicalAndLegalDocsByReferralIDAsync(ReferralID);
        }
        
        public int UpdateRFAIMRReferenceNumberByReferralID(MMC.MMCService.IMRService.RFAReferral _rFAReferral) {
            return base.Channel.UpdateRFAIMRReferenceNumberByReferralID(_rFAReferral);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRFAIMRReferenceNumberByReferralIDAsync(MMC.MMCService.IMRService.RFAReferral _rFAReferral) {
            return base.Channel.UpdateRFAIMRReferenceNumberByReferralIDAsync(_rFAReferral);
        }
        
        public int UpdateRFAIMRHistoryRationaleByReferralID(MMC.MMCService.IMRService.RFAReferral _rFAReferral) {
            return base.Channel.UpdateRFAIMRHistoryRationaleByReferralID(_rFAReferral);
        }
        
        public System.Threading.Tasks.Task<int> UpdateRFAIMRHistoryRationaleByReferralIDAsync(MMC.MMCService.IMRService.RFAReferral _rFAReferral) {
            return base.Channel.UpdateRFAIMRHistoryRationaleByReferralIDAsync(_rFAReferral);
        }
        
        public int addIMRRFAReferral(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral) {
            return base.Channel.addIMRRFAReferral(_IMRRFAReferral);
        }
        
        public System.Threading.Tasks.Task<int> addIMRRFAReferralAsync(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral) {
            return base.Channel.addIMRRFAReferralAsync(_IMRRFAReferral);
        }
        
        public int updateIMRRFAReferral(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral) {
            return base.Channel.updateIMRRFAReferral(_IMRRFAReferral);
        }
        
        public System.Threading.Tasks.Task<int> updateIMRRFAReferralAsync(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral) {
            return base.Channel.updateIMRRFAReferralAsync(_IMRRFAReferral);
        }
        
        public void deleteIMRRFAReferral(int _IMRRFAReferralId) {
            base.Channel.deleteIMRRFAReferral(_IMRRFAReferralId);
        }
        
        public System.Threading.Tasks.Task deleteIMRRFAReferralAsync(int _IMRRFAReferralId) {
            return base.Channel.deleteIMRRFAReferralAsync(_IMRRFAReferralId);
        }
        
        public MMC.MMCService.IMRService.IMRRFAReferral getIMRRFAReferralByRefID(int _referralID) {
            return base.Channel.getIMRRFAReferralByRefID(_referralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IMRService.IMRRFAReferral> getIMRRFAReferralByRefIDAsync(int _referralID) {
            return base.Channel.getIMRRFAReferralByRefIDAsync(_referralID);
        }
        
        public MMC.MMCService.IMRService.Physician[] getPhysicianByReferralID(int _referralID) {
            return base.Channel.getPhysicianByReferralID(_referralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IMRService.Physician[]> getPhysicianByReferralIDAsync(int _referralID) {
            return base.Channel.getPhysicianByReferralIDAsync(_referralID);
        }
        
        public MMC.MMCService.IMRService.RFAReferralFile[] GetIMRLetters(int RFAReferralID) {
            return base.Channel.GetIMRLetters(RFAReferralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IMRService.RFAReferralFile[]> GetIMRLettersAsync(int RFAReferralID) {
            return base.Channel.GetIMRLettersAsync(RFAReferralID);
        }
        
        public MMC.MMCService.IMRService.IMRDecisionReferralDetails getIMRDecisionPageDetailsByReferralID(int RFAReferralID) {
            return base.Channel.getIMRDecisionPageDetailsByReferralID(RFAReferralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IMRService.IMRDecisionReferralDetails> getIMRDecisionPageDetailsByReferralIDAsync(int RFAReferralID) {
            return base.Channel.getIMRDecisionPageDetailsByReferralIDAsync(RFAReferralID);
        }
        
        public MMC.MMCService.IMRService.IMRDecisionRequestDetails[] getIMRDecisionPageRequestDetailsByReferralID(int RFAReferralID) {
            return base.Channel.getIMRDecisionPageRequestDetailsByReferralID(RFAReferralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IMRService.IMRDecisionRequestDetails[]> getIMRDecisionPageRequestDetailsByReferralIDAsync(int RFAReferralID) {
            return base.Channel.getIMRDecisionPageRequestDetailsByReferralIDAsync(RFAReferralID);
        }
        
        public int updateIMRRFAReferralByValues(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral) {
            return base.Channel.updateIMRRFAReferralByValues(_IMRRFAReferral);
        }
        
        public System.Threading.Tasks.Task<int> updateIMRRFAReferralByValuesAsync(MMC.MMCService.IMRService.IMRRFAReferral _IMRRFAReferral) {
            return base.Channel.updateIMRRFAReferralByValuesAsync(_IMRRFAReferral);
        }
        
        public int addIMRDecisionRequestDetail(MMC.MMCService.IMRService.IMRRFARequest[] _IMRRFARequest) {
            return base.Channel.addIMRDecisionRequestDetail(_IMRRFARequest);
        }
        
        public System.Threading.Tasks.Task<int> addIMRDecisionRequestDetailAsync(MMC.MMCService.IMRService.IMRRFARequest[] _IMRRFARequest) {
            return base.Channel.addIMRDecisionRequestDetailAsync(_IMRRFARequest);
        }
        
        public int updateIMRDecisionRequestDetail(MMC.MMCService.IMRService.IMRRFARequest _IMRRFARequest) {
            return base.Channel.updateIMRDecisionRequestDetail(_IMRRFARequest);
        }
        
        public System.Threading.Tasks.Task<int> updateIMRDecisionRequestDetailAsync(MMC.MMCService.IMRService.IMRRFARequest _IMRRFARequest) {
            return base.Channel.updateIMRDecisionRequestDetailAsync(_IMRRFARequest);
        }
        
        public MMC.MMCService.IMRService.IMRDecision[] getIMRDecisionList() {
            return base.Channel.getIMRDecisionList();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.IMRService.IMRDecision[]> getIMRDecisionListAsync() {
            return base.Channel.getIMRDecisionListAsync();
        }
    }
}
