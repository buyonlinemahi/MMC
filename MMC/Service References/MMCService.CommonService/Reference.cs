//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMC.MMCService.CommonService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttorneyFirmType", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class AttorneyFirmType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttorneyFirmTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttorneyFirmTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttorneyFirmTypeID {
            get {
                return this.AttorneyFirmTypeIDField;
            }
            set {
                if ((this.AttorneyFirmTypeIDField.Equals(value) != true)) {
                    this.AttorneyFirmTypeIDField = value;
                    this.RaisePropertyChanged("AttorneyFirmTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttorneyFirmTypeName {
            get {
                return this.AttorneyFirmTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttorneyFirmTypeNameField, value) != true)) {
                    this.AttorneyFirmTypeNameField = value;
                    this.RaisePropertyChanged("AttorneyFirmTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Language", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Language : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="State", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class State : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Status : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Specialty", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class Specialty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpecialtyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialtyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpecialtyID {
            get {
                return this.SpecialtyIDField;
            }
            set {
                if ((this.SpecialtyIDField.Equals(value) != true)) {
                    this.SpecialtyIDField = value;
                    this.RaisePropertyChanged("SpecialtyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialtyName {
            get {
                return this.SpecialtyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialtyNameField, value) != true)) {
                    this.SpecialtyNameField = value;
                    this.RaisePropertyChanged("SpecialtyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrentMedicalCondition", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class CurrentMedicalCondition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentMedicalConditionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentMedicalConditionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentMedicalConditionId {
            get {
                return this.CurrentMedicalConditionIdField;
            }
            set {
                if ((this.CurrentMedicalConditionIdField.Equals(value) != true)) {
                    this.CurrentMedicalConditionIdField = value;
                    this.RaisePropertyChanged("CurrentMedicalConditionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentMedicalConditionName {
            get {
                return this.CurrentMedicalConditionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentMedicalConditionNameField, value) != true)) {
                    this.CurrentMedicalConditionNameField = value;
                    this.RaisePropertyChanged("CurrentMedicalConditionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BodyPart", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class BodyPart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BodyPartIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyPartNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BodyPartID {
            get {
                return this.BodyPartIDField;
            }
            set {
                if ((this.BodyPartIDField.Equals(value) != true)) {
                    this.BodyPartIDField = value;
                    this.RaisePropertyChanged("BodyPartID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BodyPartName {
            get {
                return this.BodyPartNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyPartNameField, value) != true)) {
                    this.BodyPartNameField = value;
                    this.RaisePropertyChanged("BodyPartName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ICD9Code", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ICD9Code : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICD9DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICD9TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string icdICD9NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int icdICD9NumberIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD9Description {
            get {
                return this.ICD9DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ICD9DescriptionField, value) != true)) {
                    this.ICD9DescriptionField = value;
                    this.RaisePropertyChanged("ICD9Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD9Type {
            get {
                return this.ICD9TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ICD9TypeField, value) != true)) {
                    this.ICD9TypeField = value;
                    this.RaisePropertyChanged("ICD9Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icdICD9Number {
            get {
                return this.icdICD9NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.icdICD9NumberField, value) != true)) {
                    this.icdICD9NumberField = value;
                    this.RaisePropertyChanged("icdICD9Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int icdICD9NumberID {
            get {
                return this.icdICD9NumberIDField;
            }
            set {
                if ((this.icdICD9NumberIDField.Equals(value) != true)) {
                    this.icdICD9NumberIDField = value;
                    this.RaisePropertyChanged("icdICD9NumberID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedICD9Code", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedICD9Code : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.CommonService.ICD9Code[] ICD9CodeDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.CommonService.ICD9Code[] ICD9CodeDetails {
            get {
                return this.ICD9CodeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ICD9CodeDetailsField, value) != true)) {
                    this.ICD9CodeDetailsField = value;
                    this.RaisePropertyChanged("ICD9CodeDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ICD10Code", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ICD10Code : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICD10DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICD10TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string icdICD10NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int icdICD10NumberIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD10Description {
            get {
                return this.ICD10DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ICD10DescriptionField, value) != true)) {
                    this.ICD10DescriptionField = value;
                    this.RaisePropertyChanged("ICD10Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICD10Type {
            get {
                return this.ICD10TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ICD10TypeField, value) != true)) {
                    this.ICD10TypeField = value;
                    this.RaisePropertyChanged("ICD10Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icdICD10Number {
            get {
                return this.icdICD10NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.icdICD10NumberField, value) != true)) {
                    this.icdICD10NumberField = value;
                    this.RaisePropertyChanged("icdICD10Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int icdICD10NumberID {
            get {
                return this.icdICD10NumberIDField;
            }
            set {
                if ((this.icdICD10NumberIDField.Equals(value) != true)) {
                    this.icdICD10NumberIDField = value;
                    this.RaisePropertyChanged("icdICD10NumberID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedICDCode", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedICDCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.CommonService.ICDCode[] ICDCodeDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.CommonService.ICDCode[] ICDCodeDetails {
            get {
                return this.ICDCodeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ICDCodeDetailsField, value) != true)) {
                    this.ICDCodeDetailsField = value;
                    this.RaisePropertyChanged("ICDCodeDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ICDCode", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ICDCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ICDTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string icdICDNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int icdICDNumberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string icdICDTabField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICDDescription {
            get {
                return this.ICDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ICDDescriptionField, value) != true)) {
                    this.ICDDescriptionField = value;
                    this.RaisePropertyChanged("ICDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICDType {
            get {
                return this.ICDTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ICDTypeField, value) != true)) {
                    this.ICDTypeField = value;
                    this.RaisePropertyChanged("ICDType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icdICDNumber {
            get {
                return this.icdICDNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.icdICDNumberField, value) != true)) {
                    this.icdICDNumberField = value;
                    this.RaisePropertyChanged("icdICDNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int icdICDNumberID {
            get {
                return this.icdICDNumberIDField;
            }
            set {
                if ((this.icdICDNumberIDField.Equals(value) != true)) {
                    this.icdICDNumberIDField = value;
                    this.RaisePropertyChanged("icdICDNumberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icdICDTab {
            get {
                return this.icdICDTabField;
            }
            set {
                if ((object.ReferenceEquals(this.icdICDTabField, value) != true)) {
                    this.icdICDTabField = value;
                    this.RaisePropertyChanged("icdICDTab");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClaimStatus", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClaimStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaimStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimStatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimStatusID {
            get {
                return this.ClaimStatusIDField;
            }
            set {
                if ((this.ClaimStatusIDField.Equals(value) != true)) {
                    this.ClaimStatusIDField = value;
                    this.RaisePropertyChanged("ClaimStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimStatusName {
            get {
                return this.ClaimStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimStatusNameField, value) != true)) {
                    this.ClaimStatusNameField = value;
                    this.RaisePropertyChanged("ClaimStatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BodyPartStatus", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class BodyPartStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BodyPartStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyPartStatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BodyPartStatusID {
            get {
                return this.BodyPartStatusIDField;
            }
            set {
                if ((this.BodyPartStatusIDField.Equals(value) != true)) {
                    this.BodyPartStatusIDField = value;
                    this.RaisePropertyChanged("BodyPartStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BodyPartStatusName {
            get {
                return this.BodyPartStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyPartStatusNameField, value) != true)) {
                    this.BodyPartStatusNameField = value;
                    this.RaisePropertyChanged("BodyPartStatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FrequencyType", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class FrequencyType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FrequencyTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrequencyTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FrequencyTypeID {
            get {
                return this.FrequencyTypeIDField;
            }
            set {
                if ((this.FrequencyTypeIDField.Equals(value) != true)) {
                    this.FrequencyTypeIDField = value;
                    this.RaisePropertyChanged("FrequencyTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrequencyTypeName {
            get {
                return this.FrequencyTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyTypeNameField, value) != true)) {
                    this.FrequencyTypeNameField = value;
                    this.RaisePropertyChanged("FrequencyTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DurationType", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class DurationType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DurationTypeID {
            get {
                return this.DurationTypeIDField;
            }
            set {
                if ((this.DurationTypeIDField.Equals(value) != true)) {
                    this.DurationTypeIDField = value;
                    this.RaisePropertyChanged("DurationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationTypeName {
            get {
                return this.DurationTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationTypeNameField, value) != true)) {
                    this.DurationTypeNameField = value;
                    this.RaisePropertyChanged("DurationTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestType", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RequestType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestTypeDesc {
            get {
                return this.RequestTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestTypeDescField, value) != true)) {
                    this.RequestTypeDescField = value;
                    this.RaisePropertyChanged("RequestTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestTypeID {
            get {
                return this.RequestTypeIDField;
            }
            set {
                if ((this.RequestTypeIDField.Equals(value) != true)) {
                    this.RequestTypeIDField = value;
                    this.RaisePropertyChanged("RequestTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestTypeName {
            get {
                return this.RequestTypeNameField;
            }
            set {
                if ((this.RequestTypeNameField.Equals(value) != true)) {
                    this.RequestTypeNameField = value;
                    this.RaisePropertyChanged("RequestTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentCategory", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentCategoryName {
            get {
                return this.TreatmentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentCategoryNameField, value) != true)) {
                    this.TreatmentCategoryNameField = value;
                    this.RaisePropertyChanged("TreatmentCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreatmentType", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class TreatmentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EstCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RFARequestBillingAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RFARequestBillingMDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RFARequestBillingPRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RFARequestBillingRNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentDescNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TreatmentMDRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreatmentTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TreatmentTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EstCost {
            get {
                return this.EstCostField;
            }
            set {
                if ((this.EstCostField.Equals(value) != true)) {
                    this.EstCostField = value;
                    this.RaisePropertyChanged("EstCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RFARequestBillingAdmin {
            get {
                return this.RFARequestBillingAdminField;
            }
            set {
                if ((this.RFARequestBillingAdminField.Equals(value) != true)) {
                    this.RFARequestBillingAdminField = value;
                    this.RaisePropertyChanged("RFARequestBillingAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RFARequestBillingMD {
            get {
                return this.RFARequestBillingMDField;
            }
            set {
                if ((this.RFARequestBillingMDField.Equals(value) != true)) {
                    this.RFARequestBillingMDField = value;
                    this.RaisePropertyChanged("RFARequestBillingMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RFARequestBillingPR {
            get {
                return this.RFARequestBillingPRField;
            }
            set {
                if ((this.RFARequestBillingPRField.Equals(value) != true)) {
                    this.RFARequestBillingPRField = value;
                    this.RaisePropertyChanged("RFARequestBillingPR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RFARequestBillingRN {
            get {
                return this.RFARequestBillingRNField;
            }
            set {
                if ((this.RFARequestBillingRNField.Equals(value) != true)) {
                    this.RFARequestBillingRNField = value;
                    this.RaisePropertyChanged("RFARequestBillingRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentCategoryID {
            get {
                return this.TreatmentCategoryIDField;
            }
            set {
                if ((this.TreatmentCategoryIDField.Equals(value) != true)) {
                    this.TreatmentCategoryIDField = value;
                    this.RaisePropertyChanged("TreatmentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentDescNumber {
            get {
                return this.TreatmentDescNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentDescNumberField, value) != true)) {
                    this.TreatmentDescNumberField = value;
                    this.RaisePropertyChanged("TreatmentDescNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TreatmentMDRequired {
            get {
                return this.TreatmentMDRequiredField;
            }
            set {
                if ((this.TreatmentMDRequiredField.Equals(value) != true)) {
                    this.TreatmentMDRequiredField = value;
                    this.RaisePropertyChanged("TreatmentMDRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreatmentTypeDesc {
            get {
                return this.TreatmentTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentTypeDescField, value) != true)) {
                    this.TreatmentTypeDescField = value;
                    this.RaisePropertyChanged("TreatmentTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TreatmentTypeID {
            get {
                return this.TreatmentTypeIDField;
            }
            set {
                if ((this.TreatmentTypeIDField.Equals(value) != true)) {
                    this.TreatmentTypeIDField = value;
                    this.RaisePropertyChanged("TreatmentTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentCategory", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class DocumentCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentCategoryID {
            get {
                return this.DocumentCategoryIDField;
            }
            set {
                if ((this.DocumentCategoryIDField.Equals(value) != true)) {
                    this.DocumentCategoryIDField = value;
                    this.RaisePropertyChanged("DocumentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentCategoryName {
            get {
                return this.DocumentCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentCategoryNameField, value) != true)) {
                    this.DocumentCategoryNameField = value;
                    this.RaisePropertyChanged("DocumentCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentType", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class DocumentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentCategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentCategoryID {
            get {
                return this.DocumentCategoryIDField;
            }
            set {
                if ((this.DocumentCategoryIDField.Equals(value) != true)) {
                    this.DocumentCategoryIDField = value;
                    this.RaisePropertyChanged("DocumentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentTypeDesc {
            get {
                return this.DocumentTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeDescField, value) != true)) {
                    this.DocumentTypeDescField = value;
                    this.RaisePropertyChanged("DocumentTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RFAProcessLevels", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class RFAProcessLevels : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAProcessLevelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessLevel {
            get {
                return this.ProcessLevelField;
            }
            set {
                if ((this.ProcessLevelField.Equals(value) != true)) {
                    this.ProcessLevelField = value;
                    this.RaisePropertyChanged("ProcessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAProcessLevelID {
            get {
                return this.RFAProcessLevelIDField;
            }
            set {
                if ((this.RFAProcessLevelIDField.Equals(value) != true)) {
                    this.RFAProcessLevelIDField = value;
                    this.RaisePropertyChanged("RFAProcessLevelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageModel", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class StorageModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FolderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimID {
            get {
                return this.ClaimIDField;
            }
            set {
                if ((this.ClaimIDField.Equals(value) != true)) {
                    this.ClaimIDField = value;
                    this.RaisePropertyChanged("ClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FolderName {
            get {
                return this.FolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderNameField, value) != true)) {
                    this.FolderNameField = value;
                    this.RaisePropertyChanged("FolderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferralID {
            get {
                return this.ReferralIDField;
            }
            set {
                if ((this.ReferralIDField.Equals(value) != true)) {
                    this.ReferralIDField = value;
                    this.RaisePropertyChanged("ReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string path {
            get {
                return this.pathField;
            }
            set {
                if ((object.ReferenceEquals(this.pathField, value) != true)) {
                    this.pathField = value;
                    this.RaisePropertyChanged("path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedAdditionalDocument", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedAdditionalDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MMC.MMCService.CommonService.AdditionalDocument[] AdditionalDocumentDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MMC.MMCService.CommonService.AdditionalDocument[] AdditionalDocumentDetails {
            get {
                return this.AdditionalDocumentDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalDocumentDetailsField, value) != true)) {
                    this.AdditionalDocumentDetailsField = value;
                    this.RaisePropertyChanged("AdditionalDocumentDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdditionalDocument", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class AdditionalDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientClaimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RFAFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFAReferralIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileID {
            get {
                return this.FileIDField;
            }
            set {
                if ((this.FileIDField.Equals(value) != true)) {
                    this.FileIDField = value;
                    this.RaisePropertyChanged("FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientClaimID {
            get {
                return this.PatientClaimIDField;
            }
            set {
                if ((this.PatientClaimIDField.Equals(value) != true)) {
                    this.PatientClaimIDField = value;
                    this.RaisePropertyChanged("PatientClaimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RFAFileName {
            get {
                return this.RFAFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RFAFileNameField, value) != true)) {
                    this.RFAFileNameField = value;
                    this.RaisePropertyChanged("RFAFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFAReferralID {
            get {
                return this.RFAReferralIDField;
            }
            set {
                if ((this.RFAReferralIDField.Equals(value) != true)) {
                    this.RFAReferralIDField = value;
                    this.RaisePropertyChanged("RFAReferralID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoOfReferralCount", Namespace="http://schemas.datacontract.org/2004/07/MMCService.DTO")]
    [System.SerializableAttribute()]
    public partial class NoOfReferralCount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BillingCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClinicalAuditCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClinicalTriageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IMRCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntakeCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NotificationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeerReviewCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PreparationCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BillingCount {
            get {
                return this.BillingCountField;
            }
            set {
                if ((this.BillingCountField.Equals(value) != true)) {
                    this.BillingCountField = value;
                    this.RaisePropertyChanged("BillingCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClinicalAuditCount {
            get {
                return this.ClinicalAuditCountField;
            }
            set {
                if ((this.ClinicalAuditCountField.Equals(value) != true)) {
                    this.ClinicalAuditCountField = value;
                    this.RaisePropertyChanged("ClinicalAuditCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClinicalTriageCount {
            get {
                return this.ClinicalTriageCountField;
            }
            set {
                if ((this.ClinicalTriageCountField.Equals(value) != true)) {
                    this.ClinicalTriageCountField = value;
                    this.RaisePropertyChanged("ClinicalTriageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IMRCount {
            get {
                return this.IMRCountField;
            }
            set {
                if ((this.IMRCountField.Equals(value) != true)) {
                    this.IMRCountField = value;
                    this.RaisePropertyChanged("IMRCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntakeCount {
            get {
                return this.IntakeCountField;
            }
            set {
                if ((this.IntakeCountField.Equals(value) != true)) {
                    this.IntakeCountField = value;
                    this.RaisePropertyChanged("IntakeCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NotificationCount {
            get {
                return this.NotificationCountField;
            }
            set {
                if ((this.NotificationCountField.Equals(value) != true)) {
                    this.NotificationCountField = value;
                    this.RaisePropertyChanged("NotificationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeerReviewCount {
            get {
                return this.PeerReviewCountField;
            }
            set {
                if ((this.PeerReviewCountField.Equals(value) != true)) {
                    this.PeerReviewCountField = value;
                    this.RaisePropertyChanged("PeerReviewCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PreparationCount {
            get {
                return this.PreparationCountField;
            }
            set {
                if ((this.PreparationCountField.Equals(value) != true)) {
                    this.PreparationCountField = value;
                    this.RaisePropertyChanged("PreparationCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MMCService.CommonService.ICommonService")]
    public interface ICommonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAttorneyFirmTypeAll", ReplyAction="http://tempuri.org/ICommonService/getAttorneyFirmTypeAllResponse")]
        MMC.MMCService.CommonService.AttorneyFirmType[] getAttorneyFirmTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAttorneyFirmTypeAll", ReplyAction="http://tempuri.org/ICommonService/getAttorneyFirmTypeAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.AttorneyFirmType[]> getAttorneyFirmTypeAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getLanguageAll", ReplyAction="http://tempuri.org/ICommonService/getLanguageAllResponse")]
        MMC.MMCService.CommonService.Language[] getLanguageAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getLanguageAll", ReplyAction="http://tempuri.org/ICommonService/getLanguageAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.Language[]> getLanguageAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getStateAll", ReplyAction="http://tempuri.org/ICommonService/getStateAllResponse")]
        MMC.MMCService.CommonService.State[] getStateAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getStateAll", ReplyAction="http://tempuri.org/ICommonService/getStateAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.State[]> getStateAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getStatusAll", ReplyAction="http://tempuri.org/ICommonService/getStatusAllResponse")]
        MMC.MMCService.CommonService.Status[] getStatusAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getStatusAll", ReplyAction="http://tempuri.org/ICommonService/getStatusAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.Status[]> getStatusAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getSpecialtiesAll", ReplyAction="http://tempuri.org/ICommonService/getSpecialtiesAllResponse")]
        MMC.MMCService.CommonService.Specialty[] getSpecialtiesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getSpecialtiesAll", ReplyAction="http://tempuri.org/ICommonService/getSpecialtiesAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.Specialty[]> getSpecialtiesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getCurrentMedicalConditionsAll", ReplyAction="http://tempuri.org/ICommonService/getCurrentMedicalConditionsAllResponse")]
        MMC.MMCService.CommonService.CurrentMedicalCondition[] getCurrentMedicalConditionsAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getCurrentMedicalConditionsAll", ReplyAction="http://tempuri.org/ICommonService/getCurrentMedicalConditionsAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.CurrentMedicalCondition[]> getCurrentMedicalConditionsAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getBodyPartsAll", ReplyAction="http://tempuri.org/ICommonService/getBodyPartsAllResponse")]
        MMC.MMCService.CommonService.BodyPart[] getBodyPartsAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getBodyPartsAll", ReplyAction="http://tempuri.org/ICommonService/getBodyPartsAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.BodyPart[]> getBodyPartsAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICD9CodesAll", ReplyAction="http://tempuri.org/ICommonService/getICD9CodesAllResponse")]
        MMC.MMCService.CommonService.ICD9Code[] getICD9CodesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICD9CodesAll", ReplyAction="http://tempuri.org/ICommonService/getICD9CodesAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.ICD9Code[]> getICD9CodesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICD9CodesByName", ReplyAction="http://tempuri.org/ICommonService/getICD9CodesByNameResponse")]
        MMC.MMCService.CommonService.PagedICD9Code getICD9CodesByName(string _searchtext, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICD9CodesByName", ReplyAction="http://tempuri.org/ICommonService/getICD9CodesByNameResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.PagedICD9Code> getICD9CodesByNameAsync(string _searchtext, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICD9CodesByCode", ReplyAction="http://tempuri.org/ICommonService/getICD9CodesByCodeResponse")]
        MMC.MMCService.CommonService.ICD9Code[] getICD9CodesByCode(string _searchtext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICD9CodesByCode", ReplyAction="http://tempuri.org/ICommonService/getICD9CodesByCodeResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.ICD9Code[]> getICD9CodesByCodeAsync(string _searchtext);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICD10CodesAll", ReplyAction="http://tempuri.org/ICommonService/getICD10CodesAllResponse")]
        MMC.MMCService.CommonService.ICD10Code[] getICD10CodesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICD10CodesAll", ReplyAction="http://tempuri.org/ICommonService/getICD10CodesAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.ICD10Code[]> getICD10CodesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICDCodesByNumberOrDescription", ReplyAction="http://tempuri.org/ICommonService/getICDCodesByNumberOrDescriptionResponse")]
        MMC.MMCService.CommonService.PagedICDCode getICDCodesByNumberOrDescription(string _searchtext, string ICDTab, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICDCodesByNumberOrDescription", ReplyAction="http://tempuri.org/ICommonService/getICDCodesByNumberOrDescriptionResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.PagedICDCode> getICDCodesByNumberOrDescriptionAsync(string _searchtext, string ICDTab, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICDCodesByNumber", ReplyAction="http://tempuri.org/ICommonService/getICDCodesByNumberResponse")]
        MMC.MMCService.CommonService.ICDCode[] getICDCodesByNumber(string _ICDNumber, string _ICDTab);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getICDCodesByNumber", ReplyAction="http://tempuri.org/ICommonService/getICDCodesByNumberResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.ICDCode[]> getICDCodesByNumberAsync(string _ICDNumber, string _ICDTab);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getClaimStatusesAll", ReplyAction="http://tempuri.org/ICommonService/getClaimStatusesAllResponse")]
        MMC.MMCService.CommonService.ClaimStatus[] getClaimStatusesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getClaimStatusesAll", ReplyAction="http://tempuri.org/ICommonService/getClaimStatusesAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.ClaimStatus[]> getClaimStatusesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getBodyPartStatusesAll", ReplyAction="http://tempuri.org/ICommonService/getBodyPartStatusesAllResponse")]
        MMC.MMCService.CommonService.BodyPartStatus[] getBodyPartStatusesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getBodyPartStatusesAll", ReplyAction="http://tempuri.org/ICommonService/getBodyPartStatusesAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.BodyPartStatus[]> getBodyPartStatusesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getFrequencyTypeAll", ReplyAction="http://tempuri.org/ICommonService/getFrequencyTypeAllResponse")]
        MMC.MMCService.CommonService.FrequencyType[] getFrequencyTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getFrequencyTypeAll", ReplyAction="http://tempuri.org/ICommonService/getFrequencyTypeAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.FrequencyType[]> getFrequencyTypeAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getDurationTypesAll", ReplyAction="http://tempuri.org/ICommonService/getDurationTypesAllResponse")]
        MMC.MMCService.CommonService.DurationType[] getDurationTypesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getDurationTypesAll", ReplyAction="http://tempuri.org/ICommonService/getDurationTypesAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.DurationType[]> getDurationTypesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getRequestTypeAll", ReplyAction="http://tempuri.org/ICommonService/getRequestTypeAllResponse")]
        MMC.MMCService.CommonService.RequestType[] getRequestTypeAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getRequestTypeAll", ReplyAction="http://tempuri.org/ICommonService/getRequestTypeAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.RequestType[]> getRequestTypeAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getTreatmentCategoriesAll", ReplyAction="http://tempuri.org/ICommonService/getTreatmentCategoriesAllResponse")]
        MMC.MMCService.CommonService.TreatmentCategory[] getTreatmentCategoriesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getTreatmentCategoriesAll", ReplyAction="http://tempuri.org/ICommonService/getTreatmentCategoriesAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.TreatmentCategory[]> getTreatmentCategoriesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getTreatmentTypesAll", ReplyAction="http://tempuri.org/ICommonService/getTreatmentTypesAllResponse")]
        MMC.MMCService.CommonService.TreatmentType[] getTreatmentTypesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getTreatmentTypesAll", ReplyAction="http://tempuri.org/ICommonService/getTreatmentTypesAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.TreatmentType[]> getTreatmentTypesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getTreatmentTypesByTreatmentCategoryID", ReplyAction="http://tempuri.org/ICommonService/getTreatmentTypesByTreatmentCategoryIDResponse")]
        MMC.MMCService.CommonService.TreatmentType[] getTreatmentTypesByTreatmentCategoryID(int _treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getTreatmentTypesByTreatmentCategoryID", ReplyAction="http://tempuri.org/ICommonService/getTreatmentTypesByTreatmentCategoryIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.TreatmentType[]> getTreatmentTypesByTreatmentCategoryIDAsync(int _treatmentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getDocumentCategoriesAll", ReplyAction="http://tempuri.org/ICommonService/getDocumentCategoriesAllResponse")]
        MMC.MMCService.CommonService.DocumentCategory[] getDocumentCategoriesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getDocumentCategoriesAll", ReplyAction="http://tempuri.org/ICommonService/getDocumentCategoriesAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.DocumentCategory[]> getDocumentCategoriesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getDocumentTypesAll", ReplyAction="http://tempuri.org/ICommonService/getDocumentTypesAllResponse")]
        MMC.MMCService.CommonService.DocumentType[] getDocumentTypesAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getDocumentTypesAll", ReplyAction="http://tempuri.org/ICommonService/getDocumentTypesAllResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.DocumentType[]> getDocumentTypesAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getDocumentTypeByDocumentCategoryID", ReplyAction="http://tempuri.org/ICommonService/getDocumentTypeByDocumentCategoryIDResponse")]
        MMC.MMCService.CommonService.DocumentType[] getDocumentTypeByDocumentCategoryID(int _documentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getDocumentTypeByDocumentCategoryID", ReplyAction="http://tempuri.org/ICommonService/getDocumentTypeByDocumentCategoryIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.DocumentType[]> getDocumentTypeByDocumentCategoryIDAsync(int _documentCategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/AddProcessLevelByReferralID", ReplyAction="http://tempuri.org/ICommonService/AddProcessLevelByReferralIDResponse")]
        int AddProcessLevelByReferralID(int _referralID, int _processLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/AddProcessLevelByReferralID", ReplyAction="http://tempuri.org/ICommonService/AddProcessLevelByReferralIDResponse")]
        System.Threading.Tasks.Task<int> AddProcessLevelByReferralIDAsync(int _referralID, int _processLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getPreviousProcessLevelsByReferralID", ReplyAction="http://tempuri.org/ICommonService/getPreviousProcessLevelsByReferralIDResponse")]
        MMC.MMCService.CommonService.RFAProcessLevels getPreviousProcessLevelsByReferralID(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getPreviousProcessLevelsByReferralID", ReplyAction="http://tempuri.org/ICommonService/getPreviousProcessLevelsByReferralIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.RFAProcessLevels> getPreviousProcessLevelsByReferralIDAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getMaxProcessLevelByReferralID", ReplyAction="http://tempuri.org/ICommonService/getMaxProcessLevelByReferralIDResponse")]
        int getMaxProcessLevelByReferralID(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getMaxProcessLevelByReferralID", ReplyAction="http://tempuri.org/ICommonService/getMaxProcessLevelByReferralIDResponse")]
        System.Threading.Tasks.Task<int> getMaxProcessLevelByReferralIDAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getProcessLevelsByReferralID", ReplyAction="http://tempuri.org/ICommonService/getProcessLevelsByReferralIDResponse")]
        MMC.MMCService.CommonService.RFAProcessLevels[] getProcessLevelsByReferralID(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getProcessLevelsByReferralID", ReplyAction="http://tempuri.org/ICommonService/getProcessLevelsByReferralIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.RFAProcessLevels[]> getProcessLevelsByReferralIDAsync(int _referralID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getPatientComorbidConditionsByPatientID", ReplyAction="http://tempuri.org/ICommonService/getPatientComorbidConditionsByPatientIDResponse" +
            "")]
        string getPatientComorbidConditionsByPatientID(int PatientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getPatientComorbidConditionsByPatientID", ReplyAction="http://tempuri.org/ICommonService/getPatientComorbidConditionsByPatientIDResponse" +
            "")]
        System.Threading.Tasks.Task<string> getPatientComorbidConditionsByPatientIDAsync(int PatientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetStorageStuctureByID", ReplyAction="http://tempuri.org/ICommonService/GetStorageStuctureByIDResponse")]
        MMC.MMCService.CommonService.StorageModel GetStorageStuctureByID(int _id, char _by);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetStorageStuctureByID", ReplyAction="http://tempuri.org/ICommonService/GetStorageStuctureByIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.StorageModel> GetStorageStuctureByIDAsync(int _id, char _by);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAdditionalDocumentsByPatientID", ReplyAction="http://tempuri.org/ICommonService/getAdditionalDocumentsByPatientIDResponse")]
        MMC.MMCService.CommonService.PagedAdditionalDocument getAdditionalDocumentsByPatientID(int _patientID, int _patientClaimID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAdditionalDocumentsByPatientID", ReplyAction="http://tempuri.org/ICommonService/getAdditionalDocumentsByPatientIDResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.PagedAdditionalDocument> getAdditionalDocumentsByPatientIDAsync(int _patientID, int _patientClaimID, int _skip, int _take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getNoOfReferralCountAccToProcessLevel", ReplyAction="http://tempuri.org/ICommonService/getNoOfReferralCountAccToProcessLevelResponse")]
        MMC.MMCService.CommonService.NoOfReferralCount[] getNoOfReferralCountAccToProcessLevel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getNoOfReferralCountAccToProcessLevel", ReplyAction="http://tempuri.org/ICommonService/getNoOfReferralCountAccToProcessLevelResponse")]
        System.Threading.Tasks.Task<MMC.MMCService.CommonService.NoOfReferralCount[]> getNoOfReferralCountAccToProcessLevelAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommonServiceChannel : MMC.MMCService.CommonService.ICommonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonServiceClient : System.ServiceModel.ClientBase<MMC.MMCService.CommonService.ICommonService>, MMC.MMCService.CommonService.ICommonService {
        
        public CommonServiceClient() {
        }
        
        public CommonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MMC.MMCService.CommonService.AttorneyFirmType[] getAttorneyFirmTypeAll() {
            return base.Channel.getAttorneyFirmTypeAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.AttorneyFirmType[]> getAttorneyFirmTypeAllAsync() {
            return base.Channel.getAttorneyFirmTypeAllAsync();
        }
        
        public MMC.MMCService.CommonService.Language[] getLanguageAll() {
            return base.Channel.getLanguageAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.Language[]> getLanguageAllAsync() {
            return base.Channel.getLanguageAllAsync();
        }
        
        public MMC.MMCService.CommonService.State[] getStateAll() {
            return base.Channel.getStateAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.State[]> getStateAllAsync() {
            return base.Channel.getStateAllAsync();
        }
        
        public MMC.MMCService.CommonService.Status[] getStatusAll() {
            return base.Channel.getStatusAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.Status[]> getStatusAllAsync() {
            return base.Channel.getStatusAllAsync();
        }
        
        public MMC.MMCService.CommonService.Specialty[] getSpecialtiesAll() {
            return base.Channel.getSpecialtiesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.Specialty[]> getSpecialtiesAllAsync() {
            return base.Channel.getSpecialtiesAllAsync();
        }
        
        public MMC.MMCService.CommonService.CurrentMedicalCondition[] getCurrentMedicalConditionsAll() {
            return base.Channel.getCurrentMedicalConditionsAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.CurrentMedicalCondition[]> getCurrentMedicalConditionsAllAsync() {
            return base.Channel.getCurrentMedicalConditionsAllAsync();
        }
        
        public MMC.MMCService.CommonService.BodyPart[] getBodyPartsAll() {
            return base.Channel.getBodyPartsAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.BodyPart[]> getBodyPartsAllAsync() {
            return base.Channel.getBodyPartsAllAsync();
        }
        
        public MMC.MMCService.CommonService.ICD9Code[] getICD9CodesAll() {
            return base.Channel.getICD9CodesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.ICD9Code[]> getICD9CodesAllAsync() {
            return base.Channel.getICD9CodesAllAsync();
        }
        
        public MMC.MMCService.CommonService.PagedICD9Code getICD9CodesByName(string _searchtext, int _skip, int _take) {
            return base.Channel.getICD9CodesByName(_searchtext, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.PagedICD9Code> getICD9CodesByNameAsync(string _searchtext, int _skip, int _take) {
            return base.Channel.getICD9CodesByNameAsync(_searchtext, _skip, _take);
        }
        
        public MMC.MMCService.CommonService.ICD9Code[] getICD9CodesByCode(string _searchtext) {
            return base.Channel.getICD9CodesByCode(_searchtext);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.ICD9Code[]> getICD9CodesByCodeAsync(string _searchtext) {
            return base.Channel.getICD9CodesByCodeAsync(_searchtext);
        }
        
        public MMC.MMCService.CommonService.ICD10Code[] getICD10CodesAll() {
            return base.Channel.getICD10CodesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.ICD10Code[]> getICD10CodesAllAsync() {
            return base.Channel.getICD10CodesAllAsync();
        }
        
        public MMC.MMCService.CommonService.PagedICDCode getICDCodesByNumberOrDescription(string _searchtext, string ICDTab, int skip, int take) {
            return base.Channel.getICDCodesByNumberOrDescription(_searchtext, ICDTab, skip, take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.PagedICDCode> getICDCodesByNumberOrDescriptionAsync(string _searchtext, string ICDTab, int skip, int take) {
            return base.Channel.getICDCodesByNumberOrDescriptionAsync(_searchtext, ICDTab, skip, take);
        }
        
        public MMC.MMCService.CommonService.ICDCode[] getICDCodesByNumber(string _ICDNumber, string _ICDTab) {
            return base.Channel.getICDCodesByNumber(_ICDNumber, _ICDTab);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.ICDCode[]> getICDCodesByNumberAsync(string _ICDNumber, string _ICDTab) {
            return base.Channel.getICDCodesByNumberAsync(_ICDNumber, _ICDTab);
        }
        
        public MMC.MMCService.CommonService.ClaimStatus[] getClaimStatusesAll() {
            return base.Channel.getClaimStatusesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.ClaimStatus[]> getClaimStatusesAllAsync() {
            return base.Channel.getClaimStatusesAllAsync();
        }
        
        public MMC.MMCService.CommonService.BodyPartStatus[] getBodyPartStatusesAll() {
            return base.Channel.getBodyPartStatusesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.BodyPartStatus[]> getBodyPartStatusesAllAsync() {
            return base.Channel.getBodyPartStatusesAllAsync();
        }
        
        public MMC.MMCService.CommonService.FrequencyType[] getFrequencyTypeAll() {
            return base.Channel.getFrequencyTypeAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.FrequencyType[]> getFrequencyTypeAllAsync() {
            return base.Channel.getFrequencyTypeAllAsync();
        }
        
        public MMC.MMCService.CommonService.DurationType[] getDurationTypesAll() {
            return base.Channel.getDurationTypesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.DurationType[]> getDurationTypesAllAsync() {
            return base.Channel.getDurationTypesAllAsync();
        }
        
        public MMC.MMCService.CommonService.RequestType[] getRequestTypeAll() {
            return base.Channel.getRequestTypeAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.RequestType[]> getRequestTypeAllAsync() {
            return base.Channel.getRequestTypeAllAsync();
        }
        
        public MMC.MMCService.CommonService.TreatmentCategory[] getTreatmentCategoriesAll() {
            return base.Channel.getTreatmentCategoriesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.TreatmentCategory[]> getTreatmentCategoriesAllAsync() {
            return base.Channel.getTreatmentCategoriesAllAsync();
        }
        
        public MMC.MMCService.CommonService.TreatmentType[] getTreatmentTypesAll() {
            return base.Channel.getTreatmentTypesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.TreatmentType[]> getTreatmentTypesAllAsync() {
            return base.Channel.getTreatmentTypesAllAsync();
        }
        
        public MMC.MMCService.CommonService.TreatmentType[] getTreatmentTypesByTreatmentCategoryID(int _treatmentCategoryID) {
            return base.Channel.getTreatmentTypesByTreatmentCategoryID(_treatmentCategoryID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.TreatmentType[]> getTreatmentTypesByTreatmentCategoryIDAsync(int _treatmentCategoryID) {
            return base.Channel.getTreatmentTypesByTreatmentCategoryIDAsync(_treatmentCategoryID);
        }
        
        public MMC.MMCService.CommonService.DocumentCategory[] getDocumentCategoriesAll() {
            return base.Channel.getDocumentCategoriesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.DocumentCategory[]> getDocumentCategoriesAllAsync() {
            return base.Channel.getDocumentCategoriesAllAsync();
        }
        
        public MMC.MMCService.CommonService.DocumentType[] getDocumentTypesAll() {
            return base.Channel.getDocumentTypesAll();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.DocumentType[]> getDocumentTypesAllAsync() {
            return base.Channel.getDocumentTypesAllAsync();
        }
        
        public MMC.MMCService.CommonService.DocumentType[] getDocumentTypeByDocumentCategoryID(int _documentCategoryID) {
            return base.Channel.getDocumentTypeByDocumentCategoryID(_documentCategoryID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.DocumentType[]> getDocumentTypeByDocumentCategoryIDAsync(int _documentCategoryID) {
            return base.Channel.getDocumentTypeByDocumentCategoryIDAsync(_documentCategoryID);
        }
        
        public int AddProcessLevelByReferralID(int _referralID, int _processLevel) {
            return base.Channel.AddProcessLevelByReferralID(_referralID, _processLevel);
        }
        
        public System.Threading.Tasks.Task<int> AddProcessLevelByReferralIDAsync(int _referralID, int _processLevel) {
            return base.Channel.AddProcessLevelByReferralIDAsync(_referralID, _processLevel);
        }
        
        public MMC.MMCService.CommonService.RFAProcessLevels getPreviousProcessLevelsByReferralID(int _referralID) {
            return base.Channel.getPreviousProcessLevelsByReferralID(_referralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.RFAProcessLevels> getPreviousProcessLevelsByReferralIDAsync(int _referralID) {
            return base.Channel.getPreviousProcessLevelsByReferralIDAsync(_referralID);
        }
        
        public int getMaxProcessLevelByReferralID(int _referralID) {
            return base.Channel.getMaxProcessLevelByReferralID(_referralID);
        }
        
        public System.Threading.Tasks.Task<int> getMaxProcessLevelByReferralIDAsync(int _referralID) {
            return base.Channel.getMaxProcessLevelByReferralIDAsync(_referralID);
        }
        
        public MMC.MMCService.CommonService.RFAProcessLevels[] getProcessLevelsByReferralID(int _referralID) {
            return base.Channel.getProcessLevelsByReferralID(_referralID);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.RFAProcessLevels[]> getProcessLevelsByReferralIDAsync(int _referralID) {
            return base.Channel.getProcessLevelsByReferralIDAsync(_referralID);
        }
        
        public string getPatientComorbidConditionsByPatientID(int PatientID) {
            return base.Channel.getPatientComorbidConditionsByPatientID(PatientID);
        }
        
        public System.Threading.Tasks.Task<string> getPatientComorbidConditionsByPatientIDAsync(int PatientID) {
            return base.Channel.getPatientComorbidConditionsByPatientIDAsync(PatientID);
        }
        
        public MMC.MMCService.CommonService.StorageModel GetStorageStuctureByID(int _id, char _by) {
            return base.Channel.GetStorageStuctureByID(_id, _by);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.StorageModel> GetStorageStuctureByIDAsync(int _id, char _by) {
            return base.Channel.GetStorageStuctureByIDAsync(_id, _by);
        }
        
        public MMC.MMCService.CommonService.PagedAdditionalDocument getAdditionalDocumentsByPatientID(int _patientID, int _patientClaimID, int _skip, int _take) {
            return base.Channel.getAdditionalDocumentsByPatientID(_patientID, _patientClaimID, _skip, _take);
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.PagedAdditionalDocument> getAdditionalDocumentsByPatientIDAsync(int _patientID, int _patientClaimID, int _skip, int _take) {
            return base.Channel.getAdditionalDocumentsByPatientIDAsync(_patientID, _patientClaimID, _skip, _take);
        }
        
        public MMC.MMCService.CommonService.NoOfReferralCount[] getNoOfReferralCountAccToProcessLevel() {
            return base.Channel.getNoOfReferralCountAccToProcessLevel();
        }
        
        public System.Threading.Tasks.Task<MMC.MMCService.CommonService.NoOfReferralCount[]> getNoOfReferralCountAccToProcessLevelAsync() {
            return base.Channel.getNoOfReferralCountAccToProcessLevelAsync();
        }
    }
}
